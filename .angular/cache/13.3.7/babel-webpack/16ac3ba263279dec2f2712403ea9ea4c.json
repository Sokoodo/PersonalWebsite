{"ast":null,"code":"(function () {\n  var d;\n  window.AmCharts ? d = window.AmCharts : (d = {}, window.AmCharts = d, d.themes = {}, d.maps = {}, d.inheriting = {}, d.charts = [], d.onReadyArray = [], d.useUTC = !1, d.updateRate = 60, d.uid = 0, d.lang = {}, d.translations = {}, d.mapTranslations = {}, d.windows = {}, d.initHandlers = [], d.amString = \"am\", d.pmString = \"pm\");\n\n  d.Class = function (a) {\n    var b = function () {\n      arguments[0] !== d.inheriting && (this.events = {}, this.construct.apply(this, arguments));\n    };\n\n    a.inherits ? (b.prototype = new a.inherits(d.inheriting), b.base = a.inherits.prototype, delete a.inherits) : (b.prototype.createEvents = function () {\n      for (var a = 0; a < arguments.length; a++) this.events[arguments[a]] = [];\n    }, b.prototype.listenTo = function (a, b, c) {\n      this.removeListener(a, b, c);\n      a.events[b].push({\n        handler: c,\n        scope: this\n      });\n    }, b.prototype.addListener = function (a, b, c) {\n      this.removeListener(this, a, b);\n      a && this.events[a] && this.events[a].push({\n        handler: b,\n        scope: c\n      });\n    }, b.prototype.removeListener = function (a, b, c) {\n      if (a && a.events && (a = a.events[b])) for (b = a.length - 1; 0 <= b; b--) a[b].handler === c && a.splice(b, 1);\n    }, b.prototype.fire = function (a) {\n      for (var b = this.events[a.type], c = 0; c < b.length; c++) {\n        var d = b[c];\n        d.handler.call(d.scope, a);\n      }\n    });\n\n    for (var c in a) b.prototype[c] = a[c];\n\n    return b;\n  };\n\n  d.addChart = function (a) {\n    window.requestAnimationFrame ? d.animationRequested || (d.animationRequested = !0, window.requestAnimationFrame(d.update)) : d.updateInt || (d.updateInt = setInterval(function () {\n      d.update();\n    }, Math.round(1E3 / d.updateRate)));\n    d.charts.push(a);\n  };\n\n  d.removeChart = function (a) {\n    for (var b = d.charts, c = b.length - 1; 0 <= c; c--) b[c] == a && b.splice(c, 1);\n\n    0 === b.length && (d.requestAnimation && (window.cancelAnimationFrame(d.requestAnimation), d.animationRequested = !1), d.updateInt && (clearInterval(d.updateInt), d.updateInt = NaN));\n  };\n\n  d.isModern = !0;\n\n  d.getIEVersion = function () {\n    var a = 0,\n        b,\n        c;\n    \"Microsoft Internet Explorer\" == navigator.appName && (b = navigator.userAgent, c = /MSIE ([0-9]{1,}[.0-9]{0,})/, null !== c.exec(b) && (a = parseFloat(RegExp.$1)));\n    return a;\n  };\n\n  d.applyLang = function (a, b) {\n    var c = d.translations;\n    b.dayNames = d.extend({}, d.dayNames);\n    b.shortDayNames = d.extend({}, d.shortDayNames);\n    b.monthNames = d.extend({}, d.monthNames);\n    b.shortMonthNames = d.extend({}, d.shortMonthNames);\n    b.amString = \"am\";\n    b.pmString = \"pm\";\n    c && (c = c[a]) && (d.lang = c, b.langObj = c, c.monthNames && (b.dayNames = d.extend({}, c.dayNames), b.shortDayNames = d.extend({}, c.shortDayNames), b.monthNames = d.extend({}, c.monthNames), b.shortMonthNames = d.extend({}, c.shortMonthNames)), c.am && (b.amString = c.am), c.pm && (b.pmString = c.pm));\n    d.amString = b.amString;\n    d.pmString = b.pmString;\n  };\n\n  d.IEversion = d.getIEVersion();\n  9 > d.IEversion && 0 < d.IEversion && (d.isModern = !1, d.isIE = !0);\n  d.dx = 0;\n  d.dy = 0;\n  if (document.addEventListener || window.opera) d.isNN = !0, d.isIE = !1, d.dx = .5, d.dy = .5;\n  document.attachEvent && (d.isNN = !1, d.isIE = !0, d.isModern || (d.dx = 0, d.dy = 0));\n  window.chrome && (d.chrome = !0);\n\n  d.handleMouseUp = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n      e && e.handleReleaseOutside && e.handleReleaseOutside(a);\n    }\n  };\n\n  d.handleMouseMove = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n      e && e.handleMouseMove && e.handleMouseMove(a);\n    }\n  };\n\n  d.handleWheel = function (a) {\n    for (var b = d.charts, c = 0; c < b.length; c++) {\n      var e = b[c];\n\n      if (e && e.mouseIsOver) {\n        (e.mouseWheelScrollEnabled || e.mouseWheelZoomEnabled) && e.handleWheel && e.handleWheel(a);\n        break;\n      }\n    }\n  };\n\n  d.resetMouseOver = function () {\n    for (var a = d.charts, b = 0; b < a.length; b++) {\n      var c = a[b];\n      c && (c.mouseIsOver = !1);\n    }\n  };\n\n  d.ready = function (a) {\n    d.onReadyArray.push(a);\n  };\n\n  d.handleLoad = function () {\n    d.isReady = !0;\n\n    for (var a = d.onReadyArray, b = 0; b < a.length; b++) {\n      var c = a[b];\n      isNaN(d.processDelay) ? c() : setTimeout(c, d.processDelay * b);\n    }\n\n    d.onReadyArray = [];\n  };\n\n  d.addInitHandler = function (a, b) {\n    d.initHandlers.push({\n      method: a,\n      types: b\n    });\n  };\n\n  d.callInitHandler = function (a) {\n    var b = d.initHandlers;\n    if (d.initHandlers) for (var c = 0; c < b.length; c++) {\n      var e = b[c];\n      e.types ? d.isInArray(e.types, a.type) && e.method(a) : e.method(a);\n    }\n  };\n\n  d.getUniqueId = function () {\n    d.uid++;\n    return \"AmChartsEl-\" + d.uid;\n  };\n\n  d.isNN && (document.addEventListener(\"mousemove\", d.handleMouseMove), document.addEventListener(\"mouseup\", d.handleMouseUp, !0), window.addEventListener(\"load\", d.handleLoad, !0));\n  d.isIE && (document.attachEvent(\"onmousemove\", d.handleMouseMove), document.attachEvent(\"onmouseup\", d.handleMouseUp), window.attachEvent(\"onload\", d.handleLoad));\n\n  d.addWheelListeners = function () {\n    d.wheelIsListened || (d.isNN && (window.addEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.addEventListener(\"mousewheel\", d.handleWheel, !0)), d.isIE && document.attachEvent(\"onmousewheel\", d.handleWheel));\n    d.wheelIsListened = !0;\n  };\n\n  d.clear = function () {\n    var a = d.charts;\n    if (a) for (var b = a.length - 1; 0 <= b; b--) a[b].clear();\n    d.updateInt && clearInterval(d.updateInt);\n    d.requestAnimation && window.cancelAnimationFrame(d.requestAnimation);\n    d.charts = [];\n    d.isNN && (document.removeEventListener(\"mousemove\", d.handleMouseMove, !0), document.removeEventListener(\"mouseup\", d.handleMouseUp, !0), window.removeEventListener(\"load\", d.handleLoad, !0), window.removeEventListener(\"DOMMouseScroll\", d.handleWheel, !0), document.removeEventListener(\"mousewheel\", d.handleWheel, !0));\n    d.isIE && (document.detachEvent(\"onmousemove\", d.handleMouseMove), document.detachEvent(\"onmouseup\", d.handleMouseUp), window.detachEvent(\"onload\", d.handleLoad));\n  };\n\n  d.makeChart = function (a, b, c) {\n    var e = b.type,\n        f = b.theme;\n    d.isString(f) && (f = d.themes[f], b.theme = f);\n    var g;\n\n    switch (e) {\n      case \"serial\":\n        g = new d.AmSerialChart(f);\n        break;\n\n      case \"xy\":\n        g = new d.AmXYChart(f);\n        break;\n\n      case \"pie\":\n        g = new d.AmPieChart(f);\n        break;\n\n      case \"radar\":\n        g = new d.AmRadarChart(f);\n        break;\n\n      case \"gauge\":\n        g = new d.AmAngularGauge(f);\n        break;\n\n      case \"funnel\":\n        g = new d.AmFunnelChart(f);\n        break;\n\n      case \"map\":\n        g = new d.AmMap(f);\n        break;\n\n      case \"stock\":\n        g = new d.AmStockChart(f);\n        break;\n\n      case \"gantt\":\n        g = new d.AmGanttChart(f);\n    }\n\n    d.extend(g, b);\n    d.isReady ? isNaN(c) ? g.write(a) : setTimeout(function () {\n      d.realWrite(g, a);\n    }, c) : d.ready(function () {\n      isNaN(c) ? g.write(a) : setTimeout(function () {\n        d.realWrite(g, a);\n      }, c);\n    });\n    return g;\n  };\n\n  d.realWrite = function (a, b) {\n    a.write(b);\n  };\n\n  d.updateCount = 0;\n  d.validateAt = Math.round(d.updateRate / 10);\n\n  d.update = function () {\n    var a = d.charts;\n    d.updateCount++;\n    var b = !1;\n    d.updateCount == d.validateAt && (b = !0, d.updateCount = 0);\n    if (a) for (var c = a.length - 1; 0 <= c; c--) a[c].update && a[c].update(), b && (a[c].autoResize ? a[c].validateSize && a[c].validateSize() : a[c].premeasure && a[c].premeasure());\n    window.requestAnimationFrame && (d.requestAnimation = window.requestAnimationFrame(d.update));\n  };\n\n  \"complete\" == document.readyState && d.handleLoad();\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.toBoolean = function (a, b) {\n    if (void 0 === a) return b;\n\n    switch (String(a).toLowerCase()) {\n      case \"true\":\n      case \"yes\":\n      case \"1\":\n        return !0;\n\n      case \"false\":\n      case \"no\":\n      case \"0\":\n      case null:\n        return !1;\n\n      default:\n        return !!a;\n    }\n  };\n\n  d.removeFromArray = function (a, b) {\n    var c;\n    if (void 0 !== b && void 0 !== a) for (c = a.length - 1; 0 <= c; c--) a[c] == b && a.splice(c, 1);\n  };\n\n  d.getPath = function () {\n    var a = document.getElementsByTagName(\"script\");\n    if (a) for (var b = 0; b < a.length; b++) {\n      var c = a[b].src;\n      if (-1 !== c.search(/\\/(amcharts|ammap)\\.js/)) return c.replace(/\\/(amcharts|ammap)\\.js.*/, \"/\");\n    }\n  };\n\n  d.normalizeUrl = function (a) {\n    return \"\" !== a && -1 === a.search(/\\/$/) ? a + \"/\" : a;\n  };\n\n  d.isAbsolute = function (a) {\n    return 0 === a.search(/^http[s]?:|^\\//);\n  };\n\n  d.isInArray = function (a, b) {\n    for (var c = 0; c < a.length; c++) if (a[c] == b) return !0;\n\n    return !1;\n  };\n\n  d.getDecimals = function (a) {\n    var b = 0;\n    isNaN(a) || (a = String(a), -1 != a.indexOf(\"e-\") ? b = Number(a.split(\"-\")[1]) : -1 != a.indexOf(\".\") && (b = a.split(\".\")[1].length));\n    return b;\n  };\n\n  d.wordwrap = function (a, b, c, e) {\n    var f, g, h, k;\n    a += \"\";\n    if (1 > b) return a;\n    f = -1;\n\n    for (a = (k = a.split(/\\r\\n|\\n|\\r/)).length; ++f < a; k[f] += h) {\n      h = k[f];\n\n      for (k[f] = \"\"; h.length > b; k[f] += d.trim(h.slice(0, g)) + ((h = h.slice(g)).length ? c : \"\")) g = 2 == e || (g = h.slice(0, b + 1).match(/\\S*(\\s)?$/))[1] ? b : g.input.length - g[0].length || 1 == e && b || g.input.length + (g = h.slice(b).match(/^\\S*/))[0].length;\n\n      h = d.trim(h);\n    }\n\n    return k.join(c);\n  };\n\n  d.trim = function (a) {\n    return a.replace(/^[\\s\\uFEFF\\xA0]+|[\\s\\uFEFF\\xA0]+$/g, \"\");\n  };\n\n  d.wrappedText = function (a, b, c, e, f, g, h, k) {\n    var l = d.text(a, b, c, e, f, g, h);\n\n    if (l) {\n      var m = l.getBBox();\n\n      if (m.width > k) {\n        var n = \"\\n\";\n        d.isModern || (n = \"<br>\");\n        k = Math.floor(k / (m.width / b.length));\n        2 < k && (k -= 2);\n        b = d.wordwrap(b, k, n, !0);\n        l.remove();\n        l = d.text(a, b, c, e, f, g, h);\n      }\n    }\n\n    return l;\n  };\n\n  d.getStyle = function (a, b) {\n    var c = \"\";\n    if (document.defaultView && document.defaultView.getComputedStyle) try {\n      c = document.defaultView.getComputedStyle(a, \"\").getPropertyValue(b);\n    } catch (e) {} else a.currentStyle && (b = b.replace(/\\-(\\w)/g, function (a, b) {\n      return b.toUpperCase();\n    }), c = a.currentStyle[b]);\n    return c;\n  };\n\n  d.removePx = function (a) {\n    if (void 0 !== a) return Number(a.substring(0, a.length - 2));\n  };\n\n  d.getURL = function (a, b) {\n    if (a) if (\"_self\" != b && b) {\n      if (\"_top\" == b && window.top) window.top.location.href = a;else if (\"_parent\" == b && window.parent) window.parent.location.href = a;else if (\"_blank\" == b) window.open(a);else {\n        var c = document.getElementsByName(b)[0];\n        c ? c.src = a : (c = d.windows[b]) ? c.opener && !c.opener.closed ? c.location.href = a : d.windows[b] = window.open(a) : d.windows[b] = window.open(a);\n      }\n    } else window.location.href = a;\n  };\n\n  d.ifArray = function (a) {\n    return a && \"object\" == typeof a && 0 < a.length ? !0 : !1;\n  };\n\n  d.callMethod = function (a, b) {\n    var c;\n\n    for (c = 0; c < b.length; c++) {\n      var e = b[c];\n\n      if (e) {\n        if (e[a]) e[a]();\n        var d = e.length;\n\n        if (0 < d) {\n          var g;\n\n          for (g = 0; g < d; g++) {\n            var h = e[g];\n            if (h && h[a]) h[a]();\n          }\n        }\n      }\n    }\n  };\n\n  d.toNumber = function (a) {\n    return \"number\" == typeof a ? a : Number(String(a).replace(/[^0-9\\-.]+/g, \"\"));\n  };\n\n  d.toColor = function (a) {\n    if (\"\" !== a && void 0 !== a) if (-1 != a.indexOf(\",\")) {\n      a = a.split(\",\");\n      var b;\n\n      for (b = 0; b < a.length; b++) {\n        var c = a[b].substring(a[b].length - 6, a[b].length);\n        a[b] = \"#\" + c;\n      }\n    } else a = a.substring(a.length - 6, a.length), a = \"#\" + a;\n    return a;\n  };\n\n  d.toCoordinate = function (a, b, c) {\n    var e;\n    void 0 !== a && (a = String(a), c && c < b && (b = c), e = Number(a), -1 != a.indexOf(\"!\") && (e = b - Number(a.substr(1))), -1 != a.indexOf(\"%\") && (e = b * Number(a.substr(0, a.length - 1)) / 100));\n    return e;\n  };\n\n  d.fitToBounds = function (a, b, c) {\n    a < b && (a = b);\n    a > c && (a = c);\n    return a;\n  };\n\n  d.isDefined = function (a) {\n    return void 0 === a ? !1 : !0;\n  };\n\n  d.stripNumbers = function (a) {\n    return a.replace(/[0-9]+/g, \"\");\n  };\n\n  d.roundTo = function (a, b) {\n    if (0 > b) return a;\n    var c = Math.pow(10, b);\n    return Math.round(a * c) / c;\n  };\n\n  d.toFixed = function (a, b) {\n    var c = !1;\n    0 > a && (c = !0, a = Math.abs(a));\n    var e = String(Math.round(a * Math.pow(10, b)));\n\n    if (0 < b) {\n      var d = e.length;\n\n      if (d < b) {\n        var g;\n\n        for (g = 0; g < b - d; g++) e = \"0\" + e;\n      }\n\n      d = e.substring(0, e.length - b);\n      \"\" === d && (d = 0);\n      e = d + \".\" + e.substring(e.length - b, e.length);\n      return c ? \"-\" + e : e;\n    }\n\n    return String(e);\n  };\n\n  d.formatDuration = function (a, b, c, e, f, g) {\n    var h = d.intervals,\n        k = g.decimalSeparator;\n\n    if (a >= h[b].contains) {\n      var l = a - Math.floor(a / h[b].contains) * h[b].contains;\n      \"ss\" == b ? (l = d.formatNumber(l, g), 1 == l.split(k)[0].length && (l = \"0\" + l)) : l = d.roundTo(l, g.precision);\n      (\"mm\" == b || \"hh\" == b) && 10 > l && (l = \"0\" + l);\n      c = l + \"\" + e[b] + \"\" + c;\n      a = Math.floor(a / h[b].contains);\n      b = h[b].nextInterval;\n      return d.formatDuration(a, b, c, e, f, g);\n    }\n\n    \"ss\" == b && (a = d.formatNumber(a, g), 1 == a.split(k)[0].length && (a = \"0\" + a));\n    (\"mm\" == b || \"hh\" == b) && 10 > a && (a = \"0\" + a);\n    c = a + \"\" + e[b] + \"\" + c;\n    if (h[f].count > h[b].count) for (a = h[b].count; a < h[f].count; a++) b = h[b].nextInterval, \"ss\" == b || \"mm\" == b || \"hh\" == b ? c = \"00\" + e[b] + \"\" + c : \"DD\" == b && (c = \"0\" + e[b] + \"\" + c);\n    \":\" == c.charAt(c.length - 1) && (c = c.substring(0, c.length - 1));\n    return c;\n  };\n\n  d.formatNumber = function (a, b, c, e, f) {\n    a = d.roundTo(a, b.precision);\n    isNaN(c) && (c = b.precision);\n    var g = b.decimalSeparator;\n    b = b.thousandsSeparator;\n    var h;\n    h = 0 > a ? \"-\" : \"\";\n    a = Math.abs(a);\n    var k = String(a),\n        l = !1;\n    -1 != k.indexOf(\"e\") && (l = !0);\n    0 <= c && !l && (k = d.toFixed(a, c));\n    var m = \"\";\n    if (l) m = k;else {\n      var k = k.split(\".\"),\n          l = String(k[0]),\n          n;\n\n      for (n = l.length; 0 <= n; n -= 3) m = n != l.length ? 0 !== n ? l.substring(n - 3, n) + b + m : l.substring(n - 3, n) + m : l.substring(n - 3, n);\n\n      void 0 !== k[1] && (m = m + g + k[1]);\n      void 0 !== c && 0 < c && \"0\" != m && (m = d.addZeroes(m, g, c));\n    }\n    m = h + m;\n    \"\" === h && !0 === e && 0 !== a && (m = \"+\" + m);\n    !0 === f && (m += \"%\");\n    return m;\n  };\n\n  d.addZeroes = function (a, b, c) {\n    a = a.split(b);\n    void 0 === a[1] && 0 < c && (a[1] = \"0\");\n    return a[1].length < c ? (a[1] += \"0\", d.addZeroes(a[0] + b + a[1], b, c)) : void 0 !== a[1] ? a[0] + b + a[1] : a[0];\n  };\n\n  d.scientificToNormal = function (a) {\n    var b;\n    a = String(a).split(\"e\");\n    var c;\n\n    if (\"-\" == a[1].substr(0, 1)) {\n      b = \"0.\";\n\n      for (c = 0; c < Math.abs(Number(a[1])) - 1; c++) b += \"0\";\n\n      b += a[0].split(\".\").join(\"\");\n    } else {\n      var e = 0;\n      b = a[0].split(\".\");\n      b[1] && (e = b[1].length);\n      b = a[0].split(\".\").join(\"\");\n\n      for (c = 0; c < Math.abs(Number(a[1])) - e; c++) b += \"0\";\n    }\n\n    return b;\n  };\n\n  d.toScientific = function (a, b) {\n    if (0 === a) return \"0\";\n    var c = Math.floor(Math.log(Math.abs(a)) * Math.LOG10E),\n        e = String(e).split(\".\").join(b);\n    return String(e) + \"e\" + c;\n  };\n\n  d.randomColor = function () {\n    return \"#\" + (\"00000\" + (16777216 * Math.random() << 0).toString(16)).substr(-6);\n  };\n\n  d.hitTest = function (a, b, c) {\n    var e = !1,\n        f = a.x,\n        g = a.x + a.width,\n        h = a.y,\n        k = a.y + a.height,\n        l = d.isInRectangle;\n    e || (e = l(f, h, b));\n    e || (e = l(f, k, b));\n    e || (e = l(g, h, b));\n    e || (e = l(g, k, b));\n    e || !0 === c || (e = d.hitTest(b, a, !0));\n    return e;\n  };\n\n  d.isInRectangle = function (a, b, c) {\n    return a >= c.x - 5 && a <= c.x + c.width + 5 && b >= c.y - 5 && b <= c.y + c.height + 5 ? !0 : !1;\n  };\n\n  d.isPercents = function (a) {\n    if (-1 != String(a).indexOf(\"%\")) return !0;\n  };\n\n  d.formatValue = function (a, b, c, e, f, g, h, k) {\n    if (b) {\n      void 0 === f && (f = \"\");\n      var l;\n\n      for (l = 0; l < c.length; l++) {\n        var m = c[l],\n            n = b[m];\n        void 0 !== n && (n = g ? d.addPrefix(n, k, h, e) : d.formatNumber(n, e), a = a.replace(new RegExp(\"\\\\[\\\\[\" + f + \"\" + m + \"\\\\]\\\\]\", \"g\"), n));\n      }\n    }\n\n    return a;\n  };\n\n  d.formatDataContextValue = function (a, b) {\n    if (a) {\n      var c = a.match(/\\[\\[.*?\\]\\]/g),\n          e;\n\n      for (e = 0; e < c.length; e++) {\n        var d = c[e],\n            d = d.substr(2, d.length - 4);\n        void 0 !== b[d] && (a = a.replace(new RegExp(\"\\\\[\\\\[\" + d + \"\\\\]\\\\]\", \"g\"), b[d]));\n      }\n    }\n\n    return a;\n  };\n\n  d.massReplace = function (a, b) {\n    for (var c in b) if (b.hasOwnProperty(c)) {\n      var e = b[c];\n      void 0 === e && (e = \"\");\n      a = a.replace(c, e);\n    }\n\n    return a;\n  };\n\n  d.cleanFromEmpty = function (a) {\n    return a.replace(/\\[\\[[^\\]]*\\]\\]/g, \"\");\n  };\n\n  d.addPrefix = function (a, b, c, e, f) {\n    var g = d.formatNumber(a, e),\n        h = \"\",\n        k,\n        l,\n        m;\n    if (0 === a) return \"0\";\n    0 > a && (h = \"-\");\n    a = Math.abs(a);\n    if (1 < a) for (k = b.length - 1; -1 < k; k--) {\n      if (a >= b[k].number && (l = a / b[k].number, m = Number(e.precision), 1 > m && (m = 1), c = d.roundTo(l, m), m = d.formatNumber(c, {\n        precision: -1,\n        decimalSeparator: e.decimalSeparator,\n        thousandsSeparator: e.thousandsSeparator\n      }), !f || l == c)) {\n        g = h + \"\" + m + \"\" + b[k].prefix;\n        break;\n      }\n    } else for (k = 0; k < c.length; k++) if (a <= c[k].number) {\n      l = a / c[k].number;\n      m = Math.abs(Math.floor(Math.log(l) * Math.LOG10E));\n      l = d.roundTo(l, m);\n      g = h + \"\" + l + \"\" + c[k].prefix;\n      break;\n    }\n    return g;\n  };\n\n  d.remove = function (a) {\n    a && a.remove();\n  };\n\n  d.getEffect = function (a) {\n    \">\" == a && (a = \"easeOutSine\");\n    \"<\" == a && (a = \"easeInSine\");\n    \"elastic\" == a && (a = \"easeOutElastic\");\n    return a;\n  };\n\n  d.getObjById = function (a, b) {\n    var c, e;\n\n    for (e = 0; e < a.length; e++) {\n      var d = a[e];\n\n      if (d.id == b) {\n        c = d;\n        break;\n      }\n    }\n\n    return c;\n  };\n\n  d.applyTheme = function (a, b, c) {\n    b || (b = d.theme);\n\n    try {\n      b = JSON.parse(JSON.stringify(b));\n    } catch (e) {}\n\n    b && b[c] && d.extend(a, b[c]);\n  };\n\n  d.isString = function (a) {\n    return \"string\" == typeof a ? !0 : !1;\n  };\n\n  d.extend = function (a, b, c) {\n    var e;\n    a || (a = {});\n\n    for (e in b) c ? a.hasOwnProperty(e) || (a[e] = b[e]) : a[e] = b[e];\n\n    return a;\n  };\n\n  d.copyProperties = function (a, b) {\n    for (var c in a) a.hasOwnProperty(c) && \"events\" != c && void 0 !== a[c] && \"function\" != typeof a[c] && \"cname\" != c && (b[c] = a[c]);\n  };\n\n  d.processObject = function (a, b, c, e) {\n    if (!1 === a instanceof b && (a = e ? d.extend(new b(c), a) : d.extend(a, new b(c), !0), a.listeners)) for (var f in a.listeners) b = a.listeners[f], a.addListener(b.event, b.method);\n    return a;\n  };\n\n  d.fixNewLines = function (a) {\n    var b = RegExp(\"\\\\n\", \"g\");\n    a && (a = a.replace(b, \"<br />\"));\n    return a;\n  };\n\n  d.fixBrakes = function (a) {\n    if (d.isModern) {\n      var b = RegExp(\"<br>\", \"g\");\n      a && (a = a.replace(b, \"\\n\"));\n    } else a = d.fixNewLines(a);\n\n    return a;\n  };\n\n  d.deleteObject = function (a, b) {\n    if (a) {\n      if (void 0 === b || null === b) b = 20;\n      if (0 !== b) if (\"[object Array]\" === Object.prototype.toString.call(a)) for (var c = 0; c < a.length; c++) d.deleteObject(a[c], b - 1), a[c] = null;else if (a && !a.tagName) try {\n        for (c in a.theme = null, a) a[c] && (\"object\" == typeof a[c] && d.deleteObject(a[c], b - 1), \"function\" != typeof a[c] && (a[c] = null));\n      } catch (e) {}\n    }\n  };\n\n  d.bounce = function (a, b, c, e, d) {\n    return (b /= d) < 1 / 2.75 ? 7.5625 * e * b * b + c : b < 2 / 2.75 ? e * (7.5625 * (b -= 1.5 / 2.75) * b + .75) + c : b < 2.5 / 2.75 ? e * (7.5625 * (b -= 2.25 / 2.75) * b + .9375) + c : e * (7.5625 * (b -= 2.625 / 2.75) * b + .984375) + c;\n  };\n\n  d.easeInOutQuad = function (a, b, c, e, d) {\n    b /= d / 2;\n    if (1 > b) return e / 2 * b * b + c;\n    b--;\n    return -e / 2 * (b * (b - 2) - 1) + c;\n  };\n\n  d.easeInSine = function (a, b, c, e, d) {\n    return -e * Math.cos(b / d * (Math.PI / 2)) + e + c;\n  };\n\n  d.easeOutSine = function (a, b, c, e, d) {\n    return e * Math.sin(b / d * (Math.PI / 2)) + c;\n  };\n\n  d.easeOutElastic = function (a, b, c, e, d) {\n    a = 1.70158;\n    var g = 0,\n        h = e;\n    if (0 === b) return c;\n    if (1 == (b /= d)) return c + e;\n    g || (g = .3 * d);\n    h < Math.abs(e) ? (h = e, a = g / 4) : a = g / (2 * Math.PI) * Math.asin(e / h);\n    return h * Math.pow(2, -10 * b) * Math.sin(2 * (b * d - a) * Math.PI / g) + e + c;\n  };\n\n  d.fixStepE = function (a) {\n    a = a.toExponential(0).split(\"e\");\n    var b = Number(a[1]);\n    9 == Number(a[0]) && b++;\n    return d.generateNumber(1, b);\n  };\n\n  d.generateNumber = function (a, b) {\n    var c = \"\",\n        e;\n    e = 0 > b ? Math.abs(b) - 1 : Math.abs(b);\n    var d;\n\n    for (d = 0; d < e; d++) c += \"0\";\n\n    return 0 > b ? Number(\"0.\" + c + String(a)) : Number(String(a) + c);\n  };\n\n  d.setCN = function (a, b, c, e) {\n    if (a.addClassNames && b && (b = b.node) && c) {\n      var d = b.getAttribute(\"class\");\n      a = a.classNamePrefix + \"-\";\n      e && (a = \"\");\n      d ? b.setAttribute(\"class\", d + \" \" + a + c) : b.setAttribute(\"class\", a + c);\n    }\n  };\n\n  d.removeCN = function (a, b, c) {\n    b && (b = b.node) && c && (b = b.classList) && b.remove(a.classNamePrefix + \"-\" + c);\n  };\n\n  d.parseDefs = function (a, b) {\n    for (var c in a) {\n      var e = typeof a[c];\n      if (0 < a[c].length && \"object\" == e) for (var f = 0; f < a[c].length; f++) e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c][f], e);else \"object\" == e ? (e = document.createElementNS(d.SVG_NS, c), b.appendChild(e), d.parseDefs(a[c], e)) : b.setAttribute(c, a[c]);\n    }\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmDraw = d.Class({\n    construct: function (a, b, c, e) {\n      d.SVG_NS = \"http://www.w3.org/2000/svg\";\n      d.SVG_XLINK = \"http://www.w3.org/1999/xlink\";\n      d.hasSVG = !!document.createElementNS && !!document.createElementNS(d.SVG_NS, \"svg\").createSVGRect;\n      1 > b && (b = 10);\n      1 > c && (c = 10);\n      this.div = a;\n      this.width = b;\n      this.height = c;\n      this.rBin = document.createElement(\"div\");\n      d.hasSVG ? (d.SVG = !0, b = this.createSvgElement(\"svg\"), a.appendChild(b), this.container = b, this.addDefs(e), this.R = new d.SVGRenderer(this)) : d.isIE && d.VMLRenderer && (d.VML = !0, d.vmlStyleSheet || (document.namespaces.add(\"amvml\", \"urn:schemas-microsoft-com:vml\"), 31 > document.styleSheets.length ? (b = document.createStyleSheet(), b.addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\"), d.vmlStyleSheet = b) : document.styleSheets[0].addRule(\".amvml\", \"behavior:url(#default#VML); display:inline-block; antialias:true\")), this.container = a, this.R = new d.VMLRenderer(this, e), this.R.disableSelection(a));\n    },\n    createSvgElement: function (a) {\n      return document.createElementNS(d.SVG_NS, a);\n    },\n    circle: function (a, b, c, e) {\n      var f = new d.AmDObject(\"circle\", this);\n      f.attr({\n        r: c,\n        cx: a,\n        cy: b\n      });\n      this.addToContainer(f.node, e);\n      return f;\n    },\n    ellipse: function (a, b, c, e, f) {\n      var g = new d.AmDObject(\"ellipse\", this);\n      g.attr({\n        rx: c,\n        ry: e,\n        cx: a,\n        cy: b\n      });\n      this.addToContainer(g.node, f);\n      return g;\n    },\n    setSize: function (a, b) {\n      0 < a && 0 < b && (this.container.style.width = a + \"px\", this.container.style.height = b + \"px\");\n    },\n    rect: function (a, b, c, e, f, g, h) {\n      var k = new d.AmDObject(\"rect\", this);\n      d.VML && (f = Math.round(100 * f / Math.min(c, e)), c += 2 * g, e += 2 * g, k.bw = g, k.node.style.marginLeft = -g, k.node.style.marginTop = -g);\n      1 > c && (c = 1);\n      1 > e && (e = 1);\n      k.attr({\n        x: a,\n        y: b,\n        width: c,\n        height: e,\n        rx: f,\n        ry: f,\n        \"stroke-width\": g\n      });\n      this.addToContainer(k.node, h);\n      return k;\n    },\n    image: function (a, b, c, e, f, g) {\n      var h = new d.AmDObject(\"image\", this);\n      h.attr({\n        x: b,\n        y: c,\n        width: e,\n        height: f\n      });\n      this.R.path(h, a);\n      this.addToContainer(h.node, g);\n      return h;\n    },\n    addToContainer: function (a, b) {\n      b || (b = this.container);\n      b.appendChild(a);\n    },\n    text: function (a, b, c) {\n      return this.R.text(a, b, c);\n    },\n    path: function (a, b, c, e) {\n      var f = new d.AmDObject(\"path\", this);\n      e || (e = \"100,100\");\n      f.attr({\n        cs: e\n      });\n      c ? f.attr({\n        dd: a\n      }) : f.attr({\n        d: a\n      });\n      this.addToContainer(f.node, b);\n      return f;\n    },\n    set: function (a) {\n      return this.R.set(a);\n    },\n    remove: function (a) {\n      if (a) {\n        var b = this.rBin;\n        b.appendChild(a);\n        b.innerHTML = \"\";\n      }\n    },\n    renderFix: function () {\n      var a = this.container,\n          b = a.style;\n      b.top = \"0px\";\n      b.left = \"0px\";\n\n      try {\n        var c = a.getBoundingClientRect(),\n            e = c.left - Math.round(c.left),\n            d = c.top - Math.round(c.top);\n        e && (b.left = e + \"px\");\n        d && (b.top = d + \"px\");\n      } catch (g) {}\n    },\n    update: function () {\n      this.R.update();\n    },\n    addDefs: function (a) {\n      if (d.hasSVG) {\n        var b = this.createSvgElement(\"desc\"),\n            c = this.container;\n        c.setAttribute(\"version\", \"1.1\");\n        c.style.position = \"absolute\";\n        this.setSize(this.width, this.height);\n\n        if (a.accessibleTitle) {\n          var e = this.createSvgElement(\"text\");\n          c.appendChild(e);\n          e.innerHTML = a.accessibleTitle;\n          e.style.opacity = 0;\n        }\n\n        d.rtl && (c.setAttribute(\"direction\", \"rtl\"), c.style.left = \"auto\", c.style.right = \"0px\");\n        a && (a.addCodeCredits && b.appendChild(document.createTextNode(\"JavaScript chart by amCharts \" + a.version)), c.appendChild(b), a.defs && (b = this.createSvgElement(\"defs\"), c.appendChild(b), d.parseDefs(a.defs, b), this.defs = b));\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmDObject = d.Class({\n    construct: function (a, b) {\n      this.D = b;\n      this.R = b.R;\n      this.node = this.R.create(this, a);\n      this.y = this.x = 0;\n      this.scale = 1;\n    },\n    attr: function (a) {\n      this.R.attr(this, a);\n      return this;\n    },\n    getAttr: function (a) {\n      return this.node.getAttribute(a);\n    },\n    setAttr: function (a, b) {\n      this.R.setAttr(this, a, b);\n      return this;\n    },\n    clipRect: function (a, b, c, e) {\n      this.R.clipRect(this, a, b, c, e);\n    },\n    translate: function (a, b, c, e) {\n      e || (a = Math.round(a), b = Math.round(b));\n      this.R.move(this, a, b, c);\n      this.x = a;\n      this.y = b;\n      this.scale = c;\n      this.angle && this.rotate(this.angle);\n    },\n    rotate: function (a, b) {\n      this.R.rotate(this, a, b);\n      this.angle = a;\n    },\n    animate: function (a, b, c) {\n      for (var e in a) if (a.hasOwnProperty(e)) {\n        var f = e,\n            g = a[e];\n        c = d.getEffect(c);\n        this.R.animate(this, f, g, b, c);\n      }\n    },\n    push: function (a) {\n      if (a) {\n        var b = this.node;\n        b.appendChild(a.node);\n        var c = a.clipPath;\n        c && b.appendChild(c);\n        (a = a.grad) && b.appendChild(a);\n      }\n    },\n    text: function (a) {\n      this.R.setText(this, a);\n    },\n    remove: function () {\n      this.stop();\n      this.R.remove(this);\n    },\n    clear: function () {\n      var a = this.node;\n      if (a.hasChildNodes()) for (; 1 <= a.childNodes.length;) a.removeChild(a.firstChild);\n    },\n    hide: function () {\n      this.setAttr(\"visibility\", \"hidden\");\n    },\n    show: function () {\n      this.setAttr(\"visibility\", \"visible\");\n    },\n    getBBox: function () {\n      return this.R.getBBox(this);\n    },\n    toFront: function () {\n      var a = this.node;\n\n      if (a) {\n        this.prevNextNode = a.nextSibling;\n        var b = a.parentNode;\n        b && b.appendChild(a);\n      }\n    },\n    toPrevious: function () {\n      var a = this.node;\n      a && this.prevNextNode && (a = a.parentNode) && a.insertBefore(this.prevNextNode, null);\n    },\n    toBack: function () {\n      var a = this.node;\n\n      if (a) {\n        this.prevNextNode = a.nextSibling;\n        var b = a.parentNode;\n\n        if (b) {\n          var c = b.firstChild;\n          c && b.insertBefore(a, c);\n        }\n      }\n    },\n    mouseover: function (a) {\n      this.R.addListener(this, \"mouseover\", a);\n      return this;\n    },\n    mouseout: function (a) {\n      this.R.addListener(this, \"mouseout\", a);\n      return this;\n    },\n    click: function (a) {\n      this.R.addListener(this, \"click\", a);\n      return this;\n    },\n    dblclick: function (a) {\n      this.R.addListener(this, \"dblclick\", a);\n      return this;\n    },\n    mousedown: function (a) {\n      this.R.addListener(this, \"mousedown\", a);\n      return this;\n    },\n    mouseup: function (a) {\n      this.R.addListener(this, \"mouseup\", a);\n      return this;\n    },\n    touchmove: function (a) {\n      this.R.addListener(this, \"touchmove\", a);\n      return this;\n    },\n    touchstart: function (a) {\n      this.R.addListener(this, \"touchstart\", a);\n      return this;\n    },\n    touchend: function (a) {\n      this.R.addListener(this, \"touchend\", a);\n      return this;\n    },\n    keyup: function (a) {\n      this.R.addListener(this, \"keyup\", a);\n      return this;\n    },\n    focus: function (a) {\n      this.R.addListener(this, \"focus\", a);\n      return this;\n    },\n    blur: function (a) {\n      this.R.addListener(this, \"blur\", a);\n      return this;\n    },\n    contextmenu: function (a) {\n      this.node.addEventListener ? this.node.addEventListener(\"contextmenu\", a, !0) : this.R.addListener(this, \"contextmenu\", a);\n      return this;\n    },\n    stop: function () {\n      d.removeFromArray(this.R.animations, this.an_translate);\n      d.removeFromArray(this.R.animations, this.an_y);\n      d.removeFromArray(this.R.animations, this.an_x);\n    },\n    length: function () {\n      return this.node.childNodes.length;\n    },\n    gradient: function (a, b, c) {\n      this.R.gradient(this, a, b, c);\n    },\n    pattern: function (a, b, c) {\n      a && this.R.pattern(this, a, b, c);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SVGRenderer = d.Class({\n    construct: function (a) {\n      this.D = a;\n      this.animations = [];\n    },\n    create: function (a, b) {\n      return document.createElementNS(d.SVG_NS, b);\n    },\n    attr: function (a, b) {\n      for (var c in b) b.hasOwnProperty(c) && this.setAttr(a, c, b[c]);\n    },\n    setAttr: function (a, b, c) {\n      void 0 !== c && a.node.setAttribute(b, c);\n    },\n    animate: function (a, b, c, e, f) {\n      a.animationFinished = !1;\n      var g = a.node;\n      a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]);\n      \"translate\" == b ? (g = (g = g.getAttribute(\"transform\")) ? String(g).substring(10, g.length - 1) : \"0,0\", g = g.split(\", \").join(\" \"), g = g.split(\" \").join(\",\"), 0 === g && (g = \"0,0\")) : g = Number(g.getAttribute(b));\n      c = {\n        obj: a,\n        frame: 0,\n        attribute: b,\n        from: g,\n        to: c,\n        time: e,\n        effect: f\n      };\n      this.animations.push(c);\n      a[\"an_\" + b] = c;\n    },\n    update: function () {\n      var a,\n          b = this.animations;\n\n      for (a = b.length - 1; 0 <= a; a--) {\n        var c = b[a],\n            e = c.time * d.updateRate,\n            f = c.frame + 1,\n            g = c.obj,\n            h = c.attribute,\n            k,\n            l,\n            m;\n\n        if (f <= e) {\n          c.frame++;\n\n          if (\"translate\" == h) {\n            k = c.from.split(\",\");\n            h = Number(k[0]);\n            k = Number(k[1]);\n            isNaN(k) && (k = 0);\n            l = c.to.split(\",\");\n            m = Number(l[0]);\n            l = Number(l[1]);\n            m = 0 === m - h ? m : Math.round(d[c.effect](0, f, h, m - h, e));\n            c = 0 === l - k ? l : Math.round(d[c.effect](0, f, k, l - k, e));\n            h = \"transform\";\n            if (isNaN(m) || isNaN(c)) continue;\n            c = \"translate(\" + m + \",\" + c + \")\";\n          } else l = Number(c.from), k = Number(c.to), m = k - l, c = d[c.effect](0, f, l, m, e), isNaN(c) && (c = k), 0 === m && this.animations.splice(a, 1);\n\n          this.setAttr(g, h, c);\n        } else \"translate\" == h ? (l = c.to.split(\",\"), m = Number(l[0]), l = Number(l[1]), g.translate(m, l)) : (k = Number(c.to), this.setAttr(g, h, k)), g.animationFinished = !0, this.animations.splice(a, 1);\n      }\n    },\n    getBBox: function (a) {\n      if (a = a.node) try {\n        return a.getBBox();\n      } catch (b) {}\n      return {\n        width: 0,\n        height: 0,\n        x: 0,\n        y: 0\n      };\n    },\n    path: function (a, b) {\n      a.node.setAttributeNS(d.SVG_XLINK, \"xlink:href\", b);\n    },\n    clipRect: function (a, b, c, e, f) {\n      var g = a.node,\n          h = a.clipPath;\n      h && this.D.remove(h);\n      var k = g.parentNode;\n      k && (g = document.createElementNS(d.SVG_NS, \"clipPath\"), h = d.getUniqueId(), g.setAttribute(\"id\", h), this.D.rect(b, c, e, f, 0, 0, g), k.appendChild(g), b = \"#\", d.baseHref && !d.isIE && (b = this.removeTarget(window.location.href) + b), this.setAttr(a, \"clip-path\", \"url(\" + b + h + \")\"), this.clipPathC++, a.clipPath = g);\n    },\n    text: function (a, b, c) {\n      var e = new d.AmDObject(\"text\", this.D);\n      a = String(a).split(\"\\n\");\n      var f = d.removePx(b[\"font-size\"]),\n          g;\n\n      for (g = 0; g < a.length; g++) {\n        var h = this.create(null, \"tspan\");\n        h.appendChild(document.createTextNode(a[g]));\n        h.setAttribute(\"y\", (f + 2) * g + Math.round(f / 2));\n        h.setAttribute(\"x\", 0);\n        e.node.appendChild(h);\n      }\n\n      e.node.setAttribute(\"y\", Math.round(f / 2));\n      this.attr(e, b);\n      this.D.addToContainer(e.node, c);\n      return e;\n    },\n    setText: function (a, b) {\n      var c = a.node;\n      c && (c.removeChild(c.firstChild), c.appendChild(document.createTextNode(b)));\n    },\n    move: function (a, b, c, e) {\n      isNaN(b) && (b = 0);\n      isNaN(c) && (c = 0);\n      b = \"translate(\" + b + \",\" + c + \")\";\n      e && (b = b + \" scale(\" + e + \")\");\n      this.setAttr(a, \"transform\", b);\n    },\n    rotate: function (a, b) {\n      var c = a.node.getAttribute(\"transform\"),\n          e = \"rotate(\" + b + \")\";\n      c && (e = c + \" \" + e);\n      this.setAttr(a, \"transform\", e);\n    },\n    set: function (a) {\n      var b = new d.AmDObject(\"g\", this.D);\n      this.D.container.appendChild(b.node);\n\n      if (a) {\n        var c;\n\n        for (c = 0; c < a.length; c++) b.push(a[c]);\n      }\n\n      return b;\n    },\n    addListener: function (a, b, c) {\n      a.node[\"on\" + b] = c;\n    },\n    gradient: function (a, b, c, e) {\n      var f = a.node,\n          g = a.grad;\n      g && this.D.remove(g);\n      b = document.createElementNS(d.SVG_NS, b);\n      g = d.getUniqueId();\n      b.setAttribute(\"id\", g);\n\n      if (!isNaN(e)) {\n        var h = 0,\n            k = 0,\n            l = 0,\n            m = 0;\n        90 == e ? l = 100 : 270 == e ? m = 100 : 180 == e ? h = 100 : 0 === e && (k = 100);\n        b.setAttribute(\"x1\", h + \"%\");\n        b.setAttribute(\"x2\", k + \"%\");\n        b.setAttribute(\"y1\", l + \"%\");\n        b.setAttribute(\"y2\", m + \"%\");\n      }\n\n      for (e = 0; e < c.length; e++) h = document.createElementNS(d.SVG_NS, \"stop\"), k = 100 * e / (c.length - 1), 0 === e && (k = 0), h.setAttribute(\"offset\", k + \"%\"), h.setAttribute(\"stop-color\", c[e]), b.appendChild(h);\n\n      f.parentNode.appendChild(b);\n      c = \"#\";\n      d.baseHref && !d.isIE && (c = this.removeTarget(window.location.href) + c);\n      f.setAttribute(\"fill\", \"url(\" + c + g + \")\");\n      a.grad = b;\n    },\n    removeTarget: function (a) {\n      return a.split(\"#\")[0];\n    },\n    pattern: function (a, b, c, e) {\n      var f = a.node;\n      isNaN(c) && (c = 1);\n      var g = a.patternNode;\n      g && this.D.remove(g);\n      var g = document.createElementNS(d.SVG_NS, \"pattern\"),\n          h = d.getUniqueId(),\n          k = b;\n      b.url && (k = b.url);\n      d.isAbsolute(k) || -1 != k.indexOf(\"data:image\") || (k = e + k);\n      e = Number(b.width);\n      isNaN(e) && (e = 4);\n      var l = Number(b.height);\n      isNaN(l) && (l = 4);\n      e /= c;\n      l /= c;\n      c = b.x;\n      isNaN(c) && (c = 0);\n      var m = -Math.random() * Number(b.randomX);\n      isNaN(m) || (c = m);\n      m = b.y;\n      isNaN(m) && (m = 0);\n      var n = -Math.random() * Number(b.randomY);\n      isNaN(n) || (m = n);\n      g.setAttribute(\"id\", h);\n      g.setAttribute(\"width\", e);\n      g.setAttribute(\"height\", l);\n      g.setAttribute(\"patternUnits\", \"userSpaceOnUse\");\n      g.setAttribute(\"xlink:href\", k);\n      b.color && (n = document.createElementNS(d.SVG_NS, \"rect\"), n.setAttributeNS(null, \"height\", e), n.setAttributeNS(null, \"width\", l), n.setAttributeNS(null, \"fill\", b.color), g.appendChild(n));\n      this.D.image(k, 0, 0, e, l, g).translate(c, m);\n      k = \"#\";\n      d.baseHref && !d.isIE && (k = this.removeTarget(window.location.href) + k);\n      f.setAttribute(\"fill\", \"url(\" + k + h + \")\");\n      a.patternNode = g;\n      f.parentNode.appendChild(g);\n    },\n    remove: function (a) {\n      a.clipPath && this.D.remove(a.clipPath);\n      a.grad && this.D.remove(a.grad);\n      a.patternNode && this.D.remove(a.patternNode);\n      this.D.remove(a.node);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmChart = d.Class({\n    construct: function (a) {\n      this.svgIcons = this.tapToActivate = !0;\n      this.theme = a;\n      this.classNamePrefix = \"amcharts\";\n      this.addClassNames = !1;\n      this.version = \"3.21.5\";\n      d.addChart(this);\n      this.createEvents(\"buildStarted\", \"dataUpdated\", \"init\", \"rendered\", \"drawn\", \"failed\", \"resized\", \"animationFinished\");\n      this.height = this.width = \"100%\";\n      this.dataChanged = !0;\n      this.chartCreated = !1;\n      this.previousWidth = this.previousHeight = 0;\n      this.backgroundColor = \"#FFFFFF\";\n      this.borderAlpha = this.backgroundAlpha = 0;\n      this.color = this.borderColor = \"#000000\";\n      this.fontFamily = \"Verdana\";\n      this.fontSize = 11;\n      this.usePrefixes = !1;\n      this.autoResize = !0;\n      this.autoDisplay = !1;\n      this.addCodeCredits = this.accessible = !0;\n      this.touchStartTime = this.touchClickDuration = 0;\n      this.precision = -1;\n      this.percentPrecision = 2;\n      this.decimalSeparator = \".\";\n      this.thousandsSeparator = \",\";\n      this.labels = [];\n      this.allLabels = [];\n      this.titles = [];\n      this.marginRight = this.marginLeft = this.autoMarginOffset = 0;\n      this.timeOuts = [];\n      this.creditsPosition = \"top-left\";\n      var b = document.createElement(\"div\"),\n          c = b.style;\n      c.overflow = \"hidden\";\n      c.position = \"relative\";\n      c.textAlign = \"left\";\n      this.chartDiv = b;\n      b = document.createElement(\"div\");\n      c = b.style;\n      c.overflow = \"hidden\";\n      c.position = \"relative\";\n      c.textAlign = \"left\";\n      this.legendDiv = b;\n      this.titleHeight = 0;\n      this.hideBalloonTime = 150;\n      this.handDrawScatter = 2;\n      this.cssScale = this.handDrawThickness = 1;\n      this.cssAngle = 0;\n      this.prefixesOfBigNumbers = [{\n        number: 1E3,\n        prefix: \"k\"\n      }, {\n        number: 1E6,\n        prefix: \"M\"\n      }, {\n        number: 1E9,\n        prefix: \"G\"\n      }, {\n        number: 1E12,\n        prefix: \"T\"\n      }, {\n        number: 1E15,\n        prefix: \"P\"\n      }, {\n        number: 1E18,\n        prefix: \"E\"\n      }, {\n        number: 1E21,\n        prefix: \"Z\"\n      }, {\n        number: 1E24,\n        prefix: \"Y\"\n      }];\n      this.prefixesOfSmallNumbers = [{\n        number: 1E-24,\n        prefix: \"y\"\n      }, {\n        number: 1E-21,\n        prefix: \"z\"\n      }, {\n        number: 1E-18,\n        prefix: \"a\"\n      }, {\n        number: 1E-15,\n        prefix: \"f\"\n      }, {\n        number: 1E-12,\n        prefix: \"p\"\n      }, {\n        number: 1E-9,\n        prefix: \"n\"\n      }, {\n        number: 1E-6,\n        prefix: \"\\u03bc\"\n      }, {\n        number: .001,\n        prefix: \"m\"\n      }];\n      this.panEventsEnabled = !0;\n      this.product = \"amcharts\";\n      this.animations = [];\n      this.balloon = new d.AmBalloon(this.theme);\n      this.balloon.chart = this;\n      this.processTimeout = 0;\n      this.processCount = 1E3;\n      this.animatable = [];\n      this.langObj = {};\n      d.applyTheme(this, a, \"AmChart\");\n    },\n    drawChart: function () {\n      0 < this.realWidth && 0 < this.realHeight && (this.drawBackground(), this.redrawLabels(), this.drawTitles(), this.brr(), this.renderFix(), this.chartDiv && (this.boundingRect = this.chartDiv.getBoundingClientRect()));\n    },\n    makeAccessible: function (a, b, c) {\n      this.accessible && a && (c && a.setAttr(\"role\", c), a.setAttr(\"aria-label\", b));\n    },\n    drawBackground: function () {\n      d.remove(this.background);\n      var a = this.container,\n          b = this.backgroundColor,\n          c = this.backgroundAlpha,\n          e = this.set;\n      d.isModern || 0 !== c || (c = .001);\n      var f = this.updateWidth();\n      this.realWidth = f;\n      var g = this.updateHeight();\n      this.realHeight = g;\n      b = d.polygon(a, [0, f - 1, f - 1, 0], [0, 0, g - 1, g - 1], b, c, 1, this.borderColor, this.borderAlpha);\n      d.setCN(this, b, \"bg\");\n      this.background = b;\n      e.push(b);\n      if (b = this.backgroundImage) a = a.image(b, 0, 0, f, g), d.setCN(this, b, \"bg-image\"), this.bgImg = a, e.push(a);\n    },\n    drawTitles: function (a) {\n      var b = this.titles;\n      this.titleHeight = 0;\n\n      if (d.ifArray(b)) {\n        var c = 20,\n            e;\n\n        for (e = 0; e < b.length; e++) {\n          var f = b[e],\n              f = d.processObject(f, d.Title, this.theme);\n\n          if (!1 !== f.enabled) {\n            var g = f.color;\n            void 0 === g && (g = this.color);\n            var h = f.size;\n            isNaN(h) && (h = this.fontSize + 2);\n            isNaN(f.alpha);\n            var k = this.marginLeft,\n                l = !0;\n            void 0 !== f.bold && (l = f.bold);\n            g = d.wrappedText(this.container, f.text, g, this.fontFamily, h, \"middle\", l, this.realWidth - 35 - this.marginRight - k);\n            g.translate(k + (this.realWidth - this.marginRight - k) / 2, c);\n            g.node.style.pointerEvents = \"none\";\n            f.sprite = g;\n            void 0 !== f.tabIndex && g.setAttr(\"tabindex\", f.tabIndex);\n            d.setCN(this, g, \"title\");\n            f.id && d.setCN(this, g, \"title-\" + f.id);\n            g.attr({\n              opacity: f.alpha\n            });\n            c += g.getBBox().height + 5;\n            a ? g.remove() : this.freeLabelsSet.push(g);\n          }\n        }\n\n        this.titleHeight = c - 10;\n      }\n    },\n    write: function (a) {\n      var b = this;\n      if (b.listeners) for (var c = 0; c < b.listeners.length; c++) {\n        var e = b.listeners[c];\n        b.addListener(e.event, e.method);\n      }\n      b.fire({\n        type: \"buildStarted\",\n        chart: b\n      });\n      b.afterWriteTO && clearTimeout(b.afterWriteTO);\n      0 < b.processTimeout ? b.afterWriteTO = setTimeout(function () {\n        b.afterWrite.call(b, a);\n      }, b.processTimeout) : b.afterWrite(a);\n    },\n    afterWrite: function (a) {\n      var b;\n\n      if (b = \"object\" != typeof a ? document.getElementById(a) : a) {\n        for (; b.firstChild;) b.removeChild(b.firstChild);\n\n        this.div = b;\n        b.style.overflow = \"hidden\";\n        b.style.textAlign = \"left\";\n        a = this.chartDiv;\n        var c = this.legendDiv,\n            e = this.legend,\n            f = c.style,\n            g = a.style;\n        this.measure();\n        this.previousHeight = this.divRealHeight;\n        this.previousWidth = this.divRealWidth;\n        var h,\n            k = document.createElement(\"div\");\n        h = k.style;\n        h.position = \"relative\";\n        this.containerDiv = k;\n        k.className = this.classNamePrefix + \"-main-div\";\n        a.className = this.classNamePrefix + \"-chart-div\";\n        b.appendChild(k);\n        (b = this.exportConfig) && d.AmExport && !this.AmExport && (this.AmExport = new d.AmExport(this, b));\n        this.amExport && d.AmExport && (this.AmExport = d.extend(this.amExport, new d.AmExport(this), !0));\n        this.AmExport && this.AmExport.init && this.AmExport.init();\n\n        if (e) {\n          e = this.addLegend(e, e.divId);\n          if (e.enabled) switch (f.left = null, f.top = null, f.right = null, g.left = null, g.right = null, g.top = null, f.position = \"relative\", g.position = \"relative\", h.width = \"100%\", h.height = \"100%\", e.position) {\n            case \"bottom\":\n              k.appendChild(a);\n              k.appendChild(c);\n              break;\n\n            case \"top\":\n              k.appendChild(c);\n              k.appendChild(a);\n              break;\n\n            case \"absolute\":\n              f.position = \"absolute\";\n              g.position = \"absolute\";\n              void 0 !== e.left && (f.left = e.left + \"px\");\n              void 0 !== e.right && (f.right = e.right + \"px\");\n              void 0 !== e.top && (f.top = e.top + \"px\");\n              void 0 !== e.bottom && (f.bottom = e.bottom + \"px\");\n              e.marginLeft = 0;\n              e.marginRight = 0;\n              k.appendChild(a);\n              k.appendChild(c);\n              break;\n\n            case \"right\":\n              f.position = \"relative\";\n              g.position = \"absolute\";\n              k.appendChild(a);\n              k.appendChild(c);\n              break;\n\n            case \"left\":\n              f.position = \"absolute\";\n              g.position = \"relative\";\n              k.appendChild(a);\n              k.appendChild(c);\n              break;\n\n            case \"outside\":\n              k.appendChild(a);\n          } else k.appendChild(a);\n          this.prevLegendPosition = e.position;\n        } else k.appendChild(a);\n\n        this.listenersAdded || (this.addListeners(), this.listenersAdded = !0);\n        (this.mouseWheelScrollEnabled || this.mouseWheelZoomEnabled) && d.addWheelListeners();\n        this.initChart();\n      }\n    },\n    createLabelsSet: function () {\n      d.remove(this.labelsSet);\n      this.labelsSet = this.container.set();\n      this.freeLabelsSet.push(this.labelsSet);\n    },\n    initChart: function () {\n      this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme);\n      window.AmCharts_path && (this.path = window.AmCharts_path);\n      void 0 === this.path && (this.path = d.getPath());\n      void 0 === this.path && (this.path = \"amcharts/\");\n      this.path = d.normalizeUrl(this.path);\n      void 0 === this.pathToImages && (this.pathToImages = this.path + \"images/\");\n      this.initHC || (d.callInitHandler(this), this.initHC = !0);\n      d.applyLang(this.language, this);\n      var a = this.numberFormatter;\n      a && (isNaN(a.precision) || (this.precision = a.precision), void 0 !== a.thousandsSeparator && (this.thousandsSeparator = a.thousandsSeparator), void 0 !== a.decimalSeparator && (this.decimalSeparator = a.decimalSeparator));\n      (a = this.percentFormatter) && !isNaN(a.precision) && (this.percentPrecision = a.precision);\n      this.nf = {\n        precision: this.precision,\n        thousandsSeparator: this.thousandsSeparator,\n        decimalSeparator: this.decimalSeparator\n      };\n      this.pf = {\n        precision: this.percentPrecision,\n        thousandsSeparator: this.thousandsSeparator,\n        decimalSeparator: this.decimalSeparator\n      };\n      this.destroy();\n      (a = this.container) ? (a.container.innerHTML = \"\", a.width = this.realWidth, a.height = this.realHeight, a.addDefs(this), this.chartDiv.appendChild(a.container)) : a = new d.AmDraw(this.chartDiv, this.realWidth, this.realHeight, this);\n      this.container = a;\n      this.extension = \".png\";\n      this.svgIcons && d.SVG && (this.extension = \".svg\");\n      this.checkDisplay();\n      this.checkTransform(this.div);\n      a.chart = this;\n      d.VML || d.SVG ? (a.handDrawn = this.handDrawn, a.handDrawScatter = this.handDrawScatter, a.handDrawThickness = this.handDrawThickness, d.remove(this.set), this.set = a.set(), d.remove(this.gridSet), this.gridSet = a.set(), d.remove(this.cursorLineSet), this.cursorLineSet = a.set(), d.remove(this.graphsBehindSet), this.graphsBehindSet = a.set(), d.remove(this.bulletBehindSet), this.bulletBehindSet = a.set(), d.remove(this.columnSet), this.columnSet = a.set(), d.remove(this.graphsSet), this.graphsSet = a.set(), d.remove(this.trendLinesSet), this.trendLinesSet = a.set(), d.remove(this.axesSet), this.axesSet = a.set(), d.remove(this.cursorSet), this.cursorSet = a.set(), d.remove(this.scrollbarsSet), this.scrollbarsSet = a.set(), d.remove(this.bulletSet), this.bulletSet = a.set(), d.remove(this.freeLabelsSet), this.freeLabelsSet = a.set(), d.remove(this.axesLabelsSet), this.axesLabelsSet = a.set(), d.remove(this.balloonsSet), this.balloonsSet = a.set(), d.remove(this.plotBalloonsSet), this.plotBalloonsSet = a.set(), d.remove(this.zoomButtonSet), this.zoomButtonSet = a.set(), d.remove(this.zbSet), this.zbSet = null, d.remove(this.linkSet), this.linkSet = a.set()) : this.fire({\n        type: \"failed\",\n        chart: this\n      });\n    },\n    premeasure: function () {\n      var a = this.div;\n\n      if (a) {\n        try {\n          this.boundingRect = this.chartDiv.getBoundingClientRect();\n        } catch (e) {}\n\n        var b = a.offsetWidth,\n            c = a.offsetHeight;\n        a.clientHeight && (b = a.clientWidth, c = a.clientHeight);\n        if (b != this.mw || c != this.mh) this.mw = b, this.mh = c, this.measure();\n      }\n    },\n    measure: function () {\n      var a = this.div;\n\n      if (a) {\n        var b = this.chartDiv,\n            c = a.offsetWidth,\n            e = a.offsetHeight,\n            f = this.container;\n        a.clientHeight && (c = a.clientWidth, e = a.clientHeight);\n        var e = Math.round(e),\n            c = Math.round(c),\n            a = Math.round(d.toCoordinate(this.width, c)),\n            g = Math.round(d.toCoordinate(this.height, e));\n        (c != this.previousWidth || e != this.previousHeight) && 0 < a && 0 < g && (b.style.width = a + \"px\", b.style.height = g + \"px\", b.style.padding = 0, f && f.setSize(a, g), this.balloon = d.processObject(this.balloon, d.AmBalloon, this.theme));\n        this.balloon && this.balloon.setBounds && this.balloon.setBounds(2, 2, a - 2, g);\n        this.updateWidth();\n        this.balloon.chart = this;\n        this.realWidth = a;\n        this.realHeight = g;\n        this.divRealWidth = c;\n        this.divRealHeight = e;\n      }\n    },\n    checkDisplay: function () {\n      if (this.autoDisplay && this.container) {\n        var a = d.rect(this.container, 10, 10),\n            b = a.getBBox();\n        0 === b.width && 0 === b.height && (this.divRealHeight = this.divRealWidth = this.realHeight = this.realWidth = 0, this.previousWidth = this.previousHeight = NaN);\n        a.remove();\n      }\n    },\n    checkTransform: function (a) {\n      if (this.autoTransform && window.getComputedStyle && a) {\n        if (a.style) {\n          var b = window.getComputedStyle(a, null);\n\n          if (b && (b = b.getPropertyValue(\"-webkit-transform\") || b.getPropertyValue(\"-moz-transform\") || b.getPropertyValue(\"-ms-transform\") || b.getPropertyValue(\"-o-transform\") || b.getPropertyValue(\"transform\")) && \"none\" !== b) {\n            var c = b.split(\"(\")[1].split(\")\")[0].split(\",\"),\n                b = c[0],\n                c = c[1],\n                b = Math.sqrt(b * b + c * c);\n            isNaN(b) || (this.cssScale *= b);\n          }\n        }\n\n        a.parentNode && this.checkTransform(a.parentNode);\n      }\n    },\n    destroy: function () {\n      this.chartDiv.innerHTML = \"\";\n      this.clearTimeOuts();\n      this.legend && this.legend.destroy();\n    },\n    clearTimeOuts: function () {\n      var a = this.timeOuts;\n\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) clearTimeout(a[b]);\n      }\n\n      this.timeOuts = [];\n    },\n    clear: function (a) {\n      try {\n        document.removeEventListener(\"touchstart\", this.docfn1, !0), document.removeEventListener(\"touchend\", this.docfn2, !0);\n      } catch (b) {}\n\n      d.callMethod(\"clear\", [this.chartScrollbar, this.scrollbarV, this.scrollbarH, this.chartCursor]);\n      this.chartCursor = this.scrollbarH = this.scrollbarV = this.chartScrollbar = null;\n      this.clearTimeOuts();\n      this.container && (this.container.remove(this.chartDiv), this.container.remove(this.legendDiv));\n      a || d.removeChart(this);\n      if (a = this.div) for (; a.firstChild;) a.removeChild(a.firstChild);\n      this.legend && this.legend.destroy();\n      this.AmExport && this.AmExport.clear && this.AmExport.clear();\n    },\n    setMouseCursor: function (a) {\n      \"auto\" == a && d.isNN && (a = \"default\");\n      this.chartDiv.style.cursor = a;\n      this.legendDiv.style.cursor = a;\n    },\n    redrawLabels: function () {\n      this.labels = [];\n      var a = this.allLabels;\n      this.createLabelsSet();\n      var b;\n\n      for (b = 0; b < a.length; b++) this.drawLabel(a[b]);\n    },\n    drawLabel: function (a) {\n      var b = this;\n\n      if (b.container && !1 !== a.enabled) {\n        a = d.processObject(a, d.Label, b.theme);\n        var c = a.y,\n            e = a.text,\n            f = a.align,\n            g = a.size,\n            h = a.color,\n            k = a.rotation,\n            l = a.alpha,\n            m = a.bold,\n            n = d.toCoordinate(a.x, b.realWidth),\n            c = d.toCoordinate(c, b.realHeight);\n        n || (n = 0);\n        c || (c = 0);\n        void 0 === h && (h = b.color);\n        isNaN(g) && (g = b.fontSize);\n        f || (f = \"start\");\n        \"left\" == f && (f = \"start\");\n        \"right\" == f && (f = \"end\");\n        \"center\" == f && (f = \"middle\", k ? c = b.realHeight - c + c / 2 : n = b.realWidth / 2 - n);\n        void 0 === l && (l = 1);\n        void 0 === k && (k = 0);\n        c += g / 2;\n        e = d.text(b.container, e, h, b.fontFamily, g, f, m, l);\n        e.translate(n, c);\n        void 0 !== a.tabIndex && e.setAttr(\"tabindex\", a.tabIndex);\n        d.setCN(b, e, \"label\");\n        a.id && d.setCN(b, e, \"label-\" + a.id);\n        0 !== k && e.rotate(k);\n        a.url ? (e.setAttr(\"cursor\", \"pointer\"), e.click(function () {\n          d.getURL(a.url, b.urlTarget);\n        })) : e.node.style.pointerEvents = \"none\";\n        b.labelsSet.push(e);\n        b.labels.push(e);\n      }\n    },\n    addLabel: function (a, b, c, e, d, g, h, k, l, m) {\n      a = {\n        x: a,\n        y: b,\n        text: c,\n        align: e,\n        size: d,\n        color: g,\n        alpha: k,\n        rotation: h,\n        bold: l,\n        url: m,\n        enabled: !0\n      };\n      this.container && this.drawLabel(a);\n      this.allLabels.push(a);\n    },\n    clearLabels: function () {\n      var a = this.labels,\n          b;\n\n      for (b = a.length - 1; 0 <= b; b--) a[b].remove();\n\n      this.labels = [];\n      this.allLabels = [];\n    },\n    updateHeight: function () {\n      var a = this.divRealHeight,\n          b = this.legend;\n\n      if (b) {\n        var c = this.legendDiv.offsetHeight,\n            b = b.position;\n\n        if (\"top\" == b || \"bottom\" == b) {\n          a -= c;\n          if (0 > a || isNaN(a)) a = 0;\n          this.chartDiv.style.height = a + \"px\";\n        }\n      }\n\n      return a;\n    },\n    updateWidth: function () {\n      var a = this.divRealWidth,\n          b = this.divRealHeight,\n          c = this.legend;\n\n      if (c) {\n        var e = this.legendDiv,\n            d = e.offsetWidth;\n        isNaN(c.width) || (d = c.width);\n        c.ieW && (d = c.ieW);\n        var g = e.offsetHeight,\n            e = e.style,\n            h = this.chartDiv.style,\n            k = c.position;\n\n        if ((\"right\" == k || \"left\" == k) && void 0 === c.divId) {\n          a -= d;\n          if (0 > a || isNaN(a)) a = 0;\n          h.width = a + \"px\";\n          this.balloon && this.balloon.setBounds && this.balloon.setBounds(2, 2, a - 2, this.realHeight);\n          \"left\" == k ? (h.left = d + \"px\", e.left = \"0px\") : (h.left = \"0px\", e.left = a + \"px\");\n          b > g && (e.top = (b - g) / 2 + \"px\");\n        }\n      }\n\n      return a;\n    },\n    getTitleHeight: function () {\n      this.drawTitles(!0);\n      return this.titleHeight;\n    },\n    addTitle: function (a, b, c, e, d) {\n      isNaN(b) && (b = this.fontSize + 2);\n      a = {\n        text: a,\n        size: b,\n        color: c,\n        alpha: e,\n        bold: d,\n        enabled: !0\n      };\n      this.titles.push(a);\n      return a;\n    },\n    handleWheel: function (a) {\n      var b = 0;\n      a || (a = window.event);\n      a.wheelDelta ? b = a.wheelDelta / 120 : a.detail && (b = -a.detail / 3);\n      b && this.handleWheelReal(b, a.shiftKey);\n      a.preventDefault && a.preventDefault();\n    },\n    handleWheelReal: function () {},\n    handleDocTouchStart: function () {\n      this.handleMouseMove();\n      this.tmx = this.mouseX;\n      this.tmy = this.mouseY;\n      this.touchStartTime = new Date().getTime();\n    },\n    handleDocTouchEnd: function () {\n      -.5 < this.tmx && this.tmx < this.divRealWidth + 1 && 0 < this.tmy && this.tmy < this.divRealHeight ? (this.handleMouseMove(), 4 > Math.abs(this.mouseX - this.tmx) && 4 > Math.abs(this.mouseY - this.tmy) ? (this.tapped = !0, this.panRequired && this.panEventsEnabled && this.chartDiv && (this.chartDiv.style.msTouchAction = \"none\", this.chartDiv.style.touchAction = \"none\")) : this.mouseIsOver || this.resetTouchStyle()) : (this.tapped = !1, this.resetTouchStyle());\n    },\n    resetTouchStyle: function () {\n      this.panEventsEnabled && this.chartDiv && (this.chartDiv.style.msTouchAction = \"auto\", this.chartDiv.style.touchAction = \"auto\");\n    },\n    checkTouchDuration: function (a) {\n      var b = this,\n          c = new Date().getTime();\n      if (a) if (a.touches) b.isTouchEvent = !0;else if (!b.isTouchEvent) return !0;\n      if (c - b.touchStartTime > b.touchClickDuration) return !0;\n      setTimeout(function () {\n        b.resetTouchDuration();\n      }, 300);\n    },\n    resetTouchDuration: function () {\n      this.isTouchEvent = !1;\n    },\n    checkTouchMoved: function () {\n      if (4 < Math.abs(this.mouseX - this.tmx) || 4 < Math.abs(this.mouseY - this.tmy)) return !0;\n    },\n    addListeners: function () {\n      var a = this,\n          b = a.chartDiv;\n      document.addEventListener ? (\"ontouchstart\" in document.documentElement && (b.addEventListener(\"touchstart\", function (b) {\n        a.handleTouchStart.call(a, b);\n      }, !0), b.addEventListener(\"touchmove\", function (b) {\n        a.handleMouseMove.call(a, b);\n      }, !0), b.addEventListener(\"touchend\", function (b) {\n        a.handleTouchEnd.call(a, b);\n      }, !0), a.docfn1 = function (b) {\n        a.handleDocTouchStart.call(a, b);\n      }, a.docfn2 = function (b) {\n        a.handleDocTouchEnd.call(a, b);\n      }, document.addEventListener(\"touchstart\", a.docfn1, !0), document.addEventListener(\"touchend\", a.docfn2, !0)), b.addEventListener(\"mousedown\", function (b) {\n        a.mouseIsOver = !0;\n        a.handleMouseMove.call(a, b);\n        a.handleMouseDown.call(a, b);\n        a.handleDocTouchStart.call(a, b);\n      }, !0), b.addEventListener(\"mouseover\", function (b) {\n        a.handleMouseOver.call(a, b);\n      }, !0), b.addEventListener(\"mouseout\", function (b) {\n        a.handleMouseOut.call(a, b);\n      }, !0), b.addEventListener(\"mouseup\", function (b) {\n        a.handleDocTouchEnd.call(a, b);\n      }, !0)) : (b.attachEvent(\"onmousedown\", function (b) {\n        a.handleMouseDown.call(a, b);\n      }), b.attachEvent(\"onmouseover\", function (b) {\n        a.handleMouseOver.call(a, b);\n      }), b.attachEvent(\"onmouseout\", function (b) {\n        a.handleMouseOut.call(a, b);\n      }));\n    },\n    dispDUpd: function () {\n      this.skipEvents || (this.dispatchDataUpdated && (this.dispatchDataUpdated = !1, this.fire({\n        type: \"dataUpdated\",\n        chart: this\n      })), this.chartCreated || (this.chartCreated = !0, this.fire({\n        type: \"init\",\n        chart: this\n      })), this.chartRendered || (this.fire({\n        type: \"rendered\",\n        chart: this\n      }), this.chartRendered = !0), this.fire({\n        type: \"drawn\",\n        chart: this\n      }));\n      this.skipEvents = !1;\n    },\n    validateSize: function () {\n      var a = this;\n      a.premeasure();\n      a.checkDisplay();\n      a.cssScale = 1;\n      a.cssAngle = 0;\n      a.checkTransform(a.div);\n\n      if (a.divRealWidth != a.previousWidth || a.divRealHeight != a.previousHeight) {\n        var b = a.legend;\n\n        if (0 < a.realWidth && 0 < a.realHeight) {\n          a.sizeChanged = !0;\n\n          if (b) {\n            a.legendInitTO && clearTimeout(a.legendInitTO);\n            var c = setTimeout(function () {\n              b.invalidateSize();\n            }, 10);\n            a.timeOuts.push(c);\n            a.legendInitTO = c;\n          }\n\n          a.marginsUpdated = !1;\n          clearTimeout(a.initTO);\n          c = setTimeout(function () {\n            a.initChart();\n          }, 10);\n          a.timeOuts.push(c);\n          a.initTO = c;\n        }\n\n        a.renderFix();\n        b && b.renderFix && b.renderFix();\n        clearTimeout(a.resizedTO);\n        a.resizedTO = setTimeout(function () {\n          a.fire({\n            type: \"resized\",\n            chart: a\n          });\n        }, 10);\n        a.previousHeight = a.divRealHeight;\n        a.previousWidth = a.divRealWidth;\n      }\n    },\n    invalidateSize: function () {\n      this.previousHeight = this.previousWidth = NaN;\n      this.invalidateSizeReal();\n    },\n    invalidateSizeReal: function () {\n      var a = this;\n      a.marginsUpdated = !1;\n      clearTimeout(a.validateTO);\n      var b = setTimeout(function () {\n        a.validateSize();\n      }, 5);\n      a.timeOuts.push(b);\n      a.validateTO = b;\n    },\n    validateData: function (a) {\n      this.chartCreated && (this.dataChanged = !0, this.marginsUpdated = !1, this.initChart(a));\n    },\n    validateNow: function (a, b) {\n      this.initTO && clearTimeout(this.initTO);\n      a && (this.dataChanged = !0, this.marginsUpdated = !1);\n      this.skipEvents = b;\n      this.chartRendered = !1;\n      var c = this.legend;\n      c && c.position != this.prevLegendPosition && (this.previousWidth = this.mw = 0, c.invalidateSize && (c.invalidateSize(), this.validateSize()));\n      this.write(this.div);\n    },\n    showItem: function (a) {\n      a.hidden = !1;\n      this.initChart();\n    },\n    hideItem: function (a) {\n      a.hidden = !0;\n      this.initChart();\n    },\n    hideBalloon: function () {\n      var a = this;\n      clearTimeout(a.hoverInt);\n      clearTimeout(a.balloonTO);\n      a.hoverInt = setTimeout(function () {\n        a.hideBalloonReal.call(a);\n      }, a.hideBalloonTime);\n    },\n    cleanChart: function () {},\n    hideBalloonReal: function () {\n      var a = this.balloon;\n      a && a.hide && a.hide();\n    },\n    showBalloon: function (a, b, c, e, d) {\n      var g = this;\n      clearTimeout(g.balloonTO);\n      clearTimeout(g.hoverInt);\n      g.balloonTO = setTimeout(function () {\n        g.showBalloonReal.call(g, a, b, c, e, d);\n      }, 1);\n    },\n    showBalloonReal: function (a, b, c, e, d) {\n      this.handleMouseMove();\n      var g = this.balloon;\n      g.enabled && (g.followCursor(!1), g.changeColor(b), !c || g.fixedPosition ? (g.setPosition(e, d), isNaN(e) || isNaN(d) ? g.followCursor(!0) : g.followCursor(!1)) : g.followCursor(!0), a && g.showBalloon(a));\n    },\n    handleMouseOver: function () {\n      this.outTO && clearTimeout(this.outTO);\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n    },\n    handleMouseOut: function () {\n      var a = this;\n      d.resetMouseOver();\n      a.outTO && clearTimeout(a.outTO);\n      a.outTO = setTimeout(function () {\n        a.handleMouseOutReal();\n      }, 10);\n    },\n    handleMouseOutReal: function () {\n      this.mouseIsOver = !1;\n    },\n    handleMouseMove: function (a) {\n      a || (a = window.event);\n      this.mouse2Y = this.mouse2X = NaN;\n      var b, c, e, d;\n\n      if (a) {\n        if (a.touches) {\n          var g = a.touches.item(1);\n          g && this.panEventsEnabled && this.boundingRect && (e = g.clientX - this.boundingRect.left, d = g.clientY - this.boundingRect.top);\n          a = a.touches.item(0);\n          if (!a) return;\n        } else this.wasTouched = !1;\n\n        this.boundingRect && a.clientX && (b = a.clientX - this.boundingRect.left, c = a.clientY - this.boundingRect.top);\n        isNaN(e) ? this.mouseX = b : (this.mouseX = Math.min(b, e), this.mouse2X = Math.max(b, e));\n        isNaN(d) ? this.mouseY = c : (this.mouseY = Math.min(c, d), this.mouse2Y = Math.max(c, d));\n        this.autoTransform && (this.mouseX /= this.cssScale, this.mouseY /= this.cssScale);\n      }\n    },\n    handleTouchStart: function (a) {\n      this.hideBalloonReal();\n      a && (a.touches && this.tapToActivate && !this.tapped || !this.panRequired) || (this.handleMouseMove(a), this.handleMouseDown(a));\n    },\n    handleTouchEnd: function (a) {\n      this.wasTouched = !0;\n      this.handleMouseMove(a);\n      d.resetMouseOver();\n      this.handleReleaseOutside(a);\n    },\n    handleReleaseOutside: function () {\n      this.handleDocTouchEnd.call(this);\n    },\n    handleMouseDown: function (a) {\n      d.resetMouseOver();\n      this.mouseIsOver = !0;\n      a && a.preventDefault && (this.panEventsEnabled ? a.preventDefault() : a.touches || a.preventDefault());\n    },\n    addLegend: function (a, b) {\n      a = d.processObject(a, d.AmLegend, this.theme);\n      a.divId = b;\n      a.ieW = 0;\n      var c;\n      c = \"object\" != typeof b && b ? document.getElementById(b) : b;\n      this.legend = a;\n      a.chart = this;\n      c ? (a.div = c, a.position = \"outside\", a.autoMargins = !1) : a.div = this.legendDiv;\n      return a;\n    },\n    removeLegend: function () {\n      this.legend = void 0;\n      this.previousWidth = 0;\n      this.legendDiv.innerHTML = \"\";\n    },\n    handleResize: function () {\n      (d.isPercents(this.width) || d.isPercents(this.height)) && this.invalidateSizeReal();\n      this.renderFix();\n    },\n    renderFix: function () {\n      if (!d.VML) {\n        var a = this.container;\n        a && a.renderFix();\n      }\n    },\n    getSVG: function () {\n      if (d.hasSVG) return this.container;\n    },\n    animate: function (a, b, c, e, f, g, h) {\n      a[\"an_\" + b] && d.removeFromArray(this.animations, a[\"an_\" + b]);\n      c = {\n        obj: a,\n        frame: 0,\n        attribute: b,\n        from: c,\n        to: e,\n        time: f,\n        effect: g,\n        suffix: h\n      };\n      a[\"an_\" + b] = c;\n      this.animations.push(c);\n      return c;\n    },\n    setLegendData: function (a) {\n      var b = this.legend;\n      b && b.setData(a);\n    },\n    stopAnim: function (a) {\n      d.removeFromArray(this.animations, a);\n    },\n    updateAnimations: function () {\n      var a;\n      this.container && this.container.update();\n      if (this.animations) for (a = this.animations.length - 1; 0 <= a; a--) {\n        var b = this.animations[a],\n            c = d.updateRate * b.time,\n            e = b.frame + 1,\n            f = b.obj,\n            g = b.attribute;\n\n        if (e <= c) {\n          b.frame++;\n          var h = Number(b.from),\n              k = Number(b.to) - h,\n              c = d[b.effect](0, e, h, k, c);\n          0 === k ? (this.animations.splice(a, 1), f.node.style[g] = Number(b.to) + b.suffix) : f.node.style[g] = c + b.suffix;\n        } else f.node.style[g] = Number(b.to) + b.suffix, f.animationFinished = !0, this.animations.splice(a, 1);\n      }\n    },\n    update: function () {\n      this.updateAnimations();\n      var a = this.animatable;\n\n      if (0 < a.length) {\n        for (var b = !0, c = a.length - 1; 0 <= c; c--) {\n          var e = a[c];\n          e && (e.animationFinished ? a.splice(c, 1) : b = !1);\n        }\n\n        b && (this.fire({\n          type: \"animationFinished\",\n          chart: this\n        }), this.animatable = []);\n      }\n    },\n    inIframe: function () {\n      try {\n        return window.self !== window.top;\n      } catch (a) {\n        return !0;\n      }\n    },\n    brr: function () {\n      if (!this.hideCredits) {\n        var a = \"amcharts.com\",\n            b = window.location.hostname.split(\".\"),\n            c;\n        2 <= b.length && (c = b[b.length - 2] + \".\" + b[b.length - 1]);\n        this.amLink && (b = this.amLink.parentNode) && b.removeChild(this.amLink);\n        b = this.creditsPosition;\n\n        if (c != a || !0 === this.inIframe()) {\n          var a = \"http://www.\" + a,\n              e = c = 0,\n              d = this.realWidth,\n              g = this.realHeight,\n              h = this.type;\n          if (\"serial\" == h || \"xy\" == h || \"gantt\" == h) c = this.marginLeftReal, e = this.marginTopReal, d = c + this.plotAreaWidth, g = e + this.plotAreaHeight;\n          var h = a + \"/javascript-charts/\",\n              k = \"JavaScript charts\",\n              l = \"JS chart by amCharts\";\n          \"ammap\" == this.product && (h = a + \"/javascript-maps/\", k = \"Interactive JavaScript maps\", l = \"JS map by amCharts\");\n          a = document.createElement(\"a\");\n          l = document.createTextNode(l);\n          a.setAttribute(\"href\", h);\n          a.setAttribute(\"title\", k);\n          this.urlTarget && a.setAttribute(\"target\", this.urlTarget);\n          a.appendChild(l);\n          this.chartDiv.appendChild(a);\n          this.amLink = a;\n          h = a.style;\n          h.position = \"absolute\";\n          h.textDecoration = \"none\";\n          h.color = this.color;\n          h.fontFamily = this.fontFamily;\n          h.fontSize = \"11px\";\n          h.opacity = .7;\n          h.display = \"block\";\n          var k = a.offsetWidth,\n              a = a.offsetHeight,\n              l = 5 + c,\n              m = e + 5;\n          \"bottom-left\" == b && (l = 5 + c, m = g - a - 3);\n          \"bottom-right\" == b && (l = d - k - 5, m = g - a - 3);\n          \"top-right\" == b && (l = d - k - 5, m = e + 5);\n          h.left = l + \"px\";\n          h.top = m + \"px\";\n        }\n      }\n    }\n  });\n  d.Slice = d.Class({\n    construct: function () {}\n  });\n  d.SerialDataItem = d.Class({\n    construct: function () {}\n  });\n  d.GraphDataItem = d.Class({\n    construct: function () {}\n  });\n  d.Guide = d.Class({\n    construct: function (a) {\n      this.cname = \"Guide\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n  d.Title = d.Class({\n    construct: function (a) {\n      this.cname = \"Title\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n  d.Label = d.Class({\n    construct: function (a) {\n      this.cname = \"Label\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmBalloon = d.Class({\n    construct: function (a) {\n      this.cname = \"AmBalloon\";\n      this.enabled = !0;\n      this.fillColor = \"#FFFFFF\";\n      this.fillAlpha = .8;\n      this.borderThickness = 2;\n      this.borderColor = \"#FFFFFF\";\n      this.borderAlpha = 1;\n      this.cornerRadius = 0;\n      this.maxWidth = 220;\n      this.horizontalPadding = 8;\n      this.verticalPadding = 4;\n      this.pointerWidth = 6;\n      this.pointerOrientation = \"V\";\n      this.color = \"#000000\";\n      this.adjustBorderColor = !0;\n      this.show = this.follow = this.showBullet = !1;\n      this.bulletSize = 3;\n      this.shadowAlpha = .4;\n      this.shadowColor = \"#000000\";\n      this.fadeOutDuration = this.animationDuration = .3;\n      this.fixedPosition = !0;\n      this.offsetY = 6;\n      this.offsetX = 1;\n      this.textAlign = \"center\";\n      this.disableMouseEvents = !0;\n      this.deltaSignX = this.deltaSignY = 1;\n      d.isModern || (this.offsetY *= 1.5);\n      this.sdy = this.sdx = 0;\n      d.applyTheme(this, a, this.cname);\n    },\n    draw: function () {\n      var a = this.pointToX,\n          b = this.pointToY;\n      d.isModern || (this.drop = !1);\n      var c = this.chart;\n      d.VML && (this.fadeOutDuration = 0);\n      this.xAnim && c.stopAnim(this.xAnim);\n      this.yAnim && c.stopAnim(this.yAnim);\n      this.sdy = this.sdx = 0;\n\n      if (!isNaN(a)) {\n        var e = this.follow,\n            f = c.container,\n            g = this.set;\n        d.remove(g);\n        this.removeDiv();\n        g = f.set();\n        g.node.style.pointerEvents = \"none\";\n        this.set = g;\n        this.mainSet ? (this.mainSet.push(this.set), this.sdx = this.mainSet.x, this.sdy = this.mainSet.y) : c.balloonsSet.push(g);\n\n        if (this.show) {\n          var h = this.l,\n              k = this.t,\n              l = this.r,\n              m = this.b,\n              n = this.balloonColor,\n              p = this.fillColor,\n              t = this.borderColor,\n              r = p;\n          void 0 != n && (this.adjustBorderColor ? r = t = n : p = n);\n          var q = this.horizontalPadding,\n              y = this.verticalPadding,\n              B = this.pointerWidth,\n              u = this.pointerOrientation,\n              w = this.cornerRadius,\n              v = c.fontFamily,\n              A = this.fontSize;\n          void 0 == A && (A = c.fontSize);\n          var n = document.createElement(\"div\"),\n              C = c.classNamePrefix;\n          n.className = C + \"-balloon-div\";\n          this.className && (n.className = n.className + \" \" + C + \"-balloon-div-\" + this.className);\n          C = n.style;\n          this.disableMouseEvents && (C.pointerEvents = \"none\");\n          C.position = \"absolute\";\n          var x = this.minWidth,\n              z = document.createElement(\"div\");\n          n.appendChild(z);\n          var F = z.style;\n          isNaN(x) || (F.minWidth = x - 2 * q + \"px\");\n          F.textAlign = this.textAlign;\n          F.maxWidth = this.maxWidth + \"px\";\n          F.fontSize = A + \"px\";\n          F.color = this.color;\n          F.fontFamily = v;\n          z.innerHTML = this.text;\n          c.chartDiv.appendChild(n);\n          this.textDiv = n;\n          var F = n.offsetWidth,\n              E = n.offsetHeight;\n          n.clientHeight && (F = n.clientWidth, E = n.clientHeight);\n          v = E + 2 * y;\n          z = F + 2 * q;\n          !isNaN(x) && z < x && (z = x);\n          window.opera && (v += 2);\n          var H = !1,\n              A = this.offsetY;\n          c.handDrawn && (A += c.handDrawScatter + 2);\n          \"H\" != u ? (x = a - z / 2, b < k + v + 10 && \"down\" != u ? (H = !0, e && (b += A), A = b + B, this.deltaSignY = -1) : (e && (b -= A), A = b - v - B, this.deltaSignY = 1)) : (2 * B > v && (B = v / 2), A = b - v / 2, a < h + (l - h) / 2 ? (x = a + B, this.deltaSignX = -1) : (x = a - z - B, this.deltaSignX = 1));\n          A + v >= m && (A = m - v);\n          A < k && (A = k);\n          x < h && (x = h);\n          x + z > l && (x = l - z);\n          var k = A + y,\n              m = x + q,\n              G = this.shadowAlpha,\n              D = this.shadowColor,\n              q = this.borderThickness,\n              K = this.bulletSize,\n              J,\n              y = this.fillAlpha,\n              L = this.borderAlpha;\n          this.showBullet && (J = d.circle(f, K, r, y), g.push(J));\n          this.drop ? (h = z / 1.6, l = 0, \"V\" == u && (u = \"down\"), \"H\" == u && (u = \"left\"), \"down\" == u && (x = a + 1, A = b - h - h / 3), \"up\" == u && (l = 180, x = a + 1, A = b + h + h / 3), \"left\" == u && (l = 270, x = a + h + h / 3 + 2, A = b), \"right\" == u && (l = 90, x = a - h - h / 3 + 2, A = b), k = A - E / 2 + 1, m = x - F / 2 - 1, p = d.drop(f, h, l, p, y, q, t, L)) : 0 < w || 0 === B ? (0 < G && (a = d.rect(f, z, v, p, 0, q + 1, D, G, w), d.isModern ? a.translate(1, 1) : a.translate(4, 4), g.push(a)), p = d.rect(f, z, v, p, y, q, t, L, w)) : (r = [], w = [], \"H\" != u ? (h = a - x, h > z - B && (h = z - B), h < B && (h = B), r = [0, h - B, a - x, h + B, z, z, 0, 0], w = H ? [0, 0, b - A, 0, 0, v, v, 0] : [v, v, b - A, v, v, 0, 0, v]) : (u = b - A, u > v - B && (u = v - B), u < B && (u = B), w = [0, u - B, b - A, u + B, v, v, 0, 0], r = a < h + (l - h) / 2 ? [0, 0, x < a ? 0 : a - x, 0, 0, z, z, 0] : [z, z, x + z > a ? z : a - x, z, z, 0, 0, z]), 0 < G && (a = d.polygon(f, r, w, p, 0, q, D, G), a.translate(1, 1), g.push(a)), p = d.polygon(f, r, w, p, y, q, t, L));\n          this.bg = p;\n          g.push(p);\n          p.toFront();\n          d.setCN(c, p, \"balloon-bg\");\n          this.className && d.setCN(c, p, \"balloon-bg-\" + this.className);\n          f = 1 * this.deltaSignX;\n          m += this.sdx;\n          k += this.sdy;\n          C.left = m + \"px\";\n          C.top = k + \"px\";\n          g.translate(x - f, A, 1, !0);\n          p = p.getBBox();\n          this.bottom = A + v + 1;\n          this.yPos = p.y + A;\n          J && J.translate(this.pointToX - x + f, b - A);\n          b = this.animationDuration;\n          0 < this.animationDuration && !e && !isNaN(this.prevX) && (g.translate(this.prevX, this.prevY, NaN, !0), g.animate({\n            translate: x - f + \",\" + A\n          }, b, \"easeOutSine\"), n && (C.left = this.prevTX + \"px\", C.top = this.prevTY + \"px\", this.xAnim = c.animate({\n            node: n\n          }, \"left\", this.prevTX, m, b, \"easeOutSine\", \"px\"), this.yAnim = c.animate({\n            node: n\n          }, \"top\", this.prevTY, k, b, \"easeOutSine\", \"px\")));\n          this.prevX = x - f;\n          this.prevY = A;\n          this.prevTX = m;\n          this.prevTY = k;\n        }\n      }\n    },\n    fixPrevious: function () {\n      this.rPrevX = this.prevX;\n      this.rPrevY = this.prevY;\n      this.rPrevTX = this.prevTX;\n      this.rPrevTY = this.prevTY;\n    },\n    restorePrevious: function () {\n      this.prevX = this.rPrevX;\n      this.prevY = this.rPrevY;\n      this.prevTX = this.rPrevTX;\n      this.prevTY = this.rPrevTY;\n    },\n    followMouse: function () {\n      if (this.follow && this.show) {\n        var a = this.chart.mouseX - this.offsetX * this.deltaSignX - this.sdx,\n            b = this.chart.mouseY - this.sdy;\n        this.pointToX = a;\n        this.pointToY = b;\n        if (a != this.previousX || b != this.previousY) if (this.previousX = a, this.previousY = b, 0 === this.cornerRadius) this.draw();else {\n          var c = this.set;\n\n          if (c) {\n            var e = c.getBBox(),\n                a = a - e.width / 2,\n                d = b - e.height - 10;\n            a < this.l && (a = this.l);\n            a > this.r - e.width && (a = this.r - e.width);\n            d < this.t && (d = b + 10);\n            c.translate(a, d);\n            b = this.textDiv.style;\n            b.left = a + this.horizontalPadding + \"px\";\n            b.top = d + this.verticalPadding + \"px\";\n          }\n        }\n      }\n    },\n    changeColor: function (a) {\n      this.balloonColor = a;\n    },\n    setBounds: function (a, b, c, e) {\n      this.l = a;\n      this.t = b;\n      this.r = c;\n      this.b = e;\n      this.destroyTO && clearTimeout(this.destroyTO);\n    },\n    showBalloon: function (a) {\n      if (this.text != a || this.positionChanged) this.text = a, this.isHiding = !1, this.show = !0, this.destroyTO && clearTimeout(this.destroyTO), a = this.chart, this.fadeAnim1 && a.stopAnim(this.fadeAnim1), this.fadeAnim2 && a.stopAnim(this.fadeAnim2), this.draw(), this.positionChanged = !1;\n    },\n    hide: function (a) {\n      var b = this;\n      b.text = void 0;\n      isNaN(a) && (a = b.fadeOutDuration);\n      var c = b.chart;\n\n      if (0 < a && !b.isHiding) {\n        b.isHiding = !0;\n        b.destroyTO && clearTimeout(b.destroyTO);\n        b.destroyTO = setTimeout(function () {\n          b.destroy.call(b);\n        }, 1E3 * a);\n        b.follow = !1;\n        b.show = !1;\n        var e = b.set;\n        e && (e.setAttr(\"opacity\", b.fillAlpha), b.fadeAnim1 = e.animate({\n          opacity: 0\n        }, a, \"easeInSine\"));\n        b.textDiv && (b.fadeAnim2 = c.animate({\n          node: b.textDiv\n        }, \"opacity\", 1, 0, a, \"easeInSine\", \"\"));\n      } else b.show = !1, b.follow = !1, b.destroy();\n    },\n    setPosition: function (a, b) {\n      if (a != this.pointToX || b != this.pointToY) this.previousX = this.pointToX, this.previousY = this.pointToY, this.pointToX = a, this.pointToY = b, this.positionChanged = !0;\n    },\n    followCursor: function (a) {\n      var b = this;\n      b.follow = a;\n      clearInterval(b.interval);\n      var c = b.chart.mouseX - b.sdx,\n          e = b.chart.mouseY - b.sdy;\n      !isNaN(c) && a && (b.pointToX = c - b.offsetX * b.deltaSignX, b.pointToY = e, b.followMouse(), b.interval = setInterval(function () {\n        b.followMouse.call(b);\n      }, 40));\n    },\n    removeDiv: function () {\n      if (this.textDiv) {\n        var a = this.textDiv.parentNode;\n        a && a.removeChild(this.textDiv);\n      }\n    },\n    destroy: function () {\n      clearInterval(this.interval);\n      d.remove(this.set);\n      this.removeDiv();\n      this.set = null;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.circle = function (a, b, c, e, f, g, h, k, l) {\n    0 >= b && (b = .001);\n    if (void 0 == f || 0 === f) f = .01;\n    void 0 === g && (g = \"#000000\");\n    void 0 === h && (h = 0);\n    e = {\n      fill: c,\n      stroke: g,\n      \"fill-opacity\": e,\n      \"stroke-width\": f,\n      \"stroke-opacity\": h\n    };\n    a = isNaN(l) ? a.circle(0, 0, b).attr(e) : a.ellipse(0, 0, b, l).attr(e);\n    k && a.gradient(\"radialGradient\", [c, d.adjustLuminosity(c, -.6)]);\n    return a;\n  };\n\n  d.text = function (a, b, c, e, f, g, h, k) {\n    g || (g = \"middle\");\n    \"right\" == g && (g = \"end\");\n    \"left\" == g && (g = \"start\");\n    isNaN(k) && (k = 1);\n    void 0 !== b && (b = String(b), d.isIE && !d.isModern && (b = b.replace(\"&amp;\", \"&\"), b = b.replace(\"&\", \"&amp;\")));\n    c = {\n      fill: c,\n      \"font-family\": e,\n      \"font-size\": f + \"px\",\n      opacity: k\n    };\n    !0 === h && (c[\"font-weight\"] = \"bold\");\n    c[\"text-anchor\"] = g;\n    return a.text(b, c);\n  };\n\n  d.polygon = function (a, b, c, e, f, g, h, k, l, m, n) {\n    isNaN(g) && (g = .01);\n    isNaN(k) && (k = f);\n    var p = e,\n        t = !1;\n    \"object\" == typeof p && 1 < p.length && (t = !0, p = p[0]);\n    void 0 === h && (h = p);\n    f = {\n      fill: p,\n      stroke: h,\n      \"fill-opacity\": f,\n      \"stroke-width\": g,\n      \"stroke-opacity\": k\n    };\n    void 0 !== n && 0 < n && (f[\"stroke-dasharray\"] = n);\n    n = d.dx;\n    g = d.dy;\n    a.handDrawn && (c = d.makeHD(b, c, a.handDrawScatter), b = c[0], c = c[1]);\n    h = Math.round;\n    m && (b[r] = d.roundTo(b[r], 5), c[r] = d.roundTo(c[r], 5), h = Number);\n    k = \"M\" + (h(b[0]) + n) + \",\" + (h(c[0]) + g);\n\n    for (var r = 1; r < b.length; r++) m && (b[r] = d.roundTo(b[r], 5), c[r] = d.roundTo(c[r], 5)), k += \" L\" + (h(b[r]) + n) + \",\" + (h(c[r]) + g);\n\n    a = a.path(k + \" Z\").attr(f);\n    t && a.gradient(\"linearGradient\", e, l);\n    return a;\n  };\n\n  d.rect = function (a, b, c, e, f, g, h, k, l, m, n) {\n    if (isNaN(b) || isNaN(c)) return a.set();\n    isNaN(g) && (g = 0);\n    void 0 === l && (l = 0);\n    void 0 === m && (m = 270);\n    isNaN(f) && (f = 0);\n    var p = e,\n        t = !1;\n    \"object\" == typeof p && (p = p[0], t = !0);\n    void 0 === h && (h = p);\n    void 0 === k && (k = f);\n    b = Math.round(b);\n    c = Math.round(c);\n    var r = 0,\n        q = 0;\n    0 > b && (b = Math.abs(b), r = -b);\n    0 > c && (c = Math.abs(c), q = -c);\n    r += d.dx;\n    q += d.dy;\n    f = {\n      fill: p,\n      stroke: h,\n      \"fill-opacity\": f,\n      \"stroke-opacity\": k\n    };\n    void 0 !== n && 0 < n && (f[\"stroke-dasharray\"] = n);\n    a = a.rect(r, q, b, c, l, g).attr(f);\n    t && a.gradient(\"linearGradient\", e, m);\n    return a;\n  };\n\n  d.bullet = function (a, b, c, e, f, g, h, k, l, m, n, p, t) {\n    var r;\n    \"circle\" == b && (b = \"round\");\n\n    switch (b) {\n      case \"round\":\n        r = d.circle(a, c / 2, e, f, g, h, k);\n        break;\n\n      case \"square\":\n        r = d.polygon(a, [-c / 2, c / 2, c / 2, -c / 2], [c / 2, c / 2, -c / 2, -c / 2], e, f, g, h, k, m - 180, void 0, t);\n        break;\n\n      case \"rectangle\":\n        r = d.polygon(a, [-c, c, c, -c], [c / 2, c / 2, -c / 2, -c / 2], e, f, g, h, k, m - 180, void 0, t);\n        break;\n\n      case \"diamond\":\n        r = d.polygon(a, [-c / 2, 0, c / 2, 0], [0, -c / 2, 0, c / 2], e, f, g, h, k);\n        break;\n\n      case \"triangleUp\":\n        r = d.triangle(a, c, 0, e, f, g, h, k);\n        break;\n\n      case \"triangleDown\":\n        r = d.triangle(a, c, 180, e, f, g, h, k);\n        break;\n\n      case \"triangleLeft\":\n        r = d.triangle(a, c, 270, e, f, g, h, k);\n        break;\n\n      case \"triangleRight\":\n        r = d.triangle(a, c, 90, e, f, g, h, k);\n        break;\n\n      case \"bubble\":\n        r = d.circle(a, c / 2, e, f, g, h, k, !0);\n        break;\n\n      case \"line\":\n        r = d.line(a, [-c / 2, c / 2], [0, 0], e, f, g, h, k);\n        break;\n\n      case \"yError\":\n        r = a.set();\n        r.push(d.line(a, [0, 0], [-c / 2, c / 2], e, f, g));\n        r.push(d.line(a, [-l, l], [-c / 2, -c / 2], e, f, g));\n        r.push(d.line(a, [-l, l], [c / 2, c / 2], e, f, g));\n        break;\n\n      case \"xError\":\n        r = a.set(), r.push(d.line(a, [-c / 2, c / 2], [0, 0], e, f, g)), r.push(d.line(a, [-c / 2, -c / 2], [-l, l], e, f, g)), r.push(d.line(a, [c / 2, c / 2], [-l, l], e, f, g));\n    }\n\n    r && r.pattern(n, NaN, p);\n    return r;\n  };\n\n  d.triangle = function (a, b, c, e, d, g, h, k) {\n    if (void 0 === g || 0 === g) g = 1;\n    void 0 === h && (h = \"#000\");\n    void 0 === k && (k = 0);\n    e = {\n      fill: e,\n      stroke: h,\n      \"fill-opacity\": d,\n      \"stroke-width\": g,\n      \"stroke-opacity\": k\n    };\n    b /= 2;\n    var l;\n    0 === c && (l = \" M\" + -b + \",\" + b + \" L0,\" + -b + \" L\" + b + \",\" + b + \" Z\");\n    180 == c && (l = \" M\" + -b + \",\" + -b + \" L0,\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    90 == c && (l = \" M\" + -b + \",\" + -b + \" L\" + b + \",0 L\" + -b + \",\" + b + \" Z\");\n    270 == c && (l = \" M\" + -b + \",0 L\" + b + \",\" + b + \" L\" + b + \",\" + -b + \" Z\");\n    return a.path(l).attr(e);\n  };\n\n  d.line = function (a, b, c, e, f, g, h, k, l, m, n) {\n    if (a.handDrawn && !n) return d.handDrawnLine(a, b, c, e, f, g, h, k, l, m, n);\n    g = {\n      fill: \"none\",\n      \"stroke-width\": g\n    };\n    void 0 !== h && 0 < h && (g[\"stroke-dasharray\"] = h);\n    isNaN(f) || (g[\"stroke-opacity\"] = f);\n    e && (g.stroke = e);\n    e = Math.round;\n    m && (e = Number, b[0] = d.roundTo(b[0], 5), c[0] = d.roundTo(c[0], 5));\n    m = d.dx;\n    f = d.dy;\n    h = \"M\" + (e(b[0]) + m) + \",\" + (e(c[0]) + f);\n\n    for (k = 1; k < b.length; k++) b[k] = d.roundTo(b[k], 5), c[k] = d.roundTo(c[k], 5), h += \" L\" + (e(b[k]) + m) + \",\" + (e(c[k]) + f);\n\n    if (d.VML) return a.path(h, void 0, !0).attr(g);\n    l && (h += \" M0,0 L0,0\");\n    return a.path(h).attr(g);\n  };\n\n  d.makeHD = function (a, b, c) {\n    for (var e = [], d = [], g = 1; g < a.length; g++) for (var h = Number(a[g - 1]), k = Number(b[g - 1]), l = Number(a[g]), m = Number(b[g]), n = Math.round(Math.sqrt(Math.pow(l - h, 2) + Math.pow(m - k, 2)) / 50) + 1, l = (l - h) / n, m = (m - k) / n, p = 0; p <= n; p++) {\n      var t = k + p * m + Math.random() * c;\n      e.push(h + p * l + Math.random() * c);\n      d.push(t);\n    }\n\n    return [e, d];\n  };\n\n  d.handDrawnLine = function (a, b, c, e, f, g, h, k, l, m) {\n    var n,\n        p = a.set();\n\n    for (n = 1; n < b.length; n++) for (var t = [b[n - 1], b[n]], r = [c[n - 1], c[n]], r = d.makeHD(t, r, a.handDrawScatter), t = r[0], r = r[1], q = 1; q < t.length; q++) p.push(d.line(a, [t[q - 1], t[q]], [r[q - 1], r[q]], e, f, g + Math.random() * a.handDrawThickness - a.handDrawThickness / 2, h, k, l, m, !0));\n\n    return p;\n  };\n\n  d.doNothing = function (a) {\n    return a;\n  };\n\n  d.drop = function (a, b, c, e, d, g, h, k) {\n    var l = 1 / 180 * Math.PI,\n        m = c - 20,\n        n = Math.sin(m * l) * b,\n        p = Math.cos(m * l) * b,\n        t = Math.sin((m + 40) * l) * b,\n        r = Math.cos((m + 40) * l) * b,\n        q = .8 * b,\n        y = -b / 3,\n        B = b / 3;\n    0 === c && (y = -y, B = 0);\n    180 == c && (B = 0);\n    90 == c && (y = 0);\n    270 == c && (y = 0, B = -B);\n    c = {\n      fill: e,\n      stroke: h,\n      \"stroke-width\": g,\n      \"stroke-opacity\": k,\n      \"fill-opacity\": d\n    };\n    b = \"M\" + n + \",\" + p + \" A\" + b + \",\" + b + \",0,1,1,\" + t + \",\" + r + (\" A\" + q + \",\" + q + \",0,0,0,\" + (Math.sin((m + 20) * l) * b + B) + \",\" + (Math.cos((m + 20) * l) * b + y));\n    b += \" A\" + q + \",\" + q + \",0,0,0,\" + n + \",\" + p;\n    return a.path(b, void 0, void 0, \"1000,1000\").attr(c);\n  };\n\n  d.wedge = function (a, b, c, e, f, g, h, k, l, m, n, p, t, r) {\n    var q = Math.round;\n    g = q(g);\n    h = q(h);\n    k = q(k);\n    var y = q(h / g * k),\n        B = d.VML,\n        u = 359.5 + g / 100;\n    359.94 < u && (u = 359.94);\n    f >= u && (f = u);\n    var w = 1 / 180 * Math.PI,\n        u = b + Math.sin(e * w) * k,\n        v = c - Math.cos(e * w) * y,\n        A = b + Math.sin(e * w) * g,\n        C = c - Math.cos(e * w) * h,\n        x = b + Math.sin((e + f) * w) * g,\n        z = c - Math.cos((e + f) * w) * h,\n        F = b + Math.sin((e + f) * w) * k,\n        w = c - Math.cos((e + f) * w) * y,\n        E = {\n      fill: d.adjustLuminosity(m.fill, -.2),\n      \"stroke-opacity\": 0,\n      \"fill-opacity\": m[\"fill-opacity\"]\n    },\n        H = 0;\n    180 < Math.abs(f) && (H = 1);\n    e = a.set();\n    var G;\n    B && (u = q(10 * u), A = q(10 * A), x = q(10 * x), F = q(10 * F), v = q(10 * v), C = q(10 * C), z = q(10 * z), w = q(10 * w), b = q(10 * b), l = q(10 * l), c = q(10 * c), g *= 10, h *= 10, k *= 10, y *= 10, 1 > Math.abs(f) && 1 >= Math.abs(x - A) && 1 >= Math.abs(z - C) && (G = !0));\n    f = \"\";\n    var D;\n    p && (E[\"fill-opacity\"] = 0, E[\"stroke-opacity\"] = m[\"stroke-opacity\"] / 2, E.stroke = m.stroke);\n\n    if (0 < l) {\n      D = \" M\" + u + \",\" + (v + l) + \" L\" + A + \",\" + (C + l);\n      B ? (G || (D += \" A\" + (b - g) + \",\" + (l + c - h) + \",\" + (b + g) + \",\" + (l + c + h) + \",\" + A + \",\" + (C + l) + \",\" + x + \",\" + (z + l)), D += \" L\" + F + \",\" + (w + l), 0 < k && (G || (D += \" B\" + (b - k) + \",\" + (l + c - y) + \",\" + (b + k) + \",\" + (l + c + y) + \",\" + F + \",\" + (l + w) + \",\" + u + \",\" + (l + v)))) : (D += \" A\" + g + \",\" + h + \",0,\" + H + \",1,\" + x + \",\" + (z + l) + \" L\" + F + \",\" + (w + l), 0 < k && (D += \" A\" + k + \",\" + y + \",0,\" + H + \",0,\" + u + \",\" + (v + l)));\n      D += \" Z\";\n      var K = l;\n      B && (K /= 10);\n\n      for (var J = 0; J < K; J += 10) {\n        var L = a.path(D, void 0, void 0, \"1000,1000\").attr(E);\n        e.push(L);\n        L.translate(0, -J);\n      }\n\n      D = a.path(\" M\" + u + \",\" + v + \" L\" + u + \",\" + (v + l) + \" L\" + A + \",\" + (C + l) + \" L\" + A + \",\" + C + \" L\" + u + \",\" + v + \" Z\", void 0, void 0, \"1000,1000\").attr(E);\n      l = a.path(\" M\" + x + \",\" + z + \" L\" + x + \",\" + (z + l) + \" L\" + F + \",\" + (w + l) + \" L\" + F + \",\" + w + \" L\" + x + \",\" + z + \" Z\", void 0, void 0, \"1000,1000\").attr(E);\n      e.push(D);\n      e.push(l);\n    }\n\n    B ? (G || (f = \" A\" + q(b - g) + \",\" + q(c - h) + \",\" + q(b + g) + \",\" + q(c + h) + \",\" + q(A) + \",\" + q(C) + \",\" + q(x) + \",\" + q(z)), h = \" M\" + q(u) + \",\" + q(v) + \" L\" + q(A) + \",\" + q(C) + f + \" L\" + q(F) + \",\" + q(w)) : h = \" M\" + u + \",\" + v + \" L\" + A + \",\" + C + (\" A\" + g + \",\" + h + \",0,\" + H + \",1,\" + x + \",\" + z) + \" L\" + F + \",\" + w;\n    0 < k && (B ? G || (h += \" B\" + (b - k) + \",\" + (c - y) + \",\" + (b + k) + \",\" + (c + y) + \",\" + F + \",\" + w + \",\" + u + \",\" + v) : h += \" A\" + k + \",\" + y + \",0,\" + H + \",0,\" + u + \",\" + v);\n    a.handDrawn && (k = d.line(a, [u, A], [v, C], m.stroke, m.thickness * Math.random() * a.handDrawThickness, m[\"stroke-opacity\"]), e.push(k));\n    a = a.path(h + \" Z\", void 0, void 0, \"1000,1000\").attr(m);\n\n    if (n) {\n      k = [];\n\n      for (y = 0; y < n.length; y++) k.push(d.adjustLuminosity(m.fill, n[y]));\n\n      \"radial\" != r || d.isModern || (k = []);\n      0 < k.length && a.gradient(r + \"Gradient\", k);\n    }\n\n    d.isModern && \"radial\" == r && a.grad && (a.grad.setAttribute(\"gradientUnits\", \"userSpaceOnUse\"), a.grad.setAttribute(\"r\", g), a.grad.setAttribute(\"cx\", b), a.grad.setAttribute(\"cy\", c));\n    a.pattern(p, NaN, t);\n    e.wedge = a;\n    e.push(a);\n    return e;\n  };\n\n  d.rgb2hex = function (a) {\n    return (a = a.match(/^rgba?[\\s+]?\\([\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?,[\\s+]?(\\d+)[\\s+]?/i)) && 4 === a.length ? \"#\" + (\"0\" + parseInt(a[1], 10).toString(16)).slice(-2) + (\"0\" + parseInt(a[2], 10).toString(16)).slice(-2) + (\"0\" + parseInt(a[3], 10).toString(16)).slice(-2) : \"\";\n  };\n\n  d.adjustLuminosity = function (a, b) {\n    a && -1 != a.indexOf(\"rgb\") && (a = d.rgb2hex(a));\n    a = String(a).replace(/[^0-9a-f]/gi, \"\");\n    6 > a.length && (a = String(a[0]) + String(a[0]) + String(a[1]) + String(a[1]) + String(a[2]) + String(a[2]));\n    b = b || 0;\n    var c = \"#\",\n        e,\n        f;\n\n    for (f = 0; 3 > f; f++) e = parseInt(a.substr(2 * f, 2), 16), e = Math.round(Math.min(Math.max(0, e + e * b), 255)).toString(16), c += (\"00\" + e).substr(e.length);\n\n    return c;\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmLegend = d.Class({\n    construct: function (a) {\n      this.enabled = !0;\n      this.cname = \"AmLegend\";\n      this.createEvents(\"rollOverMarker\", \"rollOverItem\", \"rollOutMarker\", \"rollOutItem\", \"showItem\", \"hideItem\", \"clickMarker\", \"clickLabel\");\n      this.position = \"bottom\";\n      this.borderColor = this.color = \"#000000\";\n      this.borderAlpha = 0;\n      this.markerLabelGap = 5;\n      this.verticalGap = 10;\n      this.align = \"left\";\n      this.horizontalGap = 0;\n      this.spacing = 10;\n      this.markerDisabledColor = \"#AAB3B3\";\n      this.markerType = \"square\";\n      this.markerSize = 16;\n      this.markerBorderThickness = this.markerBorderAlpha = 1;\n      this.marginBottom = this.marginTop = 0;\n      this.marginLeft = this.marginRight = 20;\n      this.autoMargins = !0;\n      this.valueWidth = 50;\n      this.switchable = !0;\n      this.switchType = \"x\";\n      this.switchColor = \"#FFFFFF\";\n      this.rollOverColor = \"#CC0000\";\n      this.reversedOrder = !1;\n      this.labelText = \"[[title]]\";\n      this.valueText = \"[[value]]\";\n      this.accessibleLabel = \"[[title]]\";\n      this.useMarkerColorForLabels = !1;\n      this.rollOverGraphAlpha = 1;\n      this.textClickEnabled = !1;\n      this.equalWidths = !0;\n      this.backgroundColor = \"#FFFFFF\";\n      this.backgroundAlpha = 0;\n      this.useGraphSettings = !1;\n      this.showEntries = !0;\n      this.labelDx = 0;\n      d.applyTheme(this, a, this.cname);\n    },\n    setData: function (a) {\n      this.legendData = a;\n      this.invalidateSize();\n    },\n    invalidateSize: function () {\n      this.destroy();\n      this.entries = [];\n      this.valueLabels = [];\n      var a = this.legendData;\n      this.enabled && (d.ifArray(a) || d.ifArray(this.data)) && this.drawLegend();\n    },\n    drawLegend: function () {\n      var a = this.chart,\n          b = this.position,\n          c = this.width,\n          e = a.divRealWidth,\n          f = a.divRealHeight,\n          g = this.div,\n          h = this.legendData;\n      this.data && (h = this.combineLegend ? this.legendData.concat(this.data) : this.data);\n      isNaN(this.fontSize) && (this.fontSize = a.fontSize);\n      this.maxColumnsReal = this.maxColumns;\n      if (\"right\" == b || \"left\" == b) this.maxColumnsReal = 1, this.autoMargins && (this.marginLeft = this.marginRight = 10);else if (this.autoMargins) {\n        this.marginRight = a.marginRight;\n        this.marginLeft = a.marginLeft;\n        var k = a.autoMarginOffset;\n        \"bottom\" == b ? (this.marginBottom = k, this.marginTop = 0) : (this.marginTop = k, this.marginBottom = 0);\n      }\n      c = void 0 !== c ? d.toCoordinate(c, e) : \"right\" != b && \"left\" != b ? a.realWidth : 0 < this.ieW ? this.ieW : a.realWidth;\n      \"outside\" == b ? (c = g.offsetWidth, f = g.offsetHeight, g.clientHeight && (c = g.clientWidth, f = g.clientHeight)) : (isNaN(c) || (g.style.width = c + \"px\"), g.className = \"amChartsLegend \" + a.classNamePrefix + \"-legend-div\");\n      this.divWidth = c;\n      (b = this.container) ? (b.container.innerHTML = \"\", g.appendChild(b.container), b.width = c, b.height = f, b.setSize(c, f), b.addDefs(a)) : b = new d.AmDraw(g, c, f, a);\n      this.container = b;\n      this.lx = 0;\n      this.ly = 8;\n      f = this.markerSize;\n      f > this.fontSize && (this.ly = f / 2 - 1);\n      0 < f && (this.lx += f + this.markerLabelGap);\n      this.titleWidth = 0;\n      if (f = this.title) f = d.text(this.container, f, this.color, a.fontFamily, this.fontSize, \"start\", !0), d.setCN(a, f, \"legend-title\"), f.translate(this.marginLeft, this.marginTop + this.verticalGap + this.ly + 1), a = f.getBBox(), this.titleWidth = a.width + 15, this.titleHeight = a.height + 6;\n      this.index = this.maxLabelWidth = 0;\n\n      if (this.showEntries) {\n        for (a = 0; a < h.length; a++) this.createEntry(h[a]);\n\n        for (a = this.index = 0; a < h.length; a++) this.createValue(h[a]);\n      }\n\n      this.arrangeEntries();\n      this.updateValues();\n    },\n    arrangeEntries: function () {\n      var a = this.position,\n          b = this.marginLeft + this.titleWidth,\n          c = this.marginRight,\n          e = this.marginTop,\n          f = this.marginBottom,\n          g = this.horizontalGap,\n          h = this.div,\n          k = this.divWidth,\n          l = this.maxColumnsReal,\n          m = this.verticalGap,\n          n = this.spacing,\n          p = k - c - b,\n          t = 0,\n          r = 0,\n          q = this.container;\n      this.set && this.set.remove();\n      var y = q.set();\n      this.set = y;\n      var B = q.set();\n      y.push(B);\n      var u = this.entries,\n          w,\n          v;\n\n      for (v = 0; v < u.length; v++) {\n        w = u[v].getBBox();\n        var A = w.width;\n        A > t && (t = A);\n        w = w.height;\n        w > r && (r = w);\n      }\n\n      var A = r = 0,\n          C = g,\n          x = 0,\n          z = 0;\n\n      for (v = 0; v < u.length; v++) {\n        var F = u[v];\n        this.reversedOrder && (F = u[u.length - v - 1]);\n        w = F.getBBox();\n        var E;\n        this.equalWidths ? E = A * (t + n + this.markerLabelGap) : (E = C, C = C + w.width + g + n);\n        E + w.width > p && 0 < v && 0 !== A && (r++, E = A = 0, C = E + w.width + g + n, x = x + z + m, z = 0);\n        w.height > z && (z = w.height);\n        F.translate(E, x);\n        A++;\n        !isNaN(l) && A >= l && (A = 0, r++, x = x + z + m, C = g, z = 0);\n        B.push(F);\n      }\n\n      w = B.getBBox();\n      l = w.height + 2 * m - 1;\n      \"left\" == a || \"right\" == a ? (n = w.width + 2 * g, k = n + b + c, h.style.width = k + \"px\", this.ieW = k) : n = k - b - c - 1;\n      c = d.polygon(this.container, [0, n, n, 0], [0, 0, l, l], this.backgroundColor, this.backgroundAlpha, 1, this.borderColor, this.borderAlpha);\n      d.setCN(this.chart, c, \"legend-bg\");\n      y.push(c);\n      y.translate(b, e);\n      c.toBack();\n      b = g;\n      if (\"top\" == a || \"bottom\" == a || \"absolute\" == a || \"outside\" == a) \"center\" == this.align ? b = g + (n - w.width) / 2 : \"right\" == this.align && (b = g + n - w.width);\n      B.translate(b, m + 1);\n      this.titleHeight > l && (l = this.titleHeight);\n      e = l + e + f + 1;\n      0 > e && (e = 0);\n      \"absolute\" != a && \"outside\" != a && e > this.chart.divRealHeight && (h.style.top = \"0px\");\n      h.style.height = Math.round(e) + \"px\";\n      q.setSize(this.divWidth, e);\n    },\n    createEntry: function (a) {\n      if (!1 !== a.visibleInLegend && !a.hideFromLegend) {\n        var b = this,\n            c = b.chart,\n            e = b.useGraphSettings,\n            f = a.markerType;\n        f && (e = !1);\n        a.legendEntryWidth = b.markerSize;\n        f || (f = b.markerType);\n        var g = a.color,\n            h = a.alpha;\n        a.legendKeyColor && (g = a.legendKeyColor());\n        a.legendKeyAlpha && (h = a.legendKeyAlpha());\n        var k;\n        !0 === a.hidden && (k = g = b.markerDisabledColor);\n        var l = a.pattern,\n            m,\n            n = a.customMarker;\n        n || (n = b.customMarker);\n        var p = b.container,\n            t = b.markerSize,\n            r = 0,\n            q = 0,\n            y = t / 2;\n\n        if (e) {\n          e = a.type;\n          b.switchType = void 0;\n          if (\"line\" == e || \"step\" == e || \"smoothedLine\" == e || \"ohlc\" == e) m = p.set(), a.hidden || (g = a.lineColorR, k = a.bulletBorderColorR), r = d.line(p, [0, 2 * t], [t / 2, t / 2], g, a.lineAlpha, a.lineThickness, a.dashLength), d.setCN(c, r, \"graph-stroke\"), m.push(r), a.bullet && (a.hidden || (g = a.bulletColorR), r = d.bullet(p, a.bullet, a.bulletSize, g, a.bulletAlpha, a.bulletBorderThickness, k, a.bulletBorderAlpha)) && (d.setCN(c, r, \"graph-bullet\"), r.translate(t + 1, t / 2), m.push(r)), y = 0, r = t, q = t / 3;else {\n            a.getGradRotation && (m = a.getGradRotation(), 0 === m && (m = 180));\n            r = a.fillColorsR;\n            !0 === a.hidden && (r = g);\n            if (m = b.createMarker(\"rectangle\", r, a.fillAlphas, a.lineThickness, g, a.lineAlpha, m, l, a.dashLength)) y = t, m.translate(y, t / 2);\n            r = t;\n          }\n          d.setCN(c, m, \"graph-\" + e);\n          d.setCN(c, m, \"graph-\" + a.id);\n        } else if (n) m = p.image(n, 0, 0, t, t);else {\n          var B;\n          isNaN(b.gradientRotation) || (B = 180 + b.gradientRotation);\n          (m = b.createMarker(f, g, h, void 0, void 0, void 0, B, l)) && m.translate(t / 2, t / 2);\n        }\n\n        d.setCN(c, m, \"legend-marker\");\n        b.addListeners(m, a);\n        p = p.set([m]);\n        b.switchable && a.switchable && p.setAttr(\"cursor\", \"pointer\");\n        void 0 !== a.id && d.setCN(c, p, \"legend-item-\" + a.id);\n        d.setCN(c, p, a.className, !0);\n        k = b.switchType;\n        var u;\n        k && \"none\" != k && 0 < t && (\"x\" == k ? (u = b.createX(), u.translate(t / 2, t / 2)) : u = b.createV(), u.dItem = a, !0 !== a.hidden ? \"x\" == k ? u.hide() : u.show() : \"x\" != k && u.hide(), b.switchable || u.hide(), b.addListeners(u, a), a.legendSwitch = u, p.push(u), d.setCN(c, u, \"legend-switch\"));\n        k = b.color;\n        a.showBalloon && b.textClickEnabled && void 0 !== b.selectedColor && (k = b.selectedColor);\n        b.useMarkerColorForLabels && !l && (k = g);\n        !0 === a.hidden && (k = b.markerDisabledColor);\n        g = d.massReplace(b.labelText, {\n          \"[[title]]\": a.title\n        });\n        void 0 !== b.tabIndex && (p.setAttr(\"tabindex\", b.tabIndex), p.setAttr(\"role\", \"menuitem\"), p.keyup(function (c) {\n          13 == c.keyCode && b.clickMarker(a, c);\n        }));\n        c.accessible && b.accessibleLabel && (l = d.massReplace(b.accessibleLabel, {\n          \"[[title]]\": a.title\n        }), c.makeAccessible(p, l));\n        l = b.fontSize;\n        m && (t <= l && (t = t / 2 + b.ly - l / 2 + (l + 2 - t) / 2 - q, m.translate(y, t), u && u.translate(u.x, t)), a.legendEntryWidth = m.getBBox().width);\n        var w;\n        g && (g = d.fixBrakes(g), a.legendTextReal = g, w = b.labelWidth, w = isNaN(w) ? d.text(b.container, g, k, c.fontFamily, l, \"start\") : d.wrappedText(b.container, g, k, c.fontFamily, l, \"start\", !1, w, 0), d.setCN(c, w, \"legend-label\"), w.translate(b.lx + r, b.ly), p.push(w), b.labelDx = r, c = w.getBBox().width, b.maxLabelWidth < c && (b.maxLabelWidth = c));\n        b.entries[b.index] = p;\n        a.legendEntry = b.entries[b.index];\n        a.legendMarker = m;\n        a.legendLabel = w;\n        b.index++;\n      }\n    },\n    addListeners: function (a, b) {\n      var c = this;\n      a && a.mouseover(function (a) {\n        c.rollOverMarker(b, a);\n      }).mouseout(function (a) {\n        c.rollOutMarker(b, a);\n      }).click(function (a) {\n        c.clickMarker(b, a);\n      });\n    },\n    rollOverMarker: function (a, b) {\n      this.switchable && this.dispatch(\"rollOverMarker\", a, b);\n      this.dispatch(\"rollOverItem\", a, b);\n    },\n    rollOutMarker: function (a, b) {\n      this.switchable && this.dispatch(\"rollOutMarker\", a, b);\n      this.dispatch(\"rollOutItem\", a, b);\n    },\n    clickMarker: function (a, b) {\n      this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n      this.dispatch(\"clickMarker\", a, b);\n    },\n    rollOverLabel: function (a, b) {\n      a.hidden || this.textClickEnabled && a.legendLabel && a.legendLabel.attr({\n        fill: this.rollOverColor\n      });\n      this.dispatch(\"rollOverItem\", a, b);\n    },\n    rollOutLabel: function (a, b) {\n      if (!a.hidden && this.textClickEnabled && a.legendLabel) {\n        var c = this.color;\n        void 0 !== this.selectedColor && a.showBalloon && (c = this.selectedColor);\n        this.useMarkerColorForLabels && (c = a.lineColor, void 0 === c && (c = a.color));\n        a.legendLabel.attr({\n          fill: c\n        });\n      }\n\n      this.dispatch(\"rollOutItem\", a, b);\n    },\n    clickLabel: function (a, b) {\n      this.textClickEnabled ? a.hidden || this.dispatch(\"clickLabel\", a, b) : this.switchable && (!0 === a.hidden ? this.dispatch(\"showItem\", a, b) : this.dispatch(\"hideItem\", a, b));\n    },\n    dispatch: function (a, b, c) {\n      a = {\n        type: a,\n        dataItem: b,\n        target: this,\n        event: c,\n        chart: this.chart\n      };\n      this.chart && this.chart.handleLegendEvent(a);\n      this.fire(a);\n    },\n    createValue: function (a) {\n      var b = this,\n          c = b.fontSize,\n          e = b.chart;\n\n      if (!1 !== a.visibleInLegend && !a.hideFromLegend) {\n        var f = b.maxLabelWidth;\n        b.forceWidth && (f = b.labelWidth);\n        b.equalWidths || (b.valueAlign = \"left\");\n        \"left\" == b.valueAlign && a.legendLabel && (f = a.legendLabel.getBBox().width);\n        var g = f;\n\n        if (b.valueText && 0 < b.valueWidth) {\n          var h = b.color;\n          b.useMarkerColorForValues && (h = a.color, a.legendKeyColor && (h = a.legendKeyColor()));\n          !0 === a.hidden && (h = b.markerDisabledColor);\n          var k = b.valueText,\n              f = f + b.lx + b.labelDx + b.markerLabelGap + b.valueWidth,\n              l = \"end\";\n          \"left\" == b.valueAlign && (f -= b.valueWidth, l = \"start\");\n          h = d.text(b.container, k, h, b.chart.fontFamily, c, l);\n          d.setCN(e, h, \"legend-value\");\n          h.translate(f, b.ly);\n          b.entries[b.index].push(h);\n          g += b.valueWidth + 2 * b.markerLabelGap;\n          h.dItem = a;\n          b.valueLabels.push(h);\n        }\n\n        b.index++;\n        e = b.markerSize;\n        e < c + 7 && (e = c + 7, d.VML && (e += 3));\n        c = b.container.rect(a.legendEntryWidth, 0, g, e, 0, 0).attr({\n          stroke: \"none\",\n          fill: \"#fff\",\n          \"fill-opacity\": .005\n        });\n        c.dItem = a;\n        b.entries[b.index - 1].push(c);\n        c.mouseover(function (c) {\n          b.rollOverLabel(a, c);\n        }).mouseout(function (c) {\n          b.rollOutLabel(a, c);\n        }).click(function (c) {\n          b.clickLabel(a, c);\n        });\n      }\n    },\n    createV: function () {\n      var a = this.markerSize;\n      return d.polygon(this.container, [a / 5, a / 2, a - a / 5, a / 2], [a / 3, a - a / 5, a / 5, a / 1.7], this.switchColor);\n    },\n    createX: function () {\n      var a = (this.markerSize - 4) / 2,\n          b = {\n        stroke: this.switchColor,\n        \"stroke-width\": 3\n      },\n          c = this.container,\n          e = d.line(c, [-a, a], [-a, a]).attr(b),\n          a = d.line(c, [-a, a], [a, -a]).attr(b);\n      return this.container.set([e, a]);\n    },\n    createMarker: function (a, b, c, e, f, g, h, k, l) {\n      var m = this.markerSize,\n          n = this.container;\n      f || (f = this.markerBorderColor);\n      f || (f = b);\n      isNaN(e) && (e = this.markerBorderThickness);\n      isNaN(g) && (g = this.markerBorderAlpha);\n      return d.bullet(n, a, m, b, c, e, f, g, m, h, k, this.chart.path, l);\n    },\n    validateNow: function () {\n      this.invalidateSize();\n    },\n    updateValues: function () {\n      var a = this.valueLabels,\n          b = this.chart,\n          c,\n          e = this.data;\n      if (a) for (c = 0; c < a.length; c++) {\n        var f = a[c],\n            g = f.dItem;\n        g.periodDataItem = void 0;\n        g.periodPercentDataItem = void 0;\n        var h = \" \";\n        if (e) g.value ? f.text(g.value) : f.text(\"\");else {\n          var k = null;\n\n          if (void 0 !== g.type) {\n            var k = g.currentDataItem,\n                l = this.periodValueText;\n            g.legendPeriodValueText && (l = g.legendPeriodValueText);\n            g.legendPeriodValueTextR && (l = g.legendPeriodValueTextR);\n            k ? (h = this.valueText, g.legendValueText && (h = g.legendValueText), g.legendValueTextR && (h = g.legendValueTextR), h = b.formatString(h, k)) : l && b.formatPeriodString && (l = d.massReplace(l, {\n              \"[[title]]\": g.title\n            }), h = b.formatPeriodString(l, g));\n          } else h = b.formatString(this.valueText, g);\n\n          l = g;\n          k && (l = k);\n          var m = this.valueFunction;\n          m && (h = m(l, h, b.periodDataItem));\n          var n;\n          this.useMarkerColorForLabels && !k && g.lastDataItem && (k = g.lastDataItem);\n          k ? n = b.getBalloonColor(g, k) : g.legendKeyColor && (n = g.legendKeyColor());\n          g.legendColorFunction && (n = g.legendColorFunction(l, h, g.periodDataItem, g.periodPercentDataItem));\n          f.text(h);\n\n          if (!g.pattern && (this.useMarkerColorForValues && f.setAttr(\"fill\", n), this.useMarkerColorForLabels)) {\n            if (f = g.legendMarker) f.setAttr(\"fill\", n), f.setAttr(\"stroke\", n);\n            (g = g.legendLabel) && g.setAttr(\"fill\", n);\n          }\n        }\n      }\n    },\n    renderFix: function () {\n      if (!d.VML && this.enabled) {\n        var a = this.container;\n        a && a.renderFix();\n      }\n    },\n    destroy: function () {\n      this.div.innerHTML = \"\";\n      d.remove(this.set);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AmMap = d.Class({\n    inherits: d.AmChart,\n    construct: function (a) {\n      this.cname = \"AmMap\";\n      this.type = \"map\";\n      this.theme = a;\n      this.svgNotSupported = \"This browser doesn't support SVG. Use Chrome, Firefox, Internet Explorer 9 or later.\";\n      this.createEvents(\"rollOverMapObject\", \"rollOutMapObject\", \"clickMapObject\", \"mouseDownMapObject\", \"selectedObjectChanged\", \"homeButtonClicked\", \"zoomCompleted\", \"dragCompleted\", \"positionChanged\", \"writeDevInfo\", \"click\", \"descriptionClosed\");\n      this.zoomDuration = .6;\n      this.zoomControl = new d.ZoomControl(a);\n      this.fitMapToContainer = !0;\n      this.mouseWheelZoomEnabled = this.backgroundZoomsToTop = !1;\n      this.allowClickOnSelectedObject = this.useHandCursorOnClickableOjects = this.showBalloonOnSelectedObject = !0;\n      this.showObjectsAfterZoom = this.wheelBusy = !1;\n      this.zoomOnDoubleClick = this.useObjectColorForBalloon = !0;\n      this.allowMultipleDescriptionWindows = !1;\n      this.dragMap = this.centerMap = this.linesAboveImages = !0;\n      this.colorSteps = 5;\n      this.forceNormalize = !1;\n      this.showAreasInList = !0;\n      this.showLinesInList = this.showImagesInList = !1;\n      this.areasProcessor = new d.AreasProcessor(this);\n      this.areasSettings = new d.AreasSettings(a);\n      this.imagesProcessor = new d.ImagesProcessor(this);\n      this.imagesSettings = new d.ImagesSettings(a);\n      this.linesProcessor = new d.LinesProcessor(this);\n      this.linesSettings = new d.LinesSettings(a);\n      this.initialTouchZoom = 1;\n      this.showDescriptionOnHover = !1;\n      d.AmMap.base.construct.call(this, a);\n      this.creditsPosition = \"bottom-left\";\n      this.product = \"ammap\";\n      this.areasClasses = {};\n      this.updatableImages = [];\n      d.applyTheme(this, a, this.cname);\n    },\n    initChart: function () {\n      this.zoomInstantly = !0;\n      var a = this.container;\n      this.panRequired = !0;\n\n      if (this.sizeChanged && d.hasSVG && this.chartCreated) {\n        this.updatableImages = [];\n        this.freeLabelsSet && this.freeLabelsSet.remove();\n        this.freeLabelsSet = a.set();\n        this.container.setSize(this.realWidth, this.realHeight);\n        this.resizeMap();\n        this.drawBackground();\n        this.redrawLabels();\n        this.drawTitles();\n        this.processObjects(!0);\n        this.rescaleObjects();\n        this.zoomControl.init(this, a);\n        this.drawBg();\n        var b = this.smallMap;\n        b && b.init(this, a);\n        (b = this.valueLegend) && b.init(this, a);\n        this.sizeChanged = !1;\n        this.zoomToLongLat(this.zLevelTemp, this.zLongTemp, this.zLatTemp, !0);\n        this.previousWidth = this.realWidth;\n        this.previousHeight = this.realHeight;\n        this.updateSmallMap();\n        this.linkSet.toFront();\n        this.zoomControl.update && this.zoomControl.update();\n      } else (d.AmMap.base.initChart.call(this), d.hasSVG) ? (this.dataChanged && (this.parseData(), this.dispatchDataUpdated = !0, this.dataChanged = !1, a = this.legend) && (a.position = \"absolute\", a.invalidateSize()), this.createDescriptionsDiv(), this.svgAreas = [], this.svgAreasById = {}, this.drawChart()) : (this.chartDiv.style.textAlign = \"\", this.chartDiv.setAttribute(\"class\", \"ammapAlert\"), this.chartDiv.innerHTML = this.svgNotSupported, this.fire({\n        type: \"failed\",\n        chart: this\n      }));\n    },\n    storeTemp: function () {\n      if (d.hasSVG && 0 < this.realWidth && 0 < this.realHeight) {\n        var a = this.mapContainer.getBBox();\n        0 < a.width && 0 < a.height && (a = this.zoomLongitude(), isNaN(a) || (this.zLongTemp = a), a = this.zoomLatitude(), isNaN(a) || (this.zLatTemp = a), a = this.zoomLevel(), isNaN(a) || (this.zLevelTemp = a));\n      }\n    },\n    invalidateSize: function () {\n      this.storeTemp();\n      d.AmMap.base.invalidateSize.call(this);\n    },\n    validateSize: function () {\n      this.storeTemp();\n      d.AmMap.base.validateSize.call(this);\n    },\n    handleWheelReal: function (a) {\n      if (!this.wheelBusy) {\n        this.stopAnimation();\n        var b = this.zoomLevel(),\n            c = this.zoomControl,\n            e = c.zoomFactor;\n        this.wheelBusy = !0;\n        a = d.fitToBounds(0 < a ? b * e : b / e, c.minZoomLevel, c.maxZoomLevel);\n        e = this.mouseX / this.mapWidth;\n        c = this.mouseY / this.mapHeight;\n        e = (this.zoomX() - e) * (a / b) + e;\n        b = (this.zoomY() - c) * (a / b) + c;\n        this.zoomTo(a, e, b);\n      }\n    },\n    addLegend: function (a, b) {\n      a.position = \"absolute\";\n      a.autoMargins = !1;\n      a.valueWidth = 0;\n      a.switchable = !1;\n      d.AmMap.base.addLegend.call(this, a, b);\n      void 0 === a.enabled && (a.enabled = !0);\n      return a;\n    },\n    handleLegendEvent: function () {},\n    createDescriptionsDiv: function () {\n      if (!this.descriptionsDiv) {\n        var a = document.createElement(\"div\"),\n            b = a.style;\n        b.position = \"absolute\";\n        b.left = \"0px\";\n        b.top = \"0px\";\n        this.descriptionsDiv = a;\n      }\n\n      this.containerDiv.appendChild(this.descriptionsDiv);\n    },\n    drawChart: function () {\n      d.AmMap.base.drawChart.call(this);\n      var a = this.dataProvider;\n      this.dataProvider = a = d.extend(a, new d.MapData(), !0);\n      this.areasSettings = d.processObject(this.areasSettings, d.AreasSettings, this.theme);\n      this.imagesSettings = d.processObject(this.imagesSettings, d.ImagesSettings, this.theme);\n      this.linesSettings = d.processObject(this.linesSettings, d.LinesSettings, this.theme);\n      var b = this.container;\n      this.mapContainer && this.mapContainer.remove();\n      this.mapContainer = b.set();\n      this.graphsSet.push(this.mapContainer);\n      var c;\n      a.map && (c = d.maps[a.map]);\n      a.mapVar && (c = a.mapVar);\n      c ? (this.svgData = c.svg, this.getBounds(), this.buildEverything()) : (a = a.mapURL) && this.loadXml(a);\n      this.balloonsSet.toFront();\n    },\n    drawBg: function () {\n      var a = this;\n      a.background.click(function () {\n        a.handleBackgroundClick();\n      });\n      a.background.mouseover(function () {\n        a.rollOutMapObject(a.previouslyHovered);\n      });\n    },\n    buildEverything: function () {\n      if (0 < this.realWidth && 0 < this.realHeight) {\n        var a = this.container,\n            b = this.dataProvider;\n        this.projection || (this.projection = b.projection, this.projection || (this.projection = \"equirectangular\"));\n        this.updatableImages = [];\n        var c = this.projection;\n        c && (this.projectionFunction = d[c]);\n        this.projectionFunction || (this.projectionFunction = d.equirectangular);\n        this.dpProjectionFunction = d[b.projection];\n        this.dpProjectionFunction || (this.dpProjectionFunction = d.equirectangular);\n        this.zoomControl = d.processObject(this.zoomControl, d.ZoomControl, this.theme);\n        this.zoomControl.init(this, a);\n        this.drawBg();\n        this.buildSVGMap();\n        this.projectionFunction && c != b.projection || this.forceNormalize ? (this.normalizeMap(), this.changeProjection()) : this.fixMapPosition();\n        if (c = this.smallMap) c = d.processObject(c, d.SmallMap, this.theme), c.init(this, a), this.smallMap = c;\n        isNaN(b.zoomX) && isNaN(b.zoomY) && isNaN(b.zoomLatitude) && isNaN(b.zoomLongitude) && (this.centerMap ? (c = this.xyToCoordinates(this.mapWidth / 2, this.mapHeight / 2), b.zoomLongitudeC = c.longitude, b.zoomLatitudeC = c.latitude) : (b.zoomX = 0, b.zoomY = 0), this.zoomInstantly = !0);\n        this.selectObject(this.dataProvider);\n        this.processAreas();\n        if (b = this.valueLegend) this.valueLegend = b = d.processObject(b, d.ValueLegend, this.theme), b.init(this, a);\n        this.objectList && (a = this.objectList = d.processObject(this.objectList, d.ObjectList)) && (this.clearObjectList(), a.init(this));\n        this.dispDUpd();\n        this.updateSmallMap();\n        this.linkSet.toFront();\n      } else this.cleanChart();\n    },\n    hideGroup: function (a) {\n      this.showHideGroup(a, !1);\n    },\n    showGroup: function (a) {\n      this.showHideGroup(a, !0);\n    },\n    showHideGroup: function (a, b) {\n      this.showHideReal(this.imagesProcessor.allObjects, a, b);\n      this.showHideReal(this.areasProcessor.allObjects, a, b);\n      this.showHideReal(this.linesProcessor.allObjects, a, b);\n    },\n    showHideReal: function (a, b, c) {\n      var e;\n\n      for (e = 0; e < a.length; e++) {\n        var d = a[e];\n\n        if (d.groupId == b) {\n          var g = d.displayObject;\n          g && (c ? (d.hidden = !1, g.show()) : (d.hidden = !0, g.hide()));\n        }\n      }\n    },\n    makeObjectAccessible: function (a) {\n      if (a.accessibleLabel) {\n        var b = this.formatString(a.accessibleLabel, a);\n        a.displayObject && this.makeAccessible(a.displayObject, b, \"menuitem\");\n      }\n    },\n    update: function () {\n      if (d.hasSVG) {\n        d.AmMap.base.update.call(this);\n        this.zoomControl && this.zoomControl.update && this.zoomControl.update();\n\n        for (var a = 0, b = this.updatableImages.length; a < b; a++) this.updatableImages[a].update();\n      }\n    },\n    animateMap: function () {\n      var a = this;\n      a.totalFrames = a.zoomDuration * d.updateRate;\n      a.totalFrames += 1;\n      a.frame = 0;\n      a.tweenPercent = 0;\n      a.balloon.hide(0);\n      setTimeout(function () {\n        a.updateSize.call(a);\n      }, 1E3 / d.updateRate);\n    },\n    updateSize: function () {\n      var a = this,\n          b = a.totalFrames;\n      a.preventHover = !0;\n      a.frame <= b ? (a.frame++, b = d.easeOutSine(0, a.frame, 0, 1, b), 1 <= b ? (b = 1, a.preventHover = !1, a.wheelBusy = !1) : window.requestAnimationFrame ? window.requestAnimationFrame(function () {\n        a.updateSize.call(a);\n      }) : setTimeout(function () {\n        a.updateSize.call(a);\n      }, 1E3 / d.updateRate), .8 < b && (a.preventHover = !1)) : (b = 1, a.preventHover = !1, a.wheelBusy = !1);\n      a.tweenPercent = b;\n      a.rescaleMapAndObjects();\n    },\n    rescaleMapAndObjects: function () {\n      var a = this.initialScale,\n          b = this.initialX,\n          c = this.initialY,\n          e = this.tweenPercent,\n          a = a + (this.finalScale - a) * e;\n      this.mapContainer.translate(b + (this.finalX - b) * e, c + (this.finalY - c) * e, a, !0);\n\n      if (this.areasSettings.adjustOutlineThickness) {\n        for (var b = this.svgAreas, d = 0; d < b.length; d++) (c = b[d]) && c.setAttr(\"stroke-width\", this.areasSettings.outlineThickness / a / this.mapScale);\n\n        if (b = this.dataProvider.areas) for (d = 0; d < b.length; d++) {\n          var c = b[d],\n              g = c.displayObject;\n          g && g.setAttr(\"stroke-width\", c.outlineThicknessReal / a / this.mapScale);\n        }\n      }\n\n      this.rescaleObjects();\n      this.positionChanged();\n      this.updateSmallMap();\n      1 == e && this.fire({\n        type: \"zoomCompleted\",\n        chart: this\n      });\n    },\n    updateSmallMap: function () {\n      this.smallMap && this.smallMap.update();\n    },\n    rescaleObjects: function () {\n      var a = this.mapContainer.scale,\n          b = this.imagesProcessor.objectsToResize,\n          c;\n\n      for (c = 0; c < b.length; c++) {\n        var d = b[c].image,\n            f = b[c].scale,\n            g = b[c].mapImage;\n        isNaN(g.selectedScaleReal) || g != this.selectedObject || (g.tempScale = f, f *= g.selectedScaleReal);\n        d.translate(d.x, d.y, f / a, !0);\n      }\n\n      b = this.imagesProcessor.labelsToReposition;\n\n      for (c = 0; c < b.length; c++) d = b[c], d.imageLabel && this.imagesProcessor.positionLabel(d.imageLabel, d, d.labelPositionReal);\n\n      b = this.linesProcessor;\n      if (d = b.linesToResize) for (c = 0; c < d.length; c++) f = d[c], f.line.setAttr(\"stroke-width\", f.thickness / a);\n      b = b.objectsToResize;\n\n      for (c = 0; c < b.length; c++) d = b[c], d.translate(d.x, d.y, 1 / a, !0);\n    },\n    handleTouchEnd: function (a) {\n      this.initialDistance = NaN;\n      this.mouseIsDown = this.isDragging = !1;\n      d.AmMap.base.handleTouchEnd.call(this, a);\n    },\n    handleMouseDown: function (a) {\n      d.resetMouseOver();\n      this.mouseIsDown = this.mouseIsOver = !0;\n      this.balloon.hide(0);\n      a && this.mouseIsOver && a.preventDefault && this.panEventsEnabled && a.preventDefault();\n\n      if (this.chartCreated && !this.preventHover && (this.initialTouchZoom = this.zoomLevel(), this.dragMap && (this.stopAnimation(), this.mapContainerClickX = this.mapContainer.x, this.mapContainerClickY = this.mapContainer.y), a || (a = window.event), a.shiftKey && !0 === this.developerMode && this.getDevInfo(), a && a.touches)) {\n        var b = this.mouseX,\n            c = this.mouseY,\n            e = a.touches.item(1);\n        e && this.panEventsEnabled && this.boundingRect && (a = e.clientX - this.boundingRect.left, e = e.clientY - this.boundingRect.top, this.middleXP = (b + (a - b) / 2) / this.realWidth, this.middleYP = (c + (e - c) / 2) / this.realHeight, this.initialDistance = Math.sqrt(Math.pow(a - b, 2) + Math.pow(e - c, 2)));\n      }\n    },\n    stopDrag: function () {\n      this.isDragging = !1;\n    },\n    handleReleaseOutside: function () {\n      if (d.isModern) {\n        var a = this;\n        d.AmMap.base.handleReleaseOutside.call(a);\n        a.mouseIsDown = !1;\n        setTimeout(function () {\n          a.resetPinch.call(a);\n        }, 100);\n\n        if (!a.preventHover) {\n          a.stopDrag();\n          var b = a.zoomControl;\n          b && b.draggerUp && b.draggerUp();\n          a.mapWasDragged = !1;\n          var b = a.mapContainer,\n              c = a.mapContainerClickX,\n              e = a.mapContainerClickY;\n          isNaN(c) || isNaN(e) || !(3 < Math.abs(b.x - c) || 3 < Math.abs(b.y - e)) || (a.mapWasDragged = !0, b = {\n            type: \"dragCompleted\",\n            zoomX: a.zoomX(),\n            zoomY: a.zoomY(),\n            zoomLevel: a.zoomLevel(),\n            chart: a\n          }, a.fire(b));\n          (a.mouseIsOver && !a.mapWasDragged && !a.skipClick || a.wasTouched && 3 > Math.abs(a.mouseX - a.tmx) && 3 > Math.abs(a.mouseY - a.tmy)) && a.fire({\n            type: \"click\",\n            x: a.mouseX,\n            y: a.mouseY,\n            chart: a\n          });\n          a.mapContainerClickX = NaN;\n          a.mapContainerClickY = NaN;\n          a.objectWasClicked = !1;\n          a.zoomOnDoubleClick && a.mouseIsOver && (b = new Date().getTime(), 200 > b - a.previousClickTime && 40 < b - a.previousClickTime && a.doDoubleClickZoom(), a.previousClickTime = b);\n        }\n\n        a.wasTouched = !1;\n      }\n    },\n    resetPinch: function () {\n      this.mapWasPinched = !1;\n    },\n    handleMouseMove: function (a) {\n      var b = this;\n      d.AmMap.base.handleMouseMove.call(b, a);\n\n      if (!a || !a.touches || !b.tapToActivate || b.tapped) {\n        b.panEventsEnabled && b.mouseIsOver && a && a.preventDefault && a.preventDefault();\n        var c = b.previuosMouseX,\n            e = b.previuosMouseY,\n            f = b.mouseX,\n            g = b.mouseY,\n            h = b.zoomControl;\n        isNaN(c) && (c = f);\n        isNaN(e) && (e = g);\n        b.mouse2X = NaN;\n        b.mouse2Y = NaN;\n        a && a.touches && (a = a.touches.item(1)) && b.panEventsEnabled && b.boundingRect && (b.mouse2X = a.clientX - b.boundingRect.left, b.mouse2Y = a.clientY - b.boundingRect.top);\n\n        if (a = b.mapContainer) {\n          var k = b.mouse2X,\n              l = b.mouse2Y;\n          b.pinchTO && clearTimeout(b.pinchTO);\n          b.pinchTO = setTimeout(function () {\n            b.resetPinch.call(b);\n          }, 1E3);\n          var m = b.realHeight,\n              n = b.realWidth,\n              p = b.mapWidth,\n              t = b.mapHeight;\n          b.mouseIsDown && b.dragMap && (3 < Math.abs(b.previuosMouseX - b.mouseX) || 3 < Math.abs(b.previuosMouseY - b.mouseY)) && (b.isDragging = !0);\n\n          if (!isNaN(k)) {\n            b.stopDrag();\n            var r = Math.sqrt(Math.pow(k - f, 2) + Math.pow(l - g, 2)),\n                q = b.initialDistance;\n            isNaN(q) && (q = Math.sqrt(Math.pow(k - f, 2) + Math.pow(l - g, 2)));\n\n            if (!isNaN(q)) {\n              var k = b.initialTouchZoom * r / q,\n                  k = d.fitToBounds(k, h.minZoomLevel, h.maxZoomLevel),\n                  h = b.zoomLevel(),\n                  q = b.middleXP,\n                  l = b.middleYP,\n                  r = m / t,\n                  y = n / p,\n                  q = (b.zoomX() - q * y) * (k / h) + q * y,\n                  l = (b.zoomY() - l * r) * (k / h) + l * r;\n              .1 < Math.abs(k - h) && (b.zoomTo(k, q, l, !0), b.mapWasPinched = !0, clearTimeout(b.pinchTO));\n            }\n          }\n\n          k = a.scale;\n          b.isDragging && (b.balloon.hide(0), b.positionChanged(), c = a.x + (f - c), e = a.y + (g - e), b.preventDragOut && (t = -t * k + m / 2 - b.diffY * b.mapScale * k, m = m / 2 - b.diffY * b.mapScale * k, c = d.fitToBounds(c, -p * k + n / 2, n / 2), e = d.fitToBounds(e, t, m)), isNaN(c) || isNaN(e) || (a.translate(c, e, k, !0), b.updateSmallMap()));\n          b.previuosMouseX = f;\n          b.previuosMouseY = g;\n        }\n      }\n    },\n    selectObject: function (a, b) {\n      var c = this;\n      a || (a = c.dataProvider);\n      a.isOver = !1;\n      var e = a.linkToObject;\n      d.isString(e) && (e = c.getObjectById(e));\n      a.useTargetsZoomValues && e && (a.zoomX = e.zoomX, a.zoomY = e.zoomY, a.zoomLatitude = e.zoomLatitude, a.zoomLongitude = e.zoomLongitude, a.zoomLevel = e.zoomLevel);\n      var f = c.selectedObject;\n      f && c.returnInitialColor(f);\n      c.selectedObject = a;\n      var g = !1,\n          h,\n          k;\n      \"MapArea\" == a.objectType && (a.autoZoomReal && (g = !0), h = c.areasSettings.selectedOutlineColor, k = c.areasSettings.selectedOutlineThickness);\n\n      if (e && !g && (d.isString(e) && (e = c.getObjectById(e)), isNaN(a.zoomLevel) && isNaN(a.zoomX) && isNaN(a.zoomY))) {\n        if (c.extendMapData(e)) return;\n        c.selectObject(e);\n        return;\n      }\n\n      c.allowMultipleDescriptionWindows || c.closeAllDescriptions();\n      clearTimeout(c.selectedObjectTimeOut);\n      clearTimeout(c.processObjectsTimeOut);\n      e = c.zoomDuration;\n      !g && isNaN(a.zoomLevel) && isNaN(a.zoomX) && isNaN(a.zoomY) ? (c.showDescriptionAndGetUrl(), b || c.processObjects()) : (c.selectedObjectTimeOut = setTimeout(function () {\n        c.showDescriptionAndGetUrl.call(c);\n      }, 1E3 * e + 200), c.showObjectsAfterZoom) ? b || (c.processObjectsTimeOut = setTimeout(function () {\n        c.processObjects.call(c);\n      }, 1E3 * e + 200)) : b || c.processObjects();\n      e = a.displayObject;\n      g = a.selectedColorReal;\n\n      if (\"MapImage\" == a.objectType) {\n        h = c.imagesSettings.selectedOutlineColor;\n        k = c.imagesSettings.selectedOutlineThickness;\n        var e = a.image,\n            l = a.selectedScaleReal;\n\n        if (!isNaN(l) && 1 != l) {\n          var m = a.scale;\n          isNaN(a.tempScale) || (m = a.tempScale);\n          isNaN(m) && (m = 1);\n          a.tempScale = m;\n          var n = a.displayObject;\n          n.translate(n.x, n.y, m * l, !0);\n        }\n      }\n\n      if (e) {\n        if (d.removeCN(c, e, \"selected-object\"), d.setCN(c, e, \"selected-object\"), a.bringForwardOnHover && a.displayObject.toFront(), c.outlinesToFront(), !a.preserveOriginalAttributes) {\n          e.setAttr(\"stroke\", a.outlineColorReal);\n          void 0 !== g && e.setAttr(\"fill\", g);\n          void 0 !== h && e.setAttr(\"stroke\", h);\n          void 0 !== k && e.setAttr(\"stroke-width\", k);\n          \"MapLine\" == a.objectType && ((l = a.lineSvg) && l.setAttr(\"stroke\", g), l = a.arrowSvg) && (l.setAttr(\"fill\", g), l.setAttr(\"stroke\", g));\n          if (l = a.imageLabel) m = a.selectedLabelColorReal, void 0 !== m && l.setAttr(\"fill\", m);\n          a.selectable || (e.setAttr(\"cursor\", \"default\"), l && l.setAttr(\"cursor\", \"default\"));\n        }\n      } else c.returnInitialColorReal(a);\n\n      if (e = a.groupId) for (l = a.groupArray, l || (l = c.getGroupById(e), a.groupArray = l), m = 0; m < l.length; m++) if (n = l[m], n.isOver = !1, e = n.displayObject, \"MapImage\" == n.objectType && (e = n.image), e) {\n        var p = n.selectedColorReal;\n        void 0 !== p && e.setAttr(\"fill\", p);\n        void 0 !== h && e.setAttr(\"stroke\", h);\n        void 0 !== k && e.setAttr(\"stroke-width\", k);\n        \"MapLine\" == n.objectType && ((e = n.lineSvg) && e.setAttr(\"stroke\", g), e = n.arrowSvg) && (e.setAttr(\"fill\", g), e.setAttr(\"stroke\", g));\n      }\n      c.rescaleObjects();\n      c.zoomToSelectedObject();\n      f != a && c.fire({\n        type: \"selectedObjectChanged\",\n        chart: c\n      });\n    },\n    returnInitialColor: function (a, b) {\n      this.returnInitialColorReal(a);\n      b && (a.isFirst = !1);\n\n      if (this.selectedObject.bringForwardOnHover) {\n        var c = this.selectedObject.displayObject;\n        c && c.toFront();\n      }\n\n      if (c = a.groupId) {\n        var c = this.getGroupById(c),\n            d;\n\n        for (d = 0; d < c.length; d++) this.returnInitialColorReal(c[d]), b && (c[d].isFirst = !1);\n      }\n\n      this.outlinesToFront();\n    },\n    outlinesToFront: function () {\n      if (this.outlines) for (var a = 0; a < this.outlines.length; a++) this.outlines[a].toFront();\n    },\n    closeAllDescriptions: function () {\n      this.descriptionsDiv.innerHTML = \"\";\n    },\n    fireClosed: function () {\n      this.fire({\n        type: \"descriptionClosed\",\n        chart: this\n      });\n    },\n    returnInitialColorReal: function (a) {\n      a.isOver = !1;\n      var b = a.displayObject;\n\n      if (b) {\n        d.removeCN(this, b, \"selected-object\");\n        b.toPrevious();\n\n        if (\"MapImage\" == a.objectType) {\n          var c = a.tempScale;\n          isNaN(c) || b.translate(b.x, b.y, c, !0);\n          a.tempScale = NaN;\n          b = a.image;\n        }\n\n        c = a.colorReal;\n\n        if (\"MapLine\" == a.objectType) {\n          var e = a.lineSvg;\n          e && e.setAttr(\"stroke\", c);\n\n          if (e = a.arrowSvg) {\n            var f = a.arrowColor;\n            void 0 === f && (f = c);\n            e.setAttr(\"fill\", f);\n            e.setAttr(\"stroke\", f);\n          }\n        }\n\n        var e = a.alphaReal,\n            f = a.outlineAlphaReal,\n            g = a.outlineThicknessReal,\n            h = a.outlineColorReal;\n\n        if (a.showAsSelected) {\n          var c = a.selectedColorReal,\n              k,\n              l;\n          \"MapImage\" == a.objectType && (k = this.imagesSettings.selectedOutlineColor, l = this.imagesSettings.selectedOutlineThickness);\n          \"MapArea\" == a.objectType && (k = this.areasSettings.selectedOutlineColor, l = this.areasSettings.selectedOutlineThickness);\n          void 0 !== k && (h = k);\n          void 0 !== l && (g = l);\n        }\n\n        \"bubble\" == a.type && (c = void 0);\n        void 0 !== c && b.setAttr(\"fill\", c);\n        if (k = a.image) k.setAttr(\"fill\", c), k.setAttr(\"stroke\", h), k.setAttr(\"stroke-width\", g), k.setAttr(\"fill-opacity\", e), k.setAttr(\"stroke-opacity\", f);\n        \"MapArea\" == a.objectType && (c = 1, this.areasSettings.adjustOutlineThickness && (c = this.zoomLevel() * this.mapScale), b.setAttr(\"stroke\", h), b.setAttr(\"stroke-width\", g / c), b.setAttr(\"fill-opacity\", e), b.setAttr(\"stroke-opacity\", f));\n        (c = a.pattern) && b.pattern(c, this.mapScale, this.path);\n        (b = a.imageLabel) && !a.labelInactive && (a.showAsSelected && void 0 !== a.selectedLabelColor ? b.setAttr(\"fill\", a.selectedLabelColor) : b.setAttr(\"fill\", a.labelColorReal));\n      }\n    },\n    zoomToRectangle: function (a, b, c, e) {\n      var f = this.realWidth,\n          g = this.realHeight,\n          h = this.mapSet.scale,\n          k = this.zoomControl,\n          f = d.fitToBounds(c / f > e / g ? .8 * f / (c * h) : .8 * g / (e * h), k.minZoomLevel, k.maxZoomLevel);\n      this.zoomToMapXY(f, (a + c / 2) * h, (b + e / 2) * h);\n    },\n    zoomToLatLongRectangle: function (a, b, c, e) {\n      var f = this.dataProvider,\n          g = this.zoomControl,\n          h = Math.abs(c - a),\n          k = Math.abs(b - e),\n          l = Math.abs(f.rightLongitude - f.leftLongitude),\n          f = Math.abs(f.topLatitude - f.bottomLatitude),\n          g = d.fitToBounds(h / l > k / f ? .8 * l / h : .8 * f / k, g.minZoomLevel, g.maxZoomLevel);\n      this.zoomToLongLat(g, a + (c - a) / 2, e + (b - e) / 2);\n    },\n    getGroupById: function (a) {\n      var b = [];\n      this.getGroup(this.imagesProcessor.allObjects, a, b);\n      this.getGroup(this.linesProcessor.allObjects, a, b);\n      this.getGroup(this.areasProcessor.allObjects, a, b);\n      return b;\n    },\n    zoomToGroup: function (a) {\n      a = \"object\" == typeof a ? a : this.getGroupById(a);\n      var b, c, d, f, g;\n\n      for (g = 0; g < a.length; g++) {\n        var h = a[g].displayObject;\n\n        if (h) {\n          var k = h.getBBox(),\n              h = k.y,\n              l = k.y + k.height,\n              m = k.x,\n              k = k.x + k.width;\n          if (h < b || isNaN(b)) b = h;\n          if (l > f || isNaN(f)) f = l;\n          if (m < c || isNaN(c)) c = m;\n          if (k > d || isNaN(d)) d = k;\n        }\n      }\n\n      c += this.diffX;\n      d += this.diffX;\n      f += this.diffY;\n      b += this.diffY;\n      this.zoomToRectangle(c, b, d - c, f - b);\n    },\n    getGroup: function (a, b, c) {\n      if (a) {\n        var d;\n\n        for (d = 0; d < a.length; d++) {\n          var f = a[d];\n          f.groupId == b && c.push(f);\n        }\n      }\n    },\n    zoomToStageXY: function (a, b, c, e) {\n      if (!this.objectWasClicked) {\n        var f = this.zoomControl;\n        a = d.fitToBounds(a, f.minZoomLevel, f.maxZoomLevel);\n        var f = this.zoomLevel(),\n            g = this.mapSet.getBBox();\n        b = this.xyToCoordinates((b - this.mapContainer.x) / f - g.x * this.mapScale, (c - this.mapContainer.y) / f - g.y * this.mapScale);\n        this.zoomToLongLat(a, b.longitude, b.latitude, e);\n      }\n    },\n    zoomToLongLat: function (a, b, c, d) {\n      b = this.coordinatesToXY(b, c);\n      this.zoomToMapXY(a, b.x, b.y, d);\n    },\n    zoomToMapXY: function (a, b, c, d) {\n      var f = this.mapWidth,\n          g = this.mapHeight;\n      this.zoomTo(a, -(b / f) * a + this.realWidth / f / 2, -(c / g) * a + this.realHeight / g / 2, d);\n    },\n    zoomToObject: function (a) {\n      if (a) {\n        var b = a.zoomLatitude,\n            c = a.zoomLongitude;\n        isNaN(a.zoomLatitudeC) || (b = a.zoomLatitudeC);\n        isNaN(a.zoomLongitudeC) || (c = a.zoomLongitudeC);\n        var e = a.zoomLevel,\n            f = this.zoomInstantly,\n            g = a.zoomX,\n            h = a.zoomY,\n            k = this.realWidth,\n            l = this.realHeight;\n        isNaN(e) || (isNaN(b) || isNaN(c) ? this.zoomTo(e, g, h, f) : this.zoomToLongLat(e, c, b, f));\n        this.zoomInstantly = !1;\n        \"MapImage\" == a.objectType && isNaN(a.zoomX) && isNaN(a.zoomY) && isNaN(a.zoomLatitude) && isNaN(a.zoomLongitude) && !isNaN(a.latitude) && !isNaN(a.longitude) && this.zoomToLongLat(a.zoomLevel, a.longitude, a.latitude);\n        \"MapArea\" == a.objectType && (f = a.displayObject.getBBox(), g = this.mapScale, b = (f.x + this.diffX) * g, c = (f.y + this.diffY) * g, e = f.width * g, f = f.height * g, k = a.autoZoomReal && isNaN(a.zoomLevel) ? e / k > f / l ? .8 * k / e : .8 * l / f : a.zoomLevel, l = this.zoomControl, k = d.fitToBounds(k, l.minZoomLevel, l.maxZoomLevel), isNaN(a.zoomX) && isNaN(a.zoomY) && isNaN(a.zoomLatitude) && isNaN(a.zoomLongitude) && this.zoomToMapXY(k, b + e / 2, c + f / 2));\n        this.zoomControl.update();\n      }\n    },\n    zoomToSelectedObject: function () {\n      this.zoomToObject(this.selectedObject);\n    },\n    zoomTo: function (a, b, c, e) {\n      var f = this.zoomControl;\n      a = d.fitToBounds(a, f.minZoomLevel, f.maxZoomLevel);\n      f = this.zoomLevel();\n      isNaN(b) && (b = this.realWidth / this.mapWidth, b = (this.zoomX() - .5 * b) * (a / f) + .5 * b);\n      isNaN(c) && (c = this.realHeight / this.mapHeight, c = (this.zoomY() - .5 * c) * (a / f) + .5 * c);\n      this.stopAnimation();\n      isNaN(a) || (f = this.mapContainer, this.initialX = f.x, this.initialY = f.y, this.initialScale = f.scale, this.finalX = this.mapWidth * b, this.finalY = this.mapHeight * c, this.finalScale = a, this.finalX != this.initialX || this.finalY != this.initialY || this.finalScale != this.initialScale ? e ? (this.tweenPercent = 1, this.rescaleMapAndObjects(), this.wheelBusy = !1) : this.animateMap() : this.wheelBusy = !1);\n    },\n    loadXml: function (a) {\n      var b;\n      window.XMLHttpRequest && (b = new XMLHttpRequest());\n      b.overrideMimeType && b.overrideMimeType(\"text/xml\");\n      b.open(\"GET\", a, !1);\n      b.send();\n      this.parseXMLObject(b.responseXML);\n      this.svgData && this.buildEverything();\n    },\n    stopAnimation: function () {\n      this.frame = this.totalFrames;\n    },\n    processObjects: function (a) {\n      var b = this.selectedObject;\n\n      if (0 < b.images.length || 0 < b.areas.length || 0 < b.lines.length || b == this.dataProvider || a) {\n        a = this.container;\n        var c = this.stageImagesContainer;\n        c && c.remove();\n        this.stageImagesContainer = c = a.set();\n        this.trendLinesSet.push(c);\n        var d = this.stageLinesContainer;\n        d && d.remove();\n        this.stageLinesContainer = d = a.set();\n        this.trendLinesSet.push(d);\n        var f = this.mapImagesContainer;\n        f && f.remove();\n        this.mapImagesContainer = f = a.set();\n        this.mapContainer.push(f);\n        var g = this.mapLinesContainer;\n        g && g.remove();\n        this.mapLinesContainer = g = a.set();\n        this.mapContainer.push(g);\n        this.linesAboveImages ? (f.toFront(), c.toFront(), g.toFront(), d.toFront()) : (g.toFront(), d.toFront(), f.toFront(), c.toFront());\n        b && (this.imagesProcessor.reset(), this.linesProcessor.reset(), this.linesAboveImages ? (this.imagesProcessor.process(b), this.linesProcessor.process(b)) : (this.linesProcessor.process(b), this.imagesProcessor.process(b)));\n        this.rescaleObjects();\n      }\n    },\n    processAreas: function () {\n      this.areasProcessor.process(this.dataProvider);\n    },\n    buildSVGMap: function () {\n      d.remove(this.mapSet);\n      var a = this.svgData.g.path,\n          b = this.container,\n          c = b.set();\n      this.svgAreas = [];\n      this.svgAreasById = {};\n      void 0 === a.length && (a = [a]);\n      var e;\n\n      for (e = 0; e < a.length; e++) {\n        var f = a[e],\n            g = f.d,\n            h = f.title;\n        f.titleTr && (h = f.titleTr);\n        var k = b.path(g);\n        k.id = f.id;\n\n        if (this.areasSettings.preserveOriginalAttributes) {\n          k.customAttr = {};\n\n          for (var l in f) \"d\" != l && \"id\" != l && \"title\" != l && (k.customAttr[l] = f[l]);\n        }\n\n        f.outline && (k.outline = !0);\n        k.path = g;\n        this.svgAreasById[f.id] = {\n          area: k,\n          title: h,\n          className: f[\"class\"]\n        };\n        this.svgAreas.push(k);\n        c.push(k);\n      }\n\n      this.mapSet = c;\n      this.mapContainer.push(c);\n      this.resizeMap();\n    },\n    centerAlign: function () {},\n    setProjection: function (a) {\n      this.projection = a;\n      this.chartCreated = !1;\n      this.buildEverything();\n    },\n    addObjectEventListeners: function (a, b) {\n      var c = this;\n      a.mousedown(function (a) {\n        c.mouseDownMapObject(b, a);\n      }).mouseup(function (a) {\n        c.clickMapObject(b, a);\n      }).mouseover(function (a) {\n        c.balloonX = NaN;\n        c.rollOverMapObject(b, !0, a);\n      }).mouseout(function (a) {\n        c.balloonX = NaN;\n        c.rollOutMapObject(b, a);\n      }).touchend(function (a) {\n        4 > Math.abs(c.mouseX - c.tmx) && 4 > Math.abs(c.mouseY - c.tmy) && (c.tapped = !0);\n        c.tapToActivate && !c.tapped || c.mapWasDragged || c.mapWasPinched || (c.balloonX = NaN, c.rollOverMapObject(b, !0, a), c.clickMapObject(b, a));\n      }).touchstart(function (a) {\n        c.tmx = c.mouseX;\n        c.tmy = c.mouseY;\n        c.mouseDownMapObject(b, a);\n      }).keyup(function (a) {\n        13 == a.keyCode && c.clickMapObject(b, a);\n      });\n    },\n    checkIfSelected: function (a) {\n      var b = this.selectedObject;\n      if (b == a) return !0;\n\n      if (b = b.groupId) {\n        var b = this.getGroupById(b),\n            c;\n\n        for (c = 0; c < b.length; c++) if (b[c] == a) return !0;\n      }\n\n      return !1;\n    },\n    clearMap: function () {\n      this.chartDiv.innerHTML = \"\";\n      this.clearObjectList();\n    },\n    clearObjectList: function () {\n      var a = this.objectList;\n      a && a.div && (a.div.innerHTML = \"\");\n    },\n    checkIfLast: function (a) {\n      if (a) {\n        var b = a.parentNode;\n        if (b && b.lastChild == a) return !0;\n      }\n\n      return !1;\n    },\n    showAsRolledOver: function (a) {\n      var b = a.displayObject;\n\n      if (!a.showAsSelected && b && !a.isOver) {\n        b.node.onmouseout = function () {};\n\n        b.node.onmouseover = function () {};\n\n        b.node.onclick = function () {};\n\n        !a.isFirst && a.bringForwardOnHover && (b.toFront(), a.isFirst = !0);\n        var c = a.rollOverColorReal,\n            e;\n        a.preserveOriginalAttributes && (c = void 0);\n        \"bubble\" == a.type && (c = void 0);\n        void 0 == c && (isNaN(a.rollOverBrightnessReal) || (c = d.adjustLuminosity(a.colorReal, a.rollOverBrightnessReal / 100)));\n        if (void 0 != c) if (\"MapImage\" == a.objectType) (e = a.image) && e.setAttr(\"fill\", c);else if (\"MapLine\" == a.objectType) {\n          if ((e = a.lineSvg) && e.setAttr(\"stroke\", c), e = a.arrowSvg) e.setAttr(\"fill\", c), e.setAttr(\"stroke\", c);\n        } else b.setAttr(\"fill\", c);\n        (c = a.imageLabel) && !a.labelInactive && (e = a.labelRollOverColorReal, void 0 != e && c.setAttr(\"fill\", e));\n        c = a.rollOverOutlineColorReal;\n        void 0 != c && (\"MapImage\" == a.objectType ? (e = a.image) && e.setAttr(\"stroke\", c) : b.setAttr(\"stroke\", c));\n        \"MapImage\" == a.objectType ? (c = this.imagesSettings.rollOverOutlineThickness, (e = a.image) && (isNaN(c) || e.setAttr(\"stroke-width\", c))) : (c = this.areasSettings.rollOverOutlineThickness, isNaN(c) || b.setAttr(\"stroke-width\", c));\n\n        if (\"MapArea\" == a.objectType) {\n          c = this.areasSettings;\n          e = a.rollOverAlphaReal;\n          isNaN(e) || b.setAttr(\"fill-opacity\", e);\n          e = c.rollOverOutlineAlpha;\n          isNaN(e) || b.setAttr(\"stroke-opacity\", e);\n          e = 1;\n          this.areasSettings.adjustOutlineThickness && (e = this.zoomLevel() * this.mapScale);\n          var f = c.rollOverOutlineThickness;\n          isNaN(f) || b.setAttr(\"stroke-width\", f / e);\n          (c = c.rollOverPattern) && b.pattern(c, this.mapScale, this.path);\n        }\n\n        \"MapImage\" == a.objectType && (c = a.rollOverScaleReal, isNaN(c) || 1 == c || (e = b.scale, isNaN(e) && (e = 1), a.tempScale = e, b.translate(b.x, b.y, e * c, !0)));\n        this.useHandCursorOnClickableOjects && this.checkIfClickable(a) && b.setAttr(\"cursor\", \"pointer\");\n        a.mouseEnabled && this.addObjectEventListeners(b, a);\n        a.isOver = !0;\n      }\n\n      this.outlinesToFront();\n    },\n    rollOverMapObject: function (a, b, c) {\n      if (this.chartCreated) {\n        this.handleMouseMove();\n        var d = this.previouslyHovered;\n        d && d != a ? (!1 === this.checkIfSelected(d) && (this.returnInitialColor(d, !0), this.previouslyHovered = null), this.balloon.hide(0)) : clearTimeout(this.hoverInt);\n\n        if (!this.preventHover) {\n          if (!1 === this.checkIfSelected(a)) {\n            if (d = a.groupId) {\n              var d = this.getGroupById(d),\n                  f;\n\n              for (f = 0; f < d.length; f++) d[f] != a && this.showAsRolledOver(d[f]);\n            }\n\n            this.showAsRolledOver(a);\n          } else (d = a.displayObject) && (this.allowClickOnSelectedObject ? d.setAttr(\"cursor\", \"pointer\") : d.setAttr(\"cursor\", \"default\"));\n\n          this.showDescriptionOnHover ? this.showDescription(a) : !this.showBalloonOnSelectedObject && this.checkIfSelected(a) || !1 === b || (f = this.balloon, this.balloon.fixedPosition = !1, b = a.colorReal, d = \"\", void 0 !== b && this.useObjectColorForBalloon || (b = f.fillColor), (f = a.balloonTextReal) && (d = this.formatString(f, a)), this.balloonLabelFunction && (d = this.balloonLabelFunction(a, this)), d && \"\" !== d && this.showBalloon(d, b, !1, this.balloonX, this.balloonY));\n          this.fire({\n            type: \"rollOverMapObject\",\n            mapObject: a,\n            chart: this,\n            event: c\n          });\n          this.previouslyHovered = a;\n        }\n      }\n    },\n    longitudeToX: function (a) {\n      return (this.longitudeToCoordinate(a) + this.diffX * this.mapScale) * this.zoomLevel() + this.mapContainer.x;\n    },\n    latitudeToY: function (a) {\n      return (this.latitudeToCoordinate(a) + this.diffY * this.mapScale) * this.zoomLevel() + this.mapContainer.y;\n    },\n    latitudeToStageY: function (a) {\n      return this.latitudeToCoordinate(a) * this.zoomLevel() + this.mapContainer.y + this.diffY * this.mapScale;\n    },\n    longitudeToStageX: function (a) {\n      return this.longitudeToCoordinate(a) * this.zoomLevel() + this.mapContainer.x + this.diffX * this.mapScale;\n    },\n    stageXToLongitude: function (a) {\n      a = (a - this.mapContainer.x) / this.zoomLevel();\n      return this.coordinateToLongitude(a);\n    },\n    stageYToLatitude: function (a) {\n      a = (a - this.mapContainer.y) / this.zoomLevel();\n      return this.coordinateToLatitude(a);\n    },\n    rollOutMapObject: function (a, b) {\n      this.hideBalloon();\n      a && this.chartCreated && a.isOver && (this.checkIfSelected(a) || this.returnInitialColor(a), this.fire({\n        type: \"rollOutMapObject\",\n        mapObject: a,\n        chart: this,\n        event: b\n      }));\n    },\n    formatString: function (a, b) {\n      var c = this.nf,\n          e = this.pf,\n          f = b.title;\n      b.titleTr && (f = b.titleTr);\n      void 0 == f && (f = \"\");\n      var g = b.value,\n          g = isNaN(g) ? \"\" : d.formatNumber(g, c),\n          c = b.percents,\n          c = isNaN(c) ? \"\" : d.formatNumber(c, e),\n          e = b.description;\n      void 0 == e && (e = \"\");\n      var h = b.customData;\n      void 0 == h && (h = \"\");\n      return a = d.massReplace(a, {\n        \"[[title]]\": f,\n        \"[[value]]\": g,\n        \"[[percent]]\": c,\n        \"[[description]]\": e,\n        \"[[customData]]\": h\n      });\n    },\n    mouseDownMapObject: function (a, b) {\n      this.fire({\n        type: \"mouseDownMapObject\",\n        mapObject: a,\n        chart: this,\n        event: b\n      });\n    },\n    clickMapObject: function (a, b) {\n      var c = this;\n      b && (b.touches || isNaN(a.zoomLevel) && isNaN(a.zoomX) && isNaN(a.zoomY) || c.hideBalloon());\n\n      if (c.chartCreated && !c.preventHover && c.checkTouchDuration(b) && !c.mapWasDragged && c.checkIfClickable(a) && !c.mapWasPinched) {\n        c.selectObject(a);\n        var d = c.zoomLevel(),\n            f = c.mapSet.getBBox(),\n            d = c.xyToCoordinates((c.mouseX - c.mapContainer.x) / d - f.x * c.mapScale, (c.mouseY - c.mapContainer.y) / d - f.y * c.mapScale);\n        c.clickLatitude = d.latitude;\n        c.clickLongitude = d.longitude;\n        b && b.touches && setTimeout(function () {\n          c.showBalloonAfterZoom.call(c);\n        }, 1E3 * c.zoomDuration);\n        c.fire({\n          type: \"clickMapObject\",\n          mapObject: a,\n          chart: c,\n          event: b\n        });\n        c.objectWasClicked = !0;\n      }\n    },\n    showBalloonAfterZoom: function () {\n      var a = this.clickLongitude,\n          b = this.clickLatitude,\n          c = this.selectedObject;\n      \"MapImage\" != c.objectType || isNaN(c.longitude) || (a = c.longitude, b = c.latitude);\n      a = this.coordinatesToStageXY(a, b);\n      this.balloonX = a.x;\n      this.balloonY = a.y;\n      this.rollOverMapObject(this.selectedObject, !0);\n    },\n    checkIfClickable: function (a) {\n      var b = this.allowClickOnSelectedObject;\n      return this.selectedObject == a && b ? !0 : this.selectedObject != a || b ? !0 === a.selectable || \"MapArea\" == a.objectType && a.autoZoomReal || a.url || a.linkToObject || 0 < a.images.length || 0 < a.lines.length || !isNaN(a.zoomLevel) || !isNaN(a.zoomX) || !isNaN(a.zoomY) || a.description ? !0 : !1 : !1;\n    },\n    resizeMap: function () {\n      var a = this.mapSet;\n\n      if (a) {\n        var b = 1,\n            c = a.getBBox(),\n            d = this.realWidth,\n            f = this.realHeight,\n            g = c.width,\n            c = c.height;\n        0 < g && 0 < c && (this.fitMapToContainer && (b = g / d > c / f ? d / g : f / c), a.translate(0, 0, b, !0), this.mapScale = b, this.mapHeight = c * b, this.mapWidth = g * b);\n      }\n    },\n    zoomIn: function () {\n      var a = this.zoomLevel() * this.zoomControl.zoomFactor;\n      this.zoomTo(a);\n    },\n    zoomOut: function () {\n      var a = this.zoomLevel() / this.zoomControl.zoomFactor;\n      this.zoomTo(a);\n    },\n    moveLeft: function () {\n      var a = this.zoomX() + this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), a, this.zoomY());\n    },\n    moveRight: function () {\n      var a = this.zoomX() - this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), a, this.zoomY());\n    },\n    moveUp: function () {\n      var a = this.zoomY() + this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), this.zoomX(), a);\n    },\n    moveDown: function () {\n      var a = this.zoomY() - this.zoomControl.panStepSize;\n      this.zoomTo(this.zoomLevel(), this.zoomX(), a);\n    },\n    zoomX: function () {\n      return this.mapSet ? Math.round(1E4 * this.mapContainer.x / this.mapWidth) / 1E4 : NaN;\n    },\n    zoomY: function () {\n      return this.mapSet ? Math.round(1E4 * this.mapContainer.y / this.mapHeight) / 1E4 : NaN;\n    },\n    goHome: function () {\n      this.selectObject(this.dataProvider);\n      this.fire({\n        type: \"homeButtonClicked\",\n        chart: this\n      });\n    },\n    zoomLevel: function () {\n      return Math.round(1E5 * this.mapContainer.scale) / 1E5;\n    },\n    showDescriptionAndGetUrl: function () {\n      var a = this.selectedObject;\n\n      if (a) {\n        this.showDescription();\n        var b = a.url;\n        if (b) d.getURL(b, a.urlTarget);else if (b = a.linkToObject) {\n          if (d.isString(b)) {\n            var c = this.getObjectById(b);\n\n            if (c) {\n              this.selectObject(c);\n              return;\n            }\n          }\n\n          b && a.passZoomValuesToTarget && (b.zoomLatitude = this.zoomLatitude(), b.zoomLongitude = this.zoomLongitude(), b.zoomLevel = this.zoomLevel());\n          this.extendMapData(b) || this.selectObject(b);\n        }\n      }\n    },\n    extendMapData: function (a) {\n      var b = a.objectType;\n      if (\"MapImage\" != b && \"MapArea\" != b && \"MapLine\" != b) return d.extend(a, new d.MapData(), !0), this.dataProvider = a, this.zoomInstantly = !0, this.validateData(), !0;\n    },\n    showDescription: function (a) {\n      a || (a = this.selectedObject);\n      this.allowMultipleDescriptionWindows || this.closeAllDescriptions();\n\n      if (a.description) {\n        var b = a.descriptionWindow;\n        b && b.close();\n        b = new d.DescriptionWindow();\n        a.descriptionWindow = b;\n        var c = a.descriptionWindowWidth,\n            e = a.descriptionWindowHeight,\n            f = a.descriptionWindowLeft,\n            g = a.descriptionWindowTop,\n            h = a.descriptionWindowRight,\n            k = a.descriptionWindowBottom;\n        isNaN(h) || (f = this.realWidth - h);\n        isNaN(k) || (g = this.realHeight - k);\n        var l = a.descriptionWindowX;\n        isNaN(l) || (f = l);\n        l = a.descriptionWindowY;\n        isNaN(l) || (g = l);\n        isNaN(f) && (f = this.mouseX, f = f > this.realWidth / 2 ? f - c - 20 : f + 20);\n        isNaN(g) && (g = this.mouseY);\n        b.maxHeight = e;\n        l = a.title;\n        a.titleTr && (l = a.titleTr);\n        b.show(this, this.descriptionsDiv, a.description, l);\n        a = b.div.style;\n        a.position = \"absolute\";\n        a.width = c + \"px\";\n        a.maxHeight = e + \"px\";\n        isNaN(k) || (g -= b.div.offsetHeight);\n        isNaN(h) || (f -= b.div.offsetWidth);\n        a.left = f + \"px\";\n        a.top = g + \"px\";\n      }\n    },\n    parseXMLObject: function (a) {\n      var b = {\n        root: {}\n      };\n      this.parseXMLNode(b, \"root\", a);\n      this.svgData = b.root.svg;\n      this.getBounds();\n    },\n    getBounds: function () {\n      var a = this.dataProvider;\n\n      try {\n        var b = this.svgData.defs[\"amcharts:ammap\"];\n        a.leftLongitude = Number(b.leftLongitude);\n        a.rightLongitude = Number(b.rightLongitude);\n        a.topLatitude = Number(b.topLatitude);\n        a.bottomLatitude = Number(b.bottomLatitude);\n        a.projection = b.projection;\n        var c = b.wrappedLongitudes;\n        c && (a.rightLongitude += 360);\n        a.wrappedLongitudes = c;\n      } catch (d) {}\n    },\n    recalcLongitude: function (a) {\n      return this.dataProvider.wrappedLongitudes ? a < this.dataProvider.leftLongitude ? Number(a) + 360 : a : a;\n    },\n    latitudeToCoordinate: function (a) {\n      var b,\n          c = this.dataProvider;\n\n      if (this.mapSet) {\n        b = c.topLatitude;\n        var d = c.bottomLatitude;\n        \"mercator\" == c.projection && (a = this.mercatorLatitudeToCoordinate(a), b = this.mercatorLatitudeToCoordinate(b), d = this.mercatorLatitudeToCoordinate(d));\n        b = (a - b) / (d - b) * this.mapHeight;\n      }\n\n      return b;\n    },\n    longitudeToCoordinate: function (a) {\n      a = this.recalcLongitude(a);\n      var b,\n          c = this.dataProvider;\n      this.mapSet && (b = c.leftLongitude, b = (a - b) / (c.rightLongitude - b) * this.mapWidth);\n      return b;\n    },\n    mercatorLatitudeToCoordinate: function (a) {\n      89.5 < a && (a = 89.5);\n      -89.5 > a && (a = -89.5);\n      a = d.degreesToRadians(a);\n      return d.radiansToDegrees(.5 * Math.log((1 + Math.sin(a)) / (1 - Math.sin(a))) / 2);\n    },\n    zoomLatitude: function () {\n      if (this.mapContainer) {\n        var a = this.mapSet.getBBox(),\n            b = (-this.mapContainer.x + this.previousWidth / 2) / this.zoomLevel() - a.x * this.mapScale,\n            a = (-this.mapContainer.y + this.previousHeight / 2) / this.zoomLevel() - a.y * this.mapScale;\n        return this.xyToCoordinates(b, a).latitude;\n      }\n    },\n    zoomLongitude: function () {\n      if (this.mapContainer) {\n        var a = this.mapSet.getBBox(),\n            b = (-this.mapContainer.x + this.previousWidth / 2) / this.zoomLevel() - a.x * this.mapScale,\n            a = (-this.mapContainer.y + this.previousHeight / 2) / this.zoomLevel() - a.y * this.mapScale;\n        return this.xyToCoordinates(b, a).longitude;\n      }\n    },\n    getAreaCenterLatitude: function (a) {\n      a = a.displayObject.getBBox();\n      var b = this.mapScale,\n          c = this.mapSet.getBBox();\n      return this.xyToCoordinates((a.x + a.width / 2 + this.diffX) * b - c.x * b, (a.y + a.height / 2 + this.diffY) * b - c.y * b).latitude;\n    },\n    getAreaCenterLongitude: function (a) {\n      a = a.displayObject.getBBox();\n      var b = this.mapScale,\n          c = this.mapSet.getBBox();\n      return this.xyToCoordinates((a.x + a.width / 2 + this.diffX) * b - c.x * b, (a.y + a.height / 2 + this.diffY) * b - c.y * b).longitude;\n    },\n    milesToPixels: function (a) {\n      var b = this.dataProvider;\n      return this.mapWidth / (b.rightLongitude - b.leftLongitude) * a / 69.172;\n    },\n    kilometersToPixels: function (a) {\n      var b = this.dataProvider;\n      return this.mapWidth / (b.rightLongitude - b.leftLongitude) * a / 111.325;\n    },\n    handleBackgroundClick: function () {\n      if (this.backgroundZoomsToTop && !this.mapWasDragged) {\n        var a = this.dataProvider;\n        if (this.checkIfClickable(a)) this.clickMapObject(a);else {\n          var b = a.zoomX,\n              c = a.zoomY,\n              d = a.zoomLongitude,\n              f = a.zoomLatitude,\n              a = a.zoomLevel;\n          isNaN(b) || isNaN(c) || this.zoomTo(a, b, c);\n          isNaN(d) || isNaN(f) || this.zoomToLongLat(a, d, f, !0);\n        }\n      }\n    },\n    parseXMLNode: function (a, b, c, d) {\n      void 0 === d && (d = \"\");\n      var f, g, h;\n\n      if (c) {\n        var k = c.childNodes.length;\n\n        for (f = 0; f < k; f++) {\n          g = c.childNodes[f];\n          var l = g.nodeName,\n              m = g.nodeValue ? this.trim(g.nodeValue) : \"\",\n              n = !1;\n          g.attributes && 0 < g.attributes.length && (n = !0);\n          if (0 !== g.childNodes.length || \"\" !== m || !1 !== n) if (3 == g.nodeType || 4 == g.nodeType) {\n            if (\"\" !== m) {\n              g = 0;\n\n              for (h in a[b]) a[b].hasOwnProperty(h) && g++;\n\n              g ? a[b][\"#text\"] = m : a[b] = m;\n            }\n          } else if (1 == g.nodeType) {\n            var p;\n            void 0 !== a[b][l] ? void 0 === a[b][l].length ? (p = a[b][l], a[b][l] = [], a[b][l].push(p), a[b][l].push({}), p = a[b][l][1]) : \"object\" == typeof a[b][l] && (a[b][l].push({}), p = a[b][l][a[b][l].length - 1]) : (a[b][l] = {}, p = a[b][l]);\n            if (g.attributes && g.attributes.length) for (m = 0; m < g.attributes.length; m++) p[g.attributes[m].name] = g.attributes[m].value;\n            void 0 !== a[b][l].length ? this.parseXMLNode(a[b][l], a[b][l].length - 1, g, d + \"  \") : this.parseXMLNode(a[b], l, g, d + \"  \");\n          }\n        }\n\n        g = 0;\n        c = \"\";\n\n        for (h in a[b]) \"#text\" == h ? c = a[b][h] : g++;\n\n        0 === g && void 0 === a[b].length && (a[b] = c);\n      }\n    },\n    doDoubleClickZoom: function () {\n      if (!this.mapWasDragged) {\n        var a = this.zoomLevel() * this.zoomControl.zoomFactor;\n        this.zoomToStageXY(a, this.mouseX, this.mouseY);\n      }\n    },\n    getDevInfo: function () {\n      var a = this.zoomLevel(),\n          b = this.mapSet.getBBox(),\n          b = this.xyToCoordinates((this.mouseX - this.mapContainer.x) / a - b.x * this.mapScale, (this.mouseY - this.mapContainer.y) / a - b.y * this.mapScale),\n          a = {\n        chart: this,\n        type: \"writeDevInfo\",\n        zoomLevel: a,\n        zoomX: this.zoomX(),\n        zoomY: this.zoomY(),\n        zoomLatitude: this.zoomLatitude(),\n        zoomLongitude: this.zoomLongitude(),\n        latitude: b.latitude,\n        longitude: b.longitude,\n        left: this.mouseX,\n        top: this.mouseY,\n        right: this.realWidth - this.mouseX,\n        bottom: this.realHeight - this.mouseY,\n        percentLeft: Math.round(this.mouseX / this.realWidth * 100) + \"%\",\n        percentTop: Math.round(this.mouseY / this.realHeight * 100) + \"%\",\n        percentRight: Math.round((this.realWidth - this.mouseX) / this.realWidth * 100) + \"%\",\n        percentBottom: Math.round((this.realHeight - this.mouseY) / this.realHeight * 100) + \"%\"\n      },\n          b = \"zoomLevel:\" + a.zoomLevel + \", zoomLongitude:\" + a.zoomLongitude + \", zoomLatitude:\" + a.zoomLatitude + \"\\n\",\n          b = b + (\"zoomX:\" + a.zoomX + \", zoomY:\" + a.zoomY + \"\\n\"),\n          b = b + (\"latitude:\" + a.latitude + \", longitude:\" + a.longitude + \"\\n\"),\n          b = b + (\"left:\" + a.left + \", top:\" + a.top + \"\\n\"),\n          b = b + (\"right:\" + a.right + \", bottom:\" + a.bottom + \"\\n\"),\n          b = b + (\"left:\" + a.percentLeft + \", top:\" + a.percentTop + \"\\n\"),\n          b = b + (\"right:\" + a.percentRight + \", bottom:\" + a.percentBottom + \"\\n\");\n      a.str = b;\n      this.fire(a);\n      return a;\n    },\n    getXY: function (a, b, c) {\n      void 0 !== a && (-1 != String(a).indexOf(\"%\") ? (a = Number(a.split(\"%\").join(\"\")), c && (a = 100 - a), a = Number(a) * b / 100) : c && (a = b - a));\n      return a;\n    },\n    getObjectById: function (a) {\n      var b = this.dataProvider;\n\n      if (b.areas) {\n        var c = this.getObject(a, b.areas);\n        if (c) return c;\n      }\n\n      if (c = this.getObject(a, b.images)) return c;\n      if (a = this.getObject(a, b.lines)) return a;\n    },\n    getObject: function (a, b) {\n      if (b) {\n        var c;\n\n        for (c = 0; c < b.length; c++) {\n          var d = b[c];\n          if (d.id == a) return d;\n\n          if (d.areas) {\n            var f = this.getObject(a, d.areas);\n            if (f) return f;\n          }\n\n          if (f = this.getObject(a, d.images)) return f;\n          if (d = this.getObject(a, d.lines)) return d;\n        }\n      }\n    },\n    parseData: function () {\n      var a = this.dataProvider;\n      this.processObject(a.areas, a, \"area\");\n      this.processObject(a.images, a, \"image\");\n      this.processObject(a.lines, a, \"line\");\n    },\n    processObject: function (a, b, c) {\n      if (a) {\n        var e;\n\n        for (e = 0; e < a.length; e++) {\n          var f = a[e];\n          f.parentObject = b;\n          \"area\" == c && d.extend(f, new d.MapArea(this.theme), !0);\n          \"image\" == c && (f = d.extend(f, new d.MapImage(this.theme), !0));\n          \"line\" == c && (f = d.extend(f, new d.MapLine(this.theme), !0));\n          a[e] = f;\n          f.areas && this.processObject(f.areas, f, \"area\");\n          f.images && this.processObject(f.images, f, \"image\");\n          f.lines && this.processObject(f.lines, f, \"line\");\n        }\n      }\n    },\n    positionChanged: function () {\n      var a = {\n        type: \"positionChanged\",\n        zoomX: this.zoomX(),\n        zoomY: this.zoomY(),\n        zoomLevel: this.zoomLevel(),\n        chart: this\n      };\n      this.fire(a);\n    },\n    getX: function (a, b) {\n      return this.getXY(a, this.realWidth, b);\n    },\n    getY: function (a, b) {\n      return this.getXY(a, this.realHeight, b);\n    },\n    trim: function (a) {\n      if (a) {\n        var b;\n\n        for (b = 0; b < a.length; b++) if (-1 === \" \\n\\r\\t\\f\\x0B\\u00a0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000\".indexOf(a.charAt(b))) {\n          a = a.substring(b);\n          break;\n        }\n\n        for (b = a.length - 1; 0 <= b; b--) if (-1 === \" \\n\\r\\t\\f\\x0B\\u00a0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000\".indexOf(a.charAt(b))) {\n          a = a.substring(0, b + 1);\n          break;\n        }\n\n        return -1 === \" \\n\\r\\t\\f\\x0B\\u00a0\\u2000\\u2001\\u2002\\u2003\\u2004\\u2005\\u2006\\u2007\\u2008\\u2009\\u200a\\u200b\\u2028\\u2029\\u3000\".indexOf(a.charAt(0)) ? a : \"\";\n      }\n    },\n    destroy: function () {\n      d.AmMap.base.destroy.call(this);\n    },\n    x2c: function (a) {\n      var b = this.dataProvider.leftLongitude;\n      return Math.round(this.unscaledMapWidth * (a - b) / (this.dataProvider.rightLongitude - b) * 100) / 100;\n    },\n    y2c: function (a) {\n      var b = this.dataProvider.topLatitude;\n      return Math.round(this.unscaledMapHeight * (a - b) / (this.dataProvider.bottomLatitude - b) * 100) / 100;\n    },\n    normalize: function (a) {\n      if (!a.pathsArray) {\n        var b;\n        if (a.normalized) b = a.normalized;else {\n          var c = d.normalizePath(a.node);\n          b = a.node.getAttribute(\"d\");\n          a.normalized = b;\n          c.maxX > this.maxMapX && (this.maxMapX = c.maxX);\n          c.minX < this.minMapX && (this.minMapX = c.minX);\n          c.maxY > this.maxMapY && (this.maxMapY = c.maxY);\n          c.minY < this.minMapY && (this.minMapY = c.minY);\n        }\n        a.node.setAttribute(\"d\", b);\n      }\n    },\n    redraw: function (a) {\n      var b = a.normalized,\n          b = b.split(\" Z\").join(\"\"),\n          b = b.split(\"M\");\n      a.pathsArray = [];\n\n      for (var c = 0; c < b.length; c++) {\n        var d = b[c];\n\n        if (d) {\n          for (var d = d.split(\"L\"), f = [], g = 0; g < d.length; g++) if (d[g]) {\n            var h = d[g].split(\" \"),\n                h = this.xyToCoordinates(Number(h[1]) - this.minMapX, Number(h[2]) - this.minMapY, this.dpProjectionFunction, this.sourceMapWidth, this.sourceMapHeight);\n            f.push([h.longitude, h.latitude]);\n          }\n\n          a.pathsArray.push(f);\n        }\n      }\n\n      b = \"\";\n\n      for (c = 0; c < a.pathsArray.length; c++) b += this.redrawArea(a.pathsArray[c]);\n\n      a.node.setAttribute(\"d\", b);\n      a.path = b;\n    },\n    redrawArea: function (a) {\n      for (var b = !1, c = \"\", e = 0; e < a.length; e++) {\n        var f = a[e][0],\n            g = a[e][1],\n            h = d.degreesToRadians(a[e][0]),\n            k = d.degreesToRadians(a[e][1]),\n            k = this.projectionFunction(h, k),\n            h = d.roundTo(this.x2c(d.radiansToDegrees(k[0])), 3),\n            k = d.roundTo(this.y2c(d.radiansToDegrees(k[1])), 3);\n        h < this.minMapXX && (this.minMapXX = h, this.leftLongLat = {\n          longitude: f,\n          latitude: g\n        });\n        h > this.maxMapXX && (this.maxMapXX = h, this.rightLongLat = {\n          longitude: f,\n          latitude: g\n        });\n        k < this.minMapYY && (this.minMapYY = k, this.topLongLat = {\n          longitude: f,\n          latitude: g\n        });\n        k > this.maxMapYY && (this.maxMapYY = k, this.bottomLongLat = {\n          longitude: f,\n          latitude: g\n        });\n        b ? c += \" L \" : (c += \" M \", b = !0);\n        c += h + \" \" + k;\n      }\n\n      return c + \" Z \";\n    },\n    normalizeMap: function () {\n      var a = d.degreesToRadians(this.dataProvider.leftLongitude),\n          b = d.degreesToRadians(this.dataProvider.rightLongitude),\n          c = d.degreesToRadians(this.dataProvider.topLatitude),\n          e = d.degreesToRadians(this.dataProvider.bottomLatitude),\n          f = a + (b - a) / 2,\n          g = c + (e - c) / 2,\n          h = this.dpProjectionFunction(f, c)[1],\n          k = this.dpProjectionFunction(f, e)[1],\n          l = this.dpProjectionFunction(a, g)[0],\n          m = this.dpProjectionFunction(b, g)[0],\n          c = d.equirectangular(f, c),\n          e = d.equirectangular(f, e),\n          h = (c[1] - e[1]) / (h - k),\n          a = d.equirectangular(a, g),\n          b = d.equirectangular(b, g),\n          l = (a[0] - b[0]) / (l - m);\n      this.minMapX = Infinity;\n      this.maxMapX = -Infinity;\n      this.minMapY = Infinity;\n      this.maxMapY = -Infinity;\n\n      for (m = 0; m < this.svgAreas.length; m++) this.normalize(this.svgAreas[m]);\n\n      this.sourceMapHeight = Math.abs(this.maxMapY - this.minMapY);\n      this.sourceMapWidth = Math.abs(this.maxMapX - this.minMapX);\n      this.unscaledMapWidth = this.sourceMapWidth * l;\n      this.unscaledMapHeight = this.sourceMapHeight * h;\n      this.diffY = this.diffX = 0;\n    },\n    fixMapPosition: function () {\n      var a = d.degreesToRadians(this.dataProvider.leftLongitude),\n          b = d.degreesToRadians(this.dataProvider.rightLongitude),\n          c = d.degreesToRadians(this.dataProvider.topLatitude),\n          e = d.degreesToRadians(this.dataProvider.bottomLatitude),\n          f = a + (b - a) / 2,\n          g = c + (e - c) / 2,\n          h = this.dpProjectionFunction(f, c)[1],\n          k = this.dpProjectionFunction(f, e)[1],\n          l = this.dpProjectionFunction(a, g)[0],\n          m = this.dpProjectionFunction(b, g)[0];\n      this.sourceMapHeight = this.mapHeight / this.mapScale;\n      this.sourceMapWidth = this.mapWidth / this.mapScale;\n      this.unscaledMapWidth = (a - b) / (l - m) * this.sourceMapWidth;\n      this.unscaledMapHeight = (c - e) / (h - k) * this.sourceMapHeight;\n      b = this.coordinatesToXY(d.radiansToDegrees(f), d.radiansToDegrees(c));\n      a = this.coordinatesToXY(d.radiansToDegrees(a), d.radiansToDegrees(g));\n      c = g = Infinity;\n\n      for (e = 0; e < this.svgAreas.length; e++) f = this.svgAreas[e].getBBox(), f.y < g && (g = f.y), f.x < c && (c = f.x);\n\n      this.diffY = b.y / this.mapScale - g;\n      this.diffX = a.x / this.mapScale - c;\n\n      for (e = 0; e < this.svgAreas.length; e++) this.svgAreas[e].translate(this.diffX, this.diffY);\n    },\n    changeProjection: function () {\n      this.minMapXX = Infinity;\n      this.maxMapXX = -Infinity;\n      this.minMapYY = Infinity;\n      this.maxMapYY = -Infinity;\n      this.projectionChanged = !1;\n\n      for (var a = 0; a < this.svgAreas.length; a++) this.redraw(this.svgAreas[a]);\n\n      this.projectionChanged = !0;\n      this.resizeMap();\n    },\n    coordinatesToXY: function (a, b) {\n      var c, e;\n      c = !1;\n      this.dataProvider && (c = this.dataProvider.wrappedLongitudes) && (a = this.recalcLongitude(a));\n      this.projectionFunction ? (e = this.projectionFunction(d.degreesToRadians(a), d.degreesToRadians(b)), c = this.mapScale * d.roundTo(this.x2c(d.radiansToDegrees(e[0])), 3), e = this.mapScale * d.roundTo(this.y2c(d.radiansToDegrees(e[1])), 3)) : (c = this.longitudeToCoordinate(a), e = this.latitudeToCoordinate(b));\n      return {\n        x: c,\n        y: e\n      };\n    },\n    coordinatesToStageXY: function (a, b) {\n      var c = this.coordinatesToXY(a, b),\n          d = c.x * this.zoomLevel() + this.mapContainer.x,\n          c = c.y * this.zoomLevel() + this.mapContainer.y;\n      return {\n        x: d,\n        y: c\n      };\n    },\n    stageXYToCoordinates: function (a, b) {\n      var c = this.mapSet.getBBox(),\n          d = (a - this.mapContainer.x) / this.zoomLevel() - c.x * this.mapScale,\n          c = (b - this.mapContainer.y) / this.zoomLevel() - c.y * this.mapScale;\n      return this.xyToCoordinates(d, c);\n    },\n    xyToCoordinates: function (a, b, c, e, f) {\n      var g;\n      isNaN(e) && (e = this.mapWidth);\n      isNaN(f) && (f = this.mapHeight);\n      c || (c = this.projectionFunction);\n\n      if (g = c.invert) {\n        var h = this.dataProvider.leftLongitude,\n            k = this.dataProvider.rightLongitude,\n            l = this.dataProvider.topLatitude,\n            m = this.dataProvider.bottomLatitude,\n            n = h + (k - h) / 2,\n            p = l + (m - l) / 2,\n            l = d.radiansToDegrees(c(d.degreesToRadians(n), d.degreesToRadians(l))[1]),\n            m = d.radiansToDegrees(c(d.degreesToRadians(n), d.degreesToRadians(m))[1]),\n            h = d.radiansToDegrees(c(d.degreesToRadians(h), d.degreesToRadians(p))[0]),\n            k = d.radiansToDegrees(c(d.degreesToRadians(k), d.degreesToRadians(p))[0]);\n        this.projectionChanged && (l = d.radiansToDegrees(c(d.degreesToRadians(this.topLongLat.longitude), d.degreesToRadians(this.topLongLat.latitude))[1]), m = d.radiansToDegrees(c(d.degreesToRadians(this.bottomLongLat.longitude), d.degreesToRadians(this.bottomLongLat.latitude))[1]), h = d.radiansToDegrees(c(d.degreesToRadians(this.leftLongLat.longitude), d.degreesToRadians(this.leftLongLat.latitude))[0]), k = d.radiansToDegrees(c(d.degreesToRadians(this.rightLongLat.longitude), d.degreesToRadians(this.rightLongLat.latitude))[0]));\n        a = d.degreesToRadians(a / e * (k - h) + h);\n        b = d.degreesToRadians(b / f * (m - l) + l);\n        b = g(a, b);\n        g = d.radiansToDegrees(b[0]);\n        b = d.radiansToDegrees(b[1]);\n      } else g = this.coordinateToLongitude(a), b = this.coordinateToLatitude(b);\n\n      return {\n        longitude: d.roundTo(g, 4),\n        latitude: d.roundTo(b, 4)\n      };\n    },\n    coordinateToLatitude: function (a, b) {\n      var c;\n      void 0 === b && (b = this.mapHeight);\n\n      if (this.mapSet) {\n        var e = this.dataProvider,\n            f = e.bottomLatitude;\n        c = e.topLatitude;\n        \"mercator\" == e.projection ? (e = this.mercatorLatitudeToCoordinate(f), c = this.mercatorLatitudeToCoordinate(c), c = 2 * d.degreesToRadians(a * (e - c) / b + c), c = d.radiansToDegrees(2 * Math.atan(Math.exp(c)) - .5 * Math.PI)) : c = a / b * (f - c) + c;\n      }\n\n      return Math.round(1E6 * c) / 1E6;\n    },\n    coordinateToLongitude: function (a, b) {\n      var c,\n          d = this.dataProvider;\n      void 0 === b && (b = this.mapWidth);\n      this.mapSet && (c = a / b * (d.rightLongitude - d.leftLongitude) + d.leftLongitude);\n      return Math.round(1E6 * c) / 1E6;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ZoomControl = d.Class({\n    construct: function (a) {\n      this.cname = \"ZoomControl\";\n      this.panStepSize = .1;\n      this.zoomFactor = 2;\n      this.maxZoomLevel = 64;\n      this.minZoomLevel = 1;\n      this.panControlEnabled = !1;\n      this.zoomControlEnabled = !0;\n      this.buttonRollOverColor = \"#DADADA\";\n      this.buttonFillColor = \"#FFFFFF\";\n      this.buttonFillAlpha = 1;\n      this.buttonBorderColor = \"#000000\";\n      this.buttonBorderAlpha = .1;\n      this.buttonIconAlpha = this.buttonBorderThickness = 1;\n      this.gridColor = this.buttonIconColor = \"#000000\";\n      this.homeIconFile = \"homeIcon.gif\";\n      this.gridBackgroundColor = \"#000000\";\n      this.draggerAlpha = this.gridAlpha = this.gridBackgroundAlpha = 0;\n      this.draggerSize = this.buttonSize = 31;\n      this.iconSize = 11;\n      this.homeButtonEnabled = !0;\n      this.buttonCornerRadius = 2;\n      this.gridHeight = 5;\n      this.roundButtons = !0;\n      this.top = this.left = 10;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function (a, b) {\n      var c = this;\n      c.chart = a;\n      d.remove(c.set);\n      var e = b.set();\n      d.setCN(a, e, \"zoom-control\");\n      var f = c.buttonSize,\n          g = c.zoomControlEnabled,\n          h = c.panControlEnabled,\n          k = c.buttonFillColor,\n          l = c.buttonFillAlpha,\n          m = c.buttonBorderThickness,\n          n = c.buttonBorderColor,\n          p = c.buttonBorderAlpha,\n          t = c.buttonCornerRadius,\n          r = c.buttonRollOverColor,\n          q = c.gridHeight,\n          y = c.zoomFactor,\n          B = c.minZoomLevel,\n          u = c.maxZoomLevel,\n          w = c.buttonIconAlpha,\n          v = c.buttonIconColor,\n          A = c.roundButtons,\n          C = a.svgIcons,\n          x = a.getX(c.left),\n          z = a.getY(c.top);\n      isNaN(c.right) || (x = a.getX(c.right, !0), x = h ? x - 3 * f : x - f);\n      isNaN(c.bottom) || (z = a.getY(c.bottom, !0), g && (z -= q + 3 * f), z = h ? z - 3 * f : c.homeButtonEnabled ? z - .5 * f : z + f);\n      e.translate(x, z);\n      c.previousDY = NaN;\n      var F,\n          x = f / 4 - 1;\n\n      if (g) {\n        F = b.set();\n        d.setCN(a, F, \"zoom-control-zoom\");\n        e.push(F);\n        c.set = e;\n        c.zoomSet = F;\n        5 < q && (g = d.rect(b, f + 6, q + 2 * f + 6, c.gridBackgroundColor, c.gridBackgroundAlpha, 0, \"#000000\", 0, 4), d.setCN(a, g, \"zoom-bg\"), g.translate(-3, -3), g.mouseup(function () {\n          c.handleBgUp();\n        }).touchend(function () {\n          c.handleBgUp();\n        }), F.push(g));\n        var E = f;\n        A && (E = f / 1.5);\n        c.draggerSize = E;\n        var H = Math.log(u / B) / Math.log(y) + 1;\n        1E3 < H && (H = 1E3);\n        var g = q / H,\n            G,\n            D = b.set();\n        D.translate((f - E) / 2 + 1, 1, NaN, !0);\n        F.push(D);\n\n        for (G = 1; G < H; G++) z = f + G * g, z = d.line(b, [1, E - 2], [z, z], c.gridColor, c.gridAlpha, 1), d.setCN(a, z, \"zoom-grid\"), D.push(z);\n\n        z = new d.SimpleButton();\n        z.setDownHandler(c.draggerDown, c);\n        z.setClickHandler(c.draggerUp, c);\n        z.init(b, E, g, k, l, m, n, p, t, r);\n        d.setCN(a, z.set, \"zoom-dragger\");\n        F.push(z.set);\n        z.set.setAttr(\"opacity\", c.draggerAlpha);\n        c.dragger = z.set;\n        c.previousY = NaN;\n        z = new d.SimpleButton();\n        C ? (E = b.set(), H = d.line(b, [-x, x], [0, 0], v, w, 1), G = d.line(b, [0, 0], [-x, x], v, w, 1), E.push(H), E.push(G), z.svgIcon = E) : z.setIcon(a.pathToImages + \"plus.gif\", c.iconSize);\n        z.setClickHandler(a.zoomIn, a);\n        z.init(b, f, f, k, l, m, n, p, t, r, w, v, A);\n        d.setCN(a, z.set, \"zoom-in\");\n        F.push(z.set);\n        z = new d.SimpleButton();\n        C ? z.svgIcon = d.line(b, [-x, x], [0, 0], v, w, 1) : z.setIcon(a.pathToImages + \"minus.gif\", c.iconSize);\n        z.setClickHandler(a.zoomOut, a);\n        z.init(b, f, f, k, l, m, n, p, t, r, w, v, A);\n        z.set.translate(0, q + f);\n        d.setCN(a, z.set, \"zoom-out\");\n        F.push(z.set);\n        q -= g;\n        u = Math.log(u / 100) / Math.log(y);\n        c.realStepSize = q / (u - Math.log(B / 100) / Math.log(y));\n        c.realGridHeight = q;\n        c.stepMax = u;\n      }\n\n      h && (h = b.set(), d.setCN(a, h, \"zoom-control-pan\"), e.push(h), F && F.translate(f, 4 * f), y = new d.SimpleButton(), C ? y.svgIcon = d.line(b, [x / 5, -x + x / 5, x / 5], [-x, 0, x], v, w, 1) : y.setIcon(a.pathToImages + \"panLeft.gif\", c.iconSize), y.setClickHandler(a.moveLeft, a), y.init(b, f, f, k, l, m, n, p, t, r, w, v, A), y.set.translate(0, f), d.setCN(a, y.set, \"pan-left\"), h.push(y.set), y = new d.SimpleButton(), C ? y.svgIcon = d.line(b, [-x / 5, x - x / 5, -x / 5], [-x, 0, x], v, w, 1) : y.setIcon(a.pathToImages + \"panRight.gif\", c.iconSize), y.setClickHandler(a.moveRight, a), y.init(b, f, f, k, l, m, n, p, t, r, w, v, A), y.set.translate(2 * f, f), d.setCN(a, y.set, \"pan-right\"), h.push(y.set), y = new d.SimpleButton(), C ? y.svgIcon = d.line(b, [-x, 0, x], [x / 5, -x + x / 5, x / 5], v, w, 1) : y.setIcon(a.pathToImages + \"panUp.gif\", c.iconSize), y.setClickHandler(a.moveUp, a), y.init(b, f, f, k, l, m, n, p, t, r, w, v, A), y.set.translate(f, 0), d.setCN(a, y.set, \"pan-up\"), h.push(y.set), y = new d.SimpleButton(), C ? y.svgIcon = d.line(b, [-x, 0, x], [-x / 5, x - x / 5, -x / 5], v, w, 1) : y.setIcon(a.pathToImages + \"panDown.gif\", c.iconSize), y.setClickHandler(a.moveDown, a), y.init(b, f, f, k, l, m, n, p, t, r, w, v, A), y.set.translate(f, 2 * f), d.setCN(a, y.set, \"pan-down\"), h.push(y.set), e.push(h));\n      c.homeButtonEnabled && (h = new d.SimpleButton(), C ? h.svgIcon = d.polygon(b, [-x, 0, x, x - 1, x - 1, 2, 2, -2, -2, -x + 1, -x + 1], [0, -x, 0, 0, x - 1, x - 1, 2, 2, x - 1, x - 1, 0], v, w, 1, v, w) : h.setIcon(a.pathToImages + c.homeIconFile, c.iconSize), h.setClickHandler(a.goHome, a), c.panControlEnabled && (p = l = 0), h.init(b, f, f, k, l, m, n, p, t, r, w, v, A), c.panControlEnabled ? h.set.translate(f, f) : F && F.translate(0, 1.5 * f), d.setCN(a, h.set, \"pan-home\"), e.push(h.set));\n      c.update();\n    },\n    draggerDown: function () {\n      this.chart.stopDrag();\n      this.isDragging = !0;\n    },\n    draggerUp: function () {\n      this.isDragging = !1;\n    },\n    handleBgUp: function () {\n      var a = this.chart;\n      a.zoomTo(100 * Math.pow(this.zoomFactor, this.stepMax - (a.mouseY - this.zoomSet.y - this.set.y - this.buttonSize - this.realStepSize / 2) / this.realStepSize));\n    },\n    update: function () {\n      var a;\n      a = this.zoomFactor;\n      var b = this.realStepSize,\n          c = this.stepMax,\n          e = this.dragger,\n          f = this.buttonSize,\n          g,\n          h = this.chart;\n      h && (this.isDragging ? (h.stopDrag(), g = e.y + (h.mouseY - this.previousY), g = d.fitToBounds(g, f, this.realGridHeight + f), h.zoomTo(100 * Math.pow(a, c - (g - f) / b), NaN, NaN, !0)) : (a = Math.log(h.zoomLevel() / 100) / Math.log(a), g = (c - a) * b + f), this.previousY = h.mouseY, this.previousDY != g && e && (e.translate((this.buttonSize - this.draggerSize) / 2, g), this.previousDY = g));\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SimpleButton = d.Class({\n    construct: function () {},\n    init: function (a, b, c, e, f, g, h, k, l, m, n, p, t) {\n      var r = this;\n      r.rollOverColor = m;\n      r.color = e;\n      r.container = a;\n      m = a.set();\n      r.set = m;\n      t ? (b /= 2, e = d.circle(a, b, e, f, g, h, k), e.translate(b, b)) : e = d.rect(a, b, c, e, f, g, h, k, l);\n      m.push(e);\n      f = r.iconPath;\n      var q;\n      f && (q = r.iconSize, g = (b - q) / 2, t && (g = (2 * b - q) / 2), q = a.image(f, g, (c - q) / 2, q, q));\n      r.svgIcon && (q = r.svgIcon, t ? q.translate(b, b) : q.translate(b / 2, b / 2));\n      m.setAttr(\"cursor\", \"pointer\");\n      q && (m.push(q), q.setAttr(\"opacity\", n), q.node.style.pointerEvents = \"none\");\n      e.mousedown(function () {\n        r.handleDown();\n      }).touchstart(function () {\n        r.handleDown();\n      }).mouseup(function () {\n        r.handleUp();\n      }).touchend(function () {\n        r.handleUp();\n      }).mouseover(function () {\n        r.handleOver();\n      }).mouseout(function () {\n        r.handleOut();\n      });\n      r.bg = e;\n    },\n    setIcon: function (a, b) {\n      this.iconPath = a;\n      this.iconSize = b;\n    },\n    setClickHandler: function (a, b) {\n      this.clickHandler = a;\n      this.scope = b;\n    },\n    setDownHandler: function (a, b) {\n      this.downHandler = a;\n      this.scope = b;\n    },\n    handleUp: function () {\n      var a = this.clickHandler;\n      a && a.call(this.scope);\n    },\n    handleDown: function () {\n      var a = this.downHandler;\n      a && a.call(this.scope);\n    },\n    handleOver: function () {\n      this.container.chart.skipClick = !0;\n      this.bg.setAttr(\"fill\", this.rollOverColor);\n    },\n    handleOut: function () {\n      this.container.chart.skipClick = !1;\n      this.bg.setAttr(\"fill\", this.color);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.SmallMap = d.Class({\n    construct: function (a) {\n      this.cname = \"SmallMap\";\n      this.mapColor = \"#e6e6e6\";\n      this.rectangleColor = \"#FFFFFF\";\n      this.top = this.right = 10;\n      this.minimizeButtonWidth = 23;\n      this.backgroundColor = \"#9A9A9A\";\n      this.backgroundAlpha = 1;\n      this.borderColor = \"#FFFFFF\";\n      this.iconColor = \"#000000\";\n      this.borderThickness = 3;\n      this.borderAlpha = 1;\n      this.size = .2;\n      this.enabled = !0;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function (a, b) {\n      var c = this;\n\n      if (c.enabled) {\n        c.chart = a;\n        c.container = b;\n        c.width = a.realWidth * c.size;\n        c.height = a.realHeight * c.size;\n        d.remove(c.mapSet);\n        d.remove(c.allSet);\n        d.remove(c.set);\n        var e = b.set();\n        c.set = e;\n        d.setCN(a, e, \"small-map\");\n        var f = b.set();\n        c.allSet = f;\n        e.push(f);\n        c.buildSVGMap();\n        var g = c.borderThickness,\n            h = c.borderColor,\n            k = d.rect(b, c.width + g, c.height + g, c.backgroundColor, c.backgroundAlpha, g, h, c.borderAlpha);\n        d.setCN(a, k, \"small-map-bg\");\n        k.translate(-g / 2, -g / 2);\n        f.push(k);\n        k.toBack();\n        var l,\n            m,\n            k = c.minimizeButtonWidth,\n            n = new d.SimpleButton(),\n            p = k / 2;\n        a.svgIcons ? n.svgIcon = d.line(b, [-p / 2, 0, p / 2], [-p / 4, p / 4, -p / 4], c.iconColor, 1, 1) : n.setIcon(a.pathToImages + \"arrowDown.gif\", k);\n        n.setClickHandler(c.minimize, c);\n        n.init(b, k, k, h, 1, 1, h, 1);\n        d.setCN(a, n.set, \"small-map-down\");\n        n = n.set;\n        c.downButtonSet = n;\n        e.push(n);\n        var t = new d.SimpleButton();\n        a.svgIcons ? t.svgIcon = d.line(b, [-p / 2, 0, p / 2], [p / 4, -p / 4, p / 4], c.iconColor, 1, 1) : t.setIcon(a.pathToImages + \"arrowUp.gif\", k);\n        t.setClickHandler(c.maximize, c);\n        t.init(b, k, k, h, 1, 1, h, 1);\n        d.setCN(a, t.set, \"small-map-up\");\n        h = t.set;\n        c.upButtonSet = h;\n        h.hide();\n        e.push(h);\n        var r, q;\n        isNaN(c.top) || (l = a.getY(c.top) + g, q = 0);\n        isNaN(c.bottom) || (l = a.getY(c.bottom, !0) - c.height - g, q = c.height - k + g / 2);\n        isNaN(c.left) || (m = a.getX(c.left) + g, r = -g / 2);\n        isNaN(c.right) || (m = a.getX(c.right, !0) - c.width - g, r = c.width - k + g / 2);\n        g = b.set();\n        g.clipRect(1, 1, c.width, c.height);\n        f.push(g);\n        c.rectangleC = g;\n        e.translate(m, l);\n        n.translate(r, q);\n        h.translate(r, q);\n        f.mouseup(function () {\n          c.handleMouseUp();\n        });\n        c.drawRectangle();\n      } else d.remove(c.allSet), d.remove(c.downButtonSet), d.remove(c.upButtonSet);\n    },\n    minimize: function () {\n      this.downButtonSet.hide();\n      this.upButtonSet.show();\n      this.allSet.hide();\n    },\n    maximize: function () {\n      this.downButtonSet.show();\n      this.upButtonSet.hide();\n      this.allSet.show();\n    },\n    buildSVGMap: function () {\n      var a = this.chart,\n          b = {\n        fill: this.mapColor,\n        stroke: this.mapColor,\n        \"stroke-opacity\": 1\n      },\n          c = this.container,\n          e = c.set();\n      d.setCN(a, e, \"small-map-image\");\n      var f;\n\n      for (f = 0; f < a.svgAreas.length; f++) {\n        var g = c.path(a.svgAreas[f].path).attr(b);\n        e.push(g);\n      }\n\n      this.allSet.push(e);\n      b = e.getBBox();\n      c = this.size * a.mapScale;\n      f = -b.x * c;\n      var g = -b.y * c,\n          h = 0,\n          k = 0;\n      a.centerMap && (h = (this.width - b.width * c) / 2, k = (this.height - b.height * c) / 2);\n      this.mapWidth = b.width * c;\n      this.mapHeight = b.height * c;\n      f += h;\n      g += k;\n      this.dx = h;\n      this.dy = k;\n      e.translate(f, g, c);\n      this.mapSet = e;\n      this.mapX = f;\n      this.mapY = g;\n    },\n    update: function () {\n      var a = this.chart;\n\n      if (a) {\n        var b = a.zoomLevel(),\n            c = this.width,\n            d = this.height,\n            f = c / (a.realWidth * b),\n            g = a.mapContainer.getBBox(),\n            c = c / b,\n            d = d / b,\n            h = this.rectangle;\n        h.translate(-(a.mapContainer.x + g.x * b) * f + this.dx, -(a.mapContainer.y + g.y * b) * f + this.dy);\n        0 < c && 0 < d && (h.setAttr(\"width\", Math.ceil(c + 1)), h.setAttr(\"height\", Math.ceil(d + 1)));\n        this.rWidth = c;\n        this.rHeight = d;\n      }\n    },\n    drawRectangle: function () {\n      var a = this.rectangle;\n      d.remove(a);\n      a = d.rect(this.container, 10, 10, \"#000\", 0, 1, this.rectangleColor, 1);\n      d.setCN(this.chart, a, \"small-map-rectangle\");\n      this.rectangleC.push(a);\n      this.rectangle = a;\n    },\n    handleMouseUp: function () {\n      var a = this.chart,\n          b = a.zoomLevel();\n      a.zoomToMapXY(b, (a.mouseX - this.set.x - this.mapX) / this.size + a.diffX * a.mapScale, (a.mouseY - this.set.y - this.mapY) / this.size + a.diffY * a.mapScale);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AreasProcessor = d.Class({\n    construct: function (a) {\n      this.chart = a;\n    },\n    process: function (a) {\n      this.updateAllAreas();\n      this.allObjects = [];\n      a = a.areas;\n      var b = this.chart;\n      b.outlines = [];\n      var c = a.length,\n          d,\n          f,\n          g = 0,\n          h = !1,\n          k = !1,\n          l = 0;\n\n      for (d = 0; d < c; d++) if (f = a[d], f.value = Number(f.value), f = f.value, !isNaN(f)) {\n        if (!1 === h || h < f) h = f;\n        if (!1 === k || k > f) k = f;\n        g += Math.abs(f);\n        l++;\n      }\n\n      this.minValue = k;\n      this.maxValue = h;\n      isNaN(b.minValue) || (this.minValue = b.minValue);\n      isNaN(b.maxValue) || (this.maxValue = b.maxValue);\n      b.maxValueReal = h;\n      b.minValueReal = k;\n\n      for (d = 0; d < c; d++) f = a[d], isNaN(f.value) ? f.percents = void 0 : (f.percents = (f.value - k) / g * 100, k == h && (f.percents = 100));\n\n      for (d = 0; d < c; d++) f = a[d], this.createArea(f);\n\n      b.outlinesToFront();\n    },\n    updateAllAreas: function () {\n      var a = this.chart,\n          b = a.areasSettings,\n          c = b.unlistedAreasColor,\n          e = b.unlistedAreasAlpha,\n          f = b.unlistedAreasOutlineColor,\n          g = b.unlistedAreasOutlineAlpha,\n          h = a.svgAreas,\n          k = a.dataProvider,\n          l = k.areas,\n          m = {},\n          n;\n\n      for (n = 0; n < l.length; n++) m[l[n].id] = l[n];\n\n      for (n = 0; n < h.length; n++) {\n        l = h[n];\n\n        if (b.preserveOriginalAttributes) {\n          if (l.customAttr) for (var p in l.customAttr) l.setAttr(p, l.customAttr[p]);\n        } else {\n          void 0 != c && l.setAttr(\"fill\", c);\n          isNaN(e) || l.setAttr(\"fill-opacity\", e);\n          void 0 != f && l.setAttr(\"stroke\", f);\n          isNaN(g) || l.setAttr(\"stroke-opacity\", g);\n          var t = b.outlineThickness;\n          b.adjustOutlineThickness && (t = t / a.zoomLevel() / a.mapScale);\n          l.setAttr(\"stroke-width\", t);\n        }\n\n        d.setCN(a, l, \"map-area-unlisted\");\n        k.getAreasFromMap && !m[l.id] && (t = new d.MapArea(a.theme), t.parentObject = k, t.id = l.id, t.outline = l.outline, k.areas.push(t));\n      }\n    },\n    createArea: function (a) {\n      var b = this.chart,\n          c = b.svgAreasById[a.id],\n          e = b.areasSettings;\n\n      if (c && c.className) {\n        var f = b.areasClasses[c.className];\n        f && (e = d.processObject(f, d.AreasSettings, b.theme));\n      }\n\n      var g = e.color,\n          h = e.alpha,\n          k = e.outlineThickness,\n          l = e.rollOverColor,\n          m = e.selectedColor,\n          n = e.rollOverAlpha,\n          p = e.rollOverBrightness,\n          t = e.outlineColor,\n          r = e.outlineAlpha,\n          q = e.balloonText,\n          y = e.selectable,\n          B = e.pattern,\n          u = e.rollOverOutlineColor,\n          w = e.bringForwardOnHover,\n          v = e.preserveOriginalAttributes;\n      this.allObjects.push(a);\n      a.chart = b;\n      a.baseSettings = e;\n      a.autoZoomReal = void 0 == a.autoZoom ? e.autoZoom : a.autoZoom;\n      f = a.color;\n      void 0 == f && (f = g);\n      var A = a.alpha;\n      isNaN(A) && (A = h);\n      h = a.rollOverAlpha;\n      isNaN(h) && (h = n);\n      isNaN(h) && (h = A);\n      n = a.rollOverColor;\n      void 0 == n && (n = l);\n      l = a.pattern;\n      void 0 == l && (l = B);\n      B = a.selectedColor;\n      void 0 == B && (B = m);\n      m = a.balloonText;\n      void 0 === m && (m = q);\n      void 0 == e.colorSolid || isNaN(a.value) || (q = Math.floor((a.value - this.minValue) / ((this.maxValue - this.minValue) / b.colorSteps)), q == b.colorSteps && q--, q *= 1 / (b.colorSteps - 1), this.maxValue == this.minValue && (q = 1), a.colorReal = d.getColorFade(f, e.colorSolid, q));\n      void 0 != a.color && (a.colorReal = a.color);\n      void 0 == a.selectable && (a.selectable = y);\n      void 0 == a.colorReal && (a.colorReal = g);\n      g = a.outlineColor;\n      void 0 == g && (g = t);\n      t = a.outlineAlpha;\n      isNaN(t) && (t = r);\n      r = a.outlineThickness;\n      isNaN(r) && (r = k);\n      k = a.rollOverOutlineColor;\n      void 0 == k && (k = u);\n      u = a.rollOverBrightness;\n      void 0 == u && (u = p);\n      void 0 == a.bringForwardOnHover && (a.bringForwardOnHover = w);\n      void 0 == a.preserveOriginalAttributes && (a.preserveOriginalAttributes = v);\n      isNaN(e.selectedBrightness) || (B = d.adjustLuminosity(a.colorReal, e.selectedBrightness / 100));\n      a.alphaReal = A;\n      a.rollOverColorReal = n;\n      a.rollOverAlphaReal = h;\n      a.balloonTextReal = m;\n      a.selectedColorReal = B;\n      a.outlineColorReal = g;\n      a.outlineAlphaReal = t;\n      a.rollOverOutlineColorReal = k;\n      a.outlineThicknessReal = r;\n      a.patternReal = l;\n      a.rollOverBrightnessReal = u;\n      a.accessibleLabel || (a.accessibleLabel = e.accessibleLabel);\n      d.processDescriptionWindow(e, a);\n\n      if (c && (p = c.area, w = c.title, a.enTitle = c.title, w && !a.title && (a.title = w), (c = b.language) ? (w = d.mapTranslations) && (c = w[c]) && c[a.enTitle] && (a.titleTr = c[a.enTitle]) : a.titleTr = void 0, p)) {\n        c = a.tabIndex;\n        void 0 === c && (c = e.tabIndex);\n        void 0 !== c && p.setAttr(\"tabindex\", c);\n        a.displayObject = p;\n        a.outline && (A = 0, a.alphaReal = 0, a.rollOverAlphaReal = 0, a.mouseEnabled = !1, b.outlines.push(p), p.node.setAttribute(\"pointer-events\", \"none\"));\n        a.mouseEnabled && b.addObjectEventListeners(p, a);\n        var C;\n        void 0 != f && (C = f);\n        void 0 != a.colorReal && (C = a.showAsSelected || b.selectedObject == a ? a.selectedColorReal : a.colorReal);\n        p.node.setAttribute(\"class\", \"\");\n        d.setCN(b, p, \"map-area\");\n        d.setCN(b, p, \"map-area-\" + p.id);\n        e.adjustOutlineThickness && (r = r / b.zoomLevel() / b.mapScale);\n        a.preserveOriginalAttributes || (p.setAttr(\"fill\", C), p.setAttr(\"stroke\", g), p.setAttr(\"stroke-opacity\", t), p.setAttr(\"stroke-width\", r), p.setAttr(\"fill-opacity\", A));\n        b.makeObjectAccessible(a);\n        l && p.pattern(l, b.mapScale, b.path);\n        a.hidden && p.hide();\n      }\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.AreasSettings = d.Class({\n    construct: function (a) {\n      this.cname = \"AreasSettings\";\n      this.alpha = 1;\n      this.autoZoom = !1;\n      this.balloonText = \"[[title]]\";\n      this.color = \"#FFCC00\";\n      this.colorSolid = \"#990000\";\n      this.unlistedAreasAlpha = 1;\n      this.unlistedAreasColor = \"#DDDDDD\";\n      this.outlineColor = \"#FFFFFF\";\n      this.outlineThickness = this.outlineAlpha = 1;\n      this.selectedColor = this.rollOverOutlineColor = \"#CC0000\";\n      this.unlistedAreasOutlineColor = \"#FFFFFF\";\n      this.unlistedAreasOutlineAlpha = 1;\n      this.descriptionWindowWidth = 250;\n      this.bringForwardOnHover = this.adjustOutlineThickness = !0;\n      this.accessibleLabel = \"[[title]] [[value]] [[description]]\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ImagesProcessor = d.Class({\n    construct: function (a) {\n      this.chart = a;\n      this.reset();\n    },\n    process: function (a) {\n      var b = a.images,\n          c;\n\n      for (c = b.length - 1; 0 <= c; c--) {\n        var d = b[c];\n        this.createImage(d, c);\n        d.parentArray = b;\n      }\n\n      this.counter = c;\n      a.parentObject && a.remainVisible && this.process(a.parentObject);\n    },\n    createImage: function (a, b) {\n      a = d.processObject(a, d.MapImage);\n      a.arrays = [];\n      isNaN(b) && (this.counter++, b = this.counter);\n      var c = this.chart,\n          e = c.container,\n          f = c.mapImagesContainer,\n          g = c.stageImagesContainer,\n          h = c.imagesSettings;\n      a.remove && a.remove();\n      var k = h.color,\n          l = h.alpha,\n          m = h.rollOverColor,\n          n = h.rollOverOutlineColor,\n          p = h.selectedColor,\n          t = h.balloonText,\n          r = h.outlineColor,\n          q = h.outlineAlpha,\n          y = h.outlineThickness,\n          B = h.selectedScale,\n          u = h.rollOverScale,\n          w = h.selectable,\n          v = h.labelPosition,\n          A = h.labelColor,\n          C = h.labelFontSize,\n          x = h.bringForwardOnHover,\n          z = h.labelRollOverColor,\n          F = h.rollOverBrightness,\n          E = h.selectedLabelColor;\n      a.index = b;\n      a.chart = c;\n      a.baseSettings = c.imagesSettings;\n      var H = e.set();\n      a.displayObject = H;\n      var G = a.color;\n      void 0 == G && (G = k);\n      k = a.alpha;\n      isNaN(k) && (k = l);\n      void 0 == a.bringForwardOnHover && (a.bringForwardOnHover = x);\n      l = a.outlineAlpha;\n      isNaN(l) && (l = q);\n      q = a.rollOverColor;\n      void 0 == q && (q = m);\n      m = a.selectedColor;\n      void 0 == m && (m = p);\n      p = a.balloonText;\n      void 0 === p && (p = t);\n      t = a.outlineColor;\n      void 0 == t && (t = r);\n      a.outlineColorReal = t;\n      r = a.outlineThickness;\n      isNaN(r) && (r = y);\n      (y = a.labelPosition) || (y = v);\n      v = a.labelColor;\n      void 0 == v && (v = A);\n      A = a.labelRollOverColor;\n      void 0 == A && (A = z);\n      z = a.selectedLabelColor;\n      void 0 == z && (z = E);\n      E = a.labelFontSize;\n      isNaN(E) && (E = C);\n      C = a.selectedScale;\n      isNaN(C) && (C = B);\n      B = a.rollOverScale;\n      isNaN(B) && (B = u);\n      u = a.rollOverBrightness;\n      void 0 == u && (u = F);\n      void 0 == a.selectable && (a.selectable = w);\n      a.colorReal = G;\n      isNaN(h.selectedBrightness) || (m = d.adjustLuminosity(a.colorReal, h.selectedBrightness / 100));\n      a.alphaReal = k;\n      a.rollOverColorReal = q;\n      a.balloonTextReal = p;\n      a.selectedColorReal = m;\n      a.labelColorReal = v;\n      a.labelRollOverColorReal = A;\n      a.selectedLabelColorReal = z;\n      a.labelFontSizeReal = E;\n      a.labelPositionReal = y;\n      a.selectedScaleReal = C;\n      a.rollOverScaleReal = B;\n      a.rollOverOutlineColorReal = n;\n      a.rollOverBrightnessReal = u;\n      a.accessibleLabel || (a.accessibleLabel = h.accessibleLabel);\n      d.processDescriptionWindow(h, a);\n      a.centeredReal = void 0 == a.centered ? h.centered : a.centered;\n      n = a.type;\n      u = a.imageURL;\n      B = a.svgPath;\n      C = a.width;\n      E = a.height;\n      w = a.scale;\n      isNaN(a.percentWidth) || (C = a.percentWidth / 100 * c.realWidth);\n      isNaN(a.percentHeight) || (E = a.percentHeight / 100 * c.realHeight);\n      var D;\n      u || n || B || (n = \"circle\", C = 1, l = k = 0);\n      q = F = 0;\n      h = a.selectedColorReal;\n\n      if (n) {\n        isNaN(C) && (C = 10);\n        isNaN(E) && (E = 10);\n        \"kilometers\" == a.widthAndHeightUnits && (C = c.kilometersToPixels(a.width), E = c.kilometersToPixels(a.height));\n        \"miles\" == a.widthAndHeightUnits && (C = c.milesToPixels(a.width), E = c.milesToPixels(a.height));\n        if (\"circle\" == n || \"bubble\" == n) E = C;\n        D = this.createPredefinedImage(G, t, r, n, C, E);\n        q = F = 0;\n        a.centeredReal ? (isNaN(a.right) || (F = C * w), isNaN(a.bottom) || (q = E * w)) : (F = C * w / 2, q = E * w / 2);\n        D.translate(F, q, w, !0);\n      } else u ? (isNaN(C) && (C = 10), isNaN(E) && (E = 10), D = e.image(u, 0, 0, C, E), D.node.setAttribute(\"preserveAspectRatio\", \"none\"), D.setAttr(\"opacity\", k), a.centeredReal && (F = isNaN(a.right) ? -C / 2 : C / 2, q = isNaN(a.bottom) ? -E / 2 : E / 2, D.translate(F, q, NaN, !0))) : B && (D = e.path(B), u = D.getBBox(), a.centeredReal ? (F = -u.x * w - u.width * w / 2, isNaN(a.right) || (F = -F), q = -u.y * w - u.height * w / 2, isNaN(a.bottom) || (q = -q)) : F = q = 0, D.translate(F, q, w, !0), D.x = F, D.y = q);\n\n      D && (H.push(D), a.image = D, D.setAttr(\"stroke-opacity\", l), D.setAttr(\"stroke-width\", r), D.setAttr(\"stroke\", t), D.setAttr(\"fill-opacity\", k), \"bubble\" != n && D.setAttr(\"fill\", G), d.setCN(c, D, \"map-image\"), void 0 != a.id && d.setCN(c, D, \"map-image-\" + a.id));\n      G = a.labelColorReal;\n      !a.showAsSelected && c.selectedObject != a || void 0 == h || (D && D.setAttr(\"fill\", h), G = a.selectedLabelColorReal);\n      D = null;\n      void 0 !== a.label && (D = d.text(e, a.label, G, c.fontFamily, a.labelFontSizeReal, a.labelAlign), d.setCN(c, D, \"map-image-label\"), void 0 !== a.id && d.setCN(c, D, \"map-image-label-\" + a.id), G = a.labelBackgroundAlpha, (k = a.labelBackgroundColor) && 0 < G && (l = D.getBBox(), e = d.rect(e, l.width + 16, l.height + 10, k, G), d.setCN(c, e, \"map-image-label-background\"), void 0 != a.id && d.setCN(c, e, \"map-image-label-background-\" + a.id), H.push(e), a.labelBG = e), a.imageLabel = D, H.push(D), d.setCN(c, H, \"map-image-container\"), void 0 != a.id && d.setCN(c, H, \"map-image-container-\" + a.id), this.labelsToReposition.push(a), a.arrays.push({\n        arr: this.labelsToReposition,\n        el: a\n      }));\n      e = isNaN(a.latitude) || isNaN(a.longitude) ? !0 : !1;\n      a.lineId && (D = this.chart.getObjectById(a.lineId)) && 0 < D.longitudes.length && (e = !1);\n      e ? g.push(H) : f.push(H);\n      H.toBack();\n      H && (H.rotation = a.rotation, isNaN(a.rotation) || H.rotate(a.rotation), a.arrays.push({\n        arr: this.allSvgObjects,\n        el: H\n      }), this.allSvgObjects.push(H));\n      this.allObjects.push(a);\n      c.makeObjectAccessible(a);\n      f = a.tabIndex;\n      void 0 === f && (f = c.imagesSettings.tabIndex);\n      void 0 !== f && H.setAttr(\"tabindex\", f);\n      a.arrays.push({\n        arr: this.allObjects,\n        el: a\n      });\n      isNaN(a.longitude) || isNaN(a.latitude) || !a.fixedSize || (a.objToResize = {\n        image: H,\n        mapImage: a,\n        scale: 1\n      }, this.objectsToResize.push(a.objToResize), a.arrays.push({\n        arr: this.objectsToResize,\n        el: a.objToResize\n      }));\n      this.updateSizeAndPosition(a);\n      a.mouseEnabled && c.addObjectEventListeners(H, a);\n      a.hidden && H.hide();\n      d.removeFromArray(c.updatableImages, a);\n      a.animateAlongLine && (c.updatableImages.push(a), a.delayAnimateAlong());\n      return a;\n    },\n    updateSizeAndPosition: function (a) {\n      var b = this.chart,\n          c = a.displayObject,\n          e = b.getX(a.left),\n          f = b.getY(a.top),\n          g,\n          h = a.image.getBBox();\n      isNaN(a.right) || (e = b.getX(a.right, !0) - h.width * a.scale);\n      isNaN(a.bottom) || (f = b.getY(a.bottom, !0) - h.height * a.scale);\n      var k = a.longitude,\n          l = a.latitude,\n          m = a.positionOnLine,\n          h = a.imageLabel,\n          n = this.chart.zoomLevel(),\n          p,\n          t;\n      a.lineId && (a.line = this.chart.getObjectById(a.lineId));\n\n      if (a.line && a.line.getCoordinates) {\n        a.line.chart = b;\n        var r = a.line.getCoordinates(m, a.lineSegment);\n        r && (k = b.coordinateToLongitude(r.x), l = b.coordinateToLatitude(r.y), p = r.x, t = r.y, a.animateAngle && (g = d.radiansToDegrees(r.angle)));\n      }\n\n      isNaN(g) || c.rotate(g + a.extraAngle);\n      if (!isNaN(e) && !isNaN(f)) c.translate(e, f, NaN, !0);else if (!isNaN(l) && !isNaN(k)) if (f = b.coordinatesToXY(k, l), e = f.x, f = f.y, isNaN(p) || (e = p), isNaN(t) || (f = t), a.fixedSize) {\n        p = a.positionScale;\n        isNaN(p) ? p = 0 : (--p, p *= 1 - 2 * Math.abs(m - .5));\n        if (m = a.objectToResize) m.scale = 1 + p;\n        c.translate(e, f, 1 / n + p, !0);\n      } else c.translate(e, f, NaN, !0);\n      this.positionLabel(h, a, a.labelPositionReal);\n    },\n    positionLabel: function (a, b, c) {\n      if (a) {\n        var d = b.image,\n            f = 0,\n            g = 0,\n            h = 0,\n            k = 0;\n        d && (k = d.getBBox(), g = d.y + k.y, f = d.x + k.x, h = k.width, k = k.height, b.svgPath && (h *= b.scale, k *= b.scale));\n        var d = a.getBBox(),\n            l = d.width,\n            m = d.height;\n        \"right\" == c && (f += h + l / 2 + 5, g += k / 2 - 2);\n        \"left\" == c && (f += -l / 2 - 5, g += k / 2 - 2);\n        \"top\" == c && (g -= m / 2 + 3, f += h / 2);\n        \"bottom\" == c && (g += k + m / 2, f += h / 2);\n        \"middle\" == c && (f += h / 2, g += k / 2);\n        a.translate(f + b.labelShiftX, g + b.labelShiftY, NaN, !0);\n        a = b.labelFontSizeReal;\n        b.labelBG && b.labelBG.translate(f - d.width / 2 + b.labelShiftX - 9, g - a / 2 + b.labelShiftY - 4, NaN, !0);\n      }\n    },\n    createPredefinedImage: function (a, b, c, e, f, g) {\n      var h = this.chart.container,\n          k;\n\n      switch (e) {\n        case \"circle\":\n          k = d.circle(h, f / 2, a, 1, c, b, 1);\n          break;\n\n        case \"rectangle\":\n          k = d.polygon(h, [-f / 2, f / 2, f / 2, -f / 2], [g / 2, g / 2, -g / 2, -g / 2], a, 1, c, b, 1, 0, !0);\n          break;\n\n        case \"bubble\":\n          k = d.circle(h, f / 2, a, 1, c, b, 1, !0);\n          break;\n\n        case \"hexagon\":\n          f /= Math.sqrt(3), k = d.polygon(h, [.866 * f, 0 * f, -.866 * f, -.866 * f, 0 * f, .866 * f], [.5 * f, 1 * f, .5 * f, -.5 * f, -1 * f, -.5 * f], a, 1, c, b, 1);\n      }\n\n      return k;\n    },\n    reset: function () {\n      this.objectsToResize = [];\n      this.allSvgObjects = [];\n      this.allObjects = [];\n      this.allLabels = [];\n      this.labelsToReposition = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ImagesSettings = d.Class({\n    construct: function (a) {\n      this.cname = \"ImagesSettings\";\n      this.balloonText = \"[[title]]\";\n      this.alpha = 1;\n      this.borderAlpha = 0;\n      this.borderThickness = 1;\n      this.labelPosition = \"right\";\n      this.labelColor = \"#000000\";\n      this.labelFontSize = 11;\n      this.color = \"#000000\";\n      this.labelRollOverColor = \"#00CC00\";\n      this.centered = !0;\n      this.rollOverScale = this.selectedScale = 1;\n      this.descriptionWindowWidth = 250;\n      this.bringForwardOnHover = !0;\n      this.outlineColor = \"transparent\";\n      this.adjustAnimationSpeed = !1;\n      this.baseAnimationDistance = 500;\n      this.pauseDuration = 0;\n      this.easingFunction = d.easeInOutQuad;\n      this.animationDuration = 3;\n      this.positionScale = 1;\n      this.accessibleLabel = \"[[title]] [[description]]\";\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.LinesProcessor = d.Class({\n    construct: function (a) {\n      this.chart = a;\n      this.reset();\n    },\n    process: function (a) {\n      var b = a.lines,\n          c;\n\n      for (c = 0; c < b.length; c++) {\n        var d = b[c];\n        this.createLine(d, c);\n        d.parentArray = b;\n      }\n\n      this.counter = c;\n      a.parentObject && a.remainVisible && this.process(a.parentObject);\n    },\n    createLine: function (a, b) {\n      a = d.processObject(a, d.MapLine);\n      isNaN(b) && (this.counter++, b = this.counter);\n      a.index = b;\n      a.remove && a.remove();\n      var c = this.chart,\n          e = c.linesSettings,\n          f = this.objectsToResize,\n          g = c.mapLinesContainer,\n          h = c.stageLinesContainer,\n          k = e.thickness,\n          l = e.dashLength,\n          m = e.arrow,\n          n = e.arrowSize,\n          p = e.arrowColor,\n          t = e.arrowAlpha,\n          r = e.color,\n          q = e.alpha,\n          y = e.rollOverColor,\n          B = e.selectedColor,\n          u = e.rollOverAlpha,\n          w = e.balloonText,\n          v = e.bringForwardOnHover,\n          A = e.arc,\n          C = e.rollOverBrightness,\n          x = c.container;\n      a.chart = c;\n      a.baseSettings = e;\n      var z = x.set();\n      a.displayObject = z;\n      var F = a.tabIndex;\n      void 0 === F && (F = e.tabIndex);\n      void 0 !== F && z.setAttr(\"tabindex\", F);\n      this.allSvgObjects.push(z);\n      a.arrays.push({\n        arr: this.allSvgObjects,\n        el: z\n      });\n      this.allObjects.push(a);\n      a.arrays.push({\n        arr: this.allObjects,\n        el: a\n      });\n      a.mouseEnabled && c.addObjectEventListeners(z, a);\n\n      if (a.remainVisible || c.selectedObject == a.parentObject) {\n        F = a.thickness;\n        isNaN(F) && (F = k);\n        k = a.dashLength;\n        isNaN(k) && (k = l);\n        l = a.color;\n        void 0 == l && (l = r);\n        r = a.alpha;\n        isNaN(r) && (r = q);\n        q = a.rollOverAlpha;\n        isNaN(q) && (q = u);\n        isNaN(q) && (q = r);\n        u = a.rollOverColor;\n        void 0 == u && (u = y);\n        y = a.selectedColor;\n        void 0 == y && (y = B);\n        B = a.balloonText;\n        void 0 === B && (B = w);\n        w = a.arc;\n        isNaN(w) && (w = A);\n        A = a.arrow;\n        if (!A || \"none\" == A && \"none\" != m) A = m;\n        m = a.arrowColor;\n        void 0 == m && (m = p);\n        void 0 == m && (m = l);\n        p = a.arrowAlpha;\n        isNaN(p) && (p = t);\n        isNaN(p) && (p = r);\n        t = a.arrowSize;\n        isNaN(t) && (t = n);\n        n = a.rollOverBrightness;\n        void 0 == n && (n = C);\n        a.colorReal = l;\n        a.arrowColor = m;\n        isNaN(e.selectedBrightness) || (y = d.adjustLuminosity(a.colorReal, e.selectedBrightness / 100));\n        a.alphaReal = r;\n        a.rollOverColorReal = u;\n        a.rollOverAlphaReal = q;\n        a.balloonTextReal = B;\n        a.selectedColorReal = y;\n        a.thicknessReal = F;\n        a.rollOverBrightnessReal = n;\n        a.accessibleLabel || (a.accessibleLabel = e.accessibleLabel);\n        void 0 === a.shiftArrow && (a.shiftArrow = e.shiftArrow);\n        void 0 == a.bringForwardOnHover && (a.bringForwardOnHover = v);\n        d.processDescriptionWindow(e, a);\n        v = this.processCoordinates(a.x, c.realWidth);\n        C = this.processCoordinates(a.y, c.realHeight);\n        n = a.longitudes;\n        e = a.latitudes;\n        q = n.length;\n        if (0 < q) for (v = [], C = [], u = 0; u < q; u++) B = c.coordinatesToXY(n[u], e[u]), v.push(B.x), C.push(B.y);\n\n        if (0 < v.length) {\n          a.segments = v.length;\n          d.dx = 0;\n          d.dy = 0;\n          var E,\n              H,\n              G,\n              q = 10 * (1 - Math.abs(w));\n          10 <= q && (q = NaN);\n          1 > q && (q = 1);\n          a.arcRadius = [];\n          a.distances = [];\n          n = c.mapContainer.scale;\n\n          if (isNaN(q)) {\n            for (q = 0; q < v.length - 1; q++) H = Math.sqrt(Math.pow(v[q + 1] - v[q], 2) + Math.pow(C[q + 1] - C[q], 2)), a.distances[q] = H;\n\n            q = d.line(x, v, C, l, 1, F / n, k, !1, !1, !0);\n            l = d.line(x, v, C, l, .001, 5 / n, k, !1, !1, !0);\n            q.setAttr(\"stroke-linecap\", \"round\");\n          } else {\n            u = 1;\n            0 > w && (u = 0);\n            B = {\n              fill: \"none\",\n              stroke: l,\n              \"stroke-opacity\": 1,\n              \"stroke-width\": F / n,\n              \"fill-opacity\": 0,\n              \"stroke-linecap\": \"round\"\n            };\n            void 0 !== k && 0 < k && (B[\"stroke-dasharray\"] = k);\n\n            for (var k = \"\", D = 0; D < v.length - 1; D++) {\n              var K = v[D],\n                  J = v[D + 1],\n                  L = C[D],\n                  O = C[D + 1];\n              H = Math.sqrt(Math.pow(J - K, 2) + Math.pow(O - L, 2));\n              G = H / 2 * q;\n              E = 270 + 180 * Math.acos(H / 2 / G) / Math.PI;\n              isNaN(E) && (E = 270);\n\n              if (K < J) {\n                var P = K,\n                    K = J,\n                    J = P,\n                    P = L,\n                    L = O,\n                    O = P;\n                E = -E;\n              }\n\n              0 < w && (E = -E);\n              k += \"M\" + K + \",\" + L + \"A\" + G + \",\" + G + \",0,0,\" + u + \",\" + J + \",\" + O;\n              a.arcRadius[D] = G;\n              a.distances[D] = H;\n            }\n\n            q = x.path(k).attr(B);\n            l = x.path(k).attr({\n              \"fill-opacity\": 0,\n              stroke: l,\n              \"stroke-width\": 5 / n,\n              \"stroke-opacity\": .001,\n              fill: \"none\"\n            });\n          }\n\n          d.setCN(c, q, \"map-line\");\n          void 0 != a.id && d.setCN(c, q, \"map-line-\" + a.id);\n          d.dx = .5;\n          d.dy = .5;\n          z.push(q);\n          z.push(l);\n          q.setAttr(\"opacity\", r);\n\n          if (\"none\" != A) {\n            var I, M, N;\n            if (\"end\" == A || \"both\" == A) u = v[v.length - 1], D = C[C.length - 1], 1 < v.length ? (B = v[v.length - 2], I = C[C.length - 2]) : (B = u, I = D), I = 180 * Math.atan((D - I) / (u - B)) / Math.PI, isNaN(E) || (I += E), M = u, N = D, I = 0 > u - B ? I - 90 : I + 90;\n            r = [-t / 2 - .5, -.5, t / 2 - .5];\n            k = [t, -.5, t];\n            a.shiftArrow && \"middle\" != A && (k = [0, 1.2 * -t, 0]);\n            \"both\" == A && (t = d.polygon(x, r, k, m, p, 1, m, p, void 0, !0), z.push(t), t.translate(M, N, 1 / n, !0), isNaN(I) || t.rotate(I), d.setCN(c, q, \"map-line-arrow\"), void 0 != a.id && d.setCN(c, q, \"map-line-arrow-\" + a.id), a.fixedSize && f.push(t));\n            if (\"start\" == A || \"both\" == A) t = v[0], N = C[0], 1 < v.length ? (u = v[1], M = C[1]) : (u = t, M = N), I = 180 * Math.atan((N - M) / (t - u)) / Math.PI, isNaN(E) || (I -= E), M = t, I = 0 > t - u ? I - 90 : I + 90;\n            \"middle\" == A && (u = v[v.length - 1], D = C[C.length - 1], 1 < v.length ? (B = v[v.length - 2], I = C[C.length - 2]) : (B = u, I = D), M = B + (u - B) / 2, N = I + (D - I) / 2, I = 180 * Math.atan((D - I) / (u - B)) / Math.PI, isNaN(E) || (E = H / 2, G -= Math.sqrt(G * G - E * E), 0 > w && (G = -G), E = Math.sin(I / 180 * Math.PI), -1 == E && (E = 1), M -= E * G, N += Math.cos(I / 180 * Math.PI) * G), I = 0 > u - B ? I - 90 : I + 90);\n            t = d.polygon(x, r, k, m, p, 1, m, p, void 0, !0);\n            d.setCN(c, q, \"map-line-arrow\");\n            void 0 != a.id && d.setCN(c, q, \"map-line-arrow-\" + a.id);\n            z.push(t);\n            t.translate(M, N, 1 / n, !0);\n            isNaN(I) || t.rotate(I);\n            a.fixedSize && (f.push(t), a.arrays.push({\n              arr: f,\n              el: t\n            }));\n            a.arrowSvg = t;\n          }\n\n          a.fixedSize && q && (f = {\n            line: q,\n            thickness: F\n          }, this.linesToResize.push(f), a.arrays.push({\n            arr: this.linesToResize,\n            el: f\n          }), f = {\n            line: l,\n            thickness: 5\n          }, this.linesToResize.push(f), a.arrays.push({\n            arr: this.linesToResize,\n            el: f\n          }));\n          a.lineSvg = q;\n          a.showAsSelected && !isNaN(y) && q.setAttr(\"stroke\", y);\n          0 < e.length ? g.push(z) : h.push(z);\n          a.hidden && z.hide();\n          c.makeObjectAccessible(a);\n        }\n      }\n    },\n    processCoordinates: function (a, b) {\n      var c = [],\n          d;\n\n      for (d = 0; d < a.length; d++) {\n        var f = a[d],\n            g = Number(f);\n        isNaN(g) && (g = Number(f.replace(\"%\", \"\")) * b / 100);\n        isNaN(g) || c.push(g);\n      }\n\n      return c;\n    },\n    reset: function () {\n      this.objectsToResize = [];\n      this.allSvgObjects = [];\n      this.allObjects = [];\n      this.linesToResize = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.LinesSettings = d.Class({\n    construct: function (a) {\n      this.cname = \"LinesSettings\";\n      this.balloonText = \"[[title]]\";\n      this.thickness = 1;\n      this.dashLength = 0;\n      this.arrowSize = 10;\n      this.arrowAlpha = 1;\n      this.arrow = \"none\";\n      this.color = \"#990000\";\n      this.descriptionWindowWidth = 250;\n      this.bringForwardOnHover = !0;\n      d.applyTheme(this, a, this.cname);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapObject = d.Class({\n    construct: function (a) {\n      this.fixedSize = this.mouseEnabled = !0;\n      this.images = [];\n      this.lines = [];\n      this.areas = [];\n      this.remainVisible = !0;\n      this.passZoomValuesToTarget = !1;\n      this.objectType = this.cname;\n      d.applyTheme(this, a, \"MapObject\");\n      this.arrays = [];\n    },\n    deleteObject: function () {\n      this.remove();\n      this.parentArray && d.removeFromArray(this.parentArray, this);\n      if (this.arrays) for (var a = 0; a < this.arrays.length; a++) d.removeFromArray(this.arrays[a].arr, this.arrays[a].el);\n      this.arrays = [];\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapArea = d.Class({\n    inherits: d.MapObject,\n    construct: function (a) {\n      this.cname = \"MapArea\";\n      d.MapArea.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n    },\n    validate: function () {\n      this.chart.areasProcessor.createArea(this);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapLine = d.Class({\n    inherits: d.MapObject,\n    construct: function (a) {\n      this.cname = \"MapLine\";\n      this.longitudes = [];\n      this.latitudes = [];\n      this.x = [];\n      this.y = [];\n      this.segments = 0;\n      this.arrow = \"none\";\n      d.MapLine.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n    },\n    validate: function () {\n      this.chart.linesProcessor.createLine(this);\n    },\n    remove: function () {\n      var a = this.displayObject;\n      a && a.remove();\n    },\n    getCoordinates: function (a, b) {\n      isNaN(b) && (b = 0);\n      isNaN(this.arc) || this.isValid || (this.isValid = !0, this.validate());\n\n      if (!isNaN(a)) {\n        var c, e, f, g, h, k;\n\n        if (1 < this.longitudes.length) {\n          e = this.chart.coordinatesToXY(this.longitudes[b], this.latitudes[b]);\n          var l = this.chart.coordinatesToXY(this.longitudes[b + 1], this.latitudes[b + 1]);\n          c = e.x;\n          f = l.x;\n          e = e.y;\n          g = l.y;\n        } else 1 < this.x.length && (c = this.x[b], f = this.x[b + 1], e = this.y[b], g = this.y[b + 1]);\n\n        l = Math.sqrt(Math.pow(f - c, 2) + Math.pow(g - e, 2));\n        c < f && !isNaN(this.arc) && 0 !== this.arc && (a = 1 - a);\n        h = c + (f - c) * a;\n        k = e + (g - e) * a;\n        var m = Math.atan2(g - e, f - c);\n\n        if (!isNaN(this.arc) && 0 !== this.arc && this.arcRadius) {\n          var n = 0;\n          c < f && (n = c, c = f, f = n, n = e, e = g, g = n, n = Math.PI);\n          k = this.arcRadius[b];\n          0 > this.arc && (l = -l);\n          h = c + (f - c) / 2 + Math.sqrt(k * k - l / 2 * (l / 2)) * (e - g) / l;\n          var p = e + (g - e) / 2 + Math.sqrt(k * k - l / 2 * (l / 2)) * (f - c) / l;\n          c = 180 * Math.atan2(e - p, c - h) / Math.PI;\n          f = 180 * Math.atan2(g - p, f - h) / Math.PI;\n          180 < f - c && (f -= 360);\n          m = d.degreesToRadians(c + (f - c) * a);\n          h += k * Math.cos(m);\n          k = p + k * Math.sin(m);\n          m = 0 < this.arc ? m + Math.PI / 2 : m - Math.PI / 2;\n          m += n;\n        }\n\n        this.distance = l;\n        return {\n          x: h,\n          y: k,\n          angle: m\n        };\n      }\n    },\n    fixToStage: function () {\n      if (0 < this.latitudes.length) {\n        this.y = [];\n\n        for (var a = 0; a < this.latitudes.length; a++) {\n          var b = this.chart.coordinatesToStageXY(this.longitudes[a], this.latitudes[a]);\n          this.y.push(b.y);\n          this.x.push(b.x);\n        }\n\n        this.latitudes = [];\n        this.longitudes = [];\n      }\n\n      this.validate();\n    },\n    fixToMap: function () {\n      if (0 < this.y.length) {\n        this.latitudes = [];\n\n        for (var a = 0; a < this.y.length; a++) {\n          var b = this.chart.stageXYToCoordinates(this.x[a], this.y[a]);\n          this.latitudes.push(b.latitude);\n          this.longitudes.push(b.longitude);\n        }\n\n        this.y = [];\n        this.x = [];\n      }\n\n      this.validate();\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapImage = d.Class({\n    inherits: d.MapObject,\n    construct: function (a) {\n      this.cname = \"MapImage\";\n      this.scale = 1;\n      this.widthAndHeightUnits = \"pixels\";\n      this.labelShiftY = this.labelShiftX = 0;\n      this.positionOnLine = .5;\n      this.direction = 1;\n      this.lineSegment = this.extraAngle = 0;\n      this.animateAngle = !0;\n      this.createEvents(\"animationStart\", \"animationEnd\");\n      d.MapImage.base.construct.call(this, a);\n      d.applyTheme(this, a, this.cname);\n      this.delayCounter = 0;\n    },\n    validate: function () {\n      this.chart.imagesProcessor.createImage(this);\n    },\n    updatePosition: function () {\n      this.chart.imagesProcessor.updateSizeAndPosition(this);\n    },\n    remove: function () {\n      var a = this.displayObject;\n      a && a.remove();\n      (a = this.imageLabel) && a.remove();\n    },\n    animateTo: function (a, b, c, d) {\n      isNaN(c) || (this.animationDuration = c);\n      d && (this.easingFunction = d);\n      this.finalX = a;\n      this.finalY = b;\n      isNaN(this.longitude) || (this.initialX = this.longitude);\n      isNaN(this.left) || (this.initialX = this.left);\n      isNaN(this.right) || (this.initialX = this.right);\n      isNaN(this.latitude) || (this.initialY = this.latitude);\n      isNaN(this.top) || (this.initialY = this.top);\n      isNaN(this.bottom) || (this.initialY = this.bottom);\n      this.animatingAlong = !1;\n      this.animate();\n    },\n    animateAlong: function (a, b, c) {\n      1 == this.positionOnLine && this.flipDirection && (this.direction = -1, this.extraAngle = 180);\n      isNaN(b) || (this.animationDuration = b);\n      c && (this.easingFunction = c);\n      a && (this.line = this.chart.getObjectById(a));\n      this.animateAlongLine = this.line;\n      this.animatingAlong = !0;\n      this.animate();\n    },\n    animate: function () {\n      var a = this.chart.imagesSettings,\n          b = this.animationDuration;\n      isNaN(b) && (b = a.animationDuration);\n      this.totalFrames = b * d.updateRate;\n      b = 1;\n      this.line && a.adjustAnimationSpeed && (this.line.distances && (b = this.line.distances[this.lineSegment] * this.chart.zoomLevel(), b = Math.abs(b / a.baseAnimationDistance)), this.totalFrames = Math.round(b * this.totalFrames));\n      this.frame = 0;\n      this.fire({\n        type: \"animationStart\",\n        chart: this.chart,\n        image: this,\n        lineSegment: this.lineSegment,\n        direction: this.direction\n      });\n    },\n    update: function () {\n      var a = this.totalFrames;\n      this.frame++;\n      this.delayCounter--;\n      0 === this.delayCounter && this.animateAlong();\n      if (!(0 < this.delayCounter)) if (this.frame <= a) {\n        this.updatePosition();\n        var b = this.chart.imagesSettings,\n            c = this.easingFunction;\n        c || (c = b.easingFunction);\n        a = c(0, this.frame, 0, 1, a);\n        -1 == this.direction && (a = 1 - a);\n        this.animatingAlong ? this.positionOnLine = a : (b = this.initialX + (this.finalX - this.initialX) * a, isNaN(this.longitude) || (this.longitude = b), isNaN(this.left) || (this.left = b), isNaN(this.right) || (this.right = b), a = this.initialY + (this.finalY - this.initialY) * a, isNaN(this.latitude) || (this.latitude = a), isNaN(this.top) || (this.top = a), isNaN(this.bottom) || (this.bottom = a));\n      } else this.frame == a + 1 && (this.fire({\n        type: \"animationEnd\",\n        chart: this.chart,\n        image: this,\n        lineSegment: this.lineSegment,\n        direction: this.direction\n      }), this.line && this.animatingAlong && (1 == this.direction ? this.lineSegment < this.line.segments - 2 ? (this.lineSegment++, this.delayAnimateAlong(), this.positionOnLine = 0) : this.flipDirection ? (this.direction = -1, this.extraAngle = 180, this.delayAnimateAlong()) : this.loop && (this.delayAnimateAlong(), this.lineSegment = 0) : 0 < this.lineSegment ? (this.lineSegment--, this.delayAnimateAlong(), this.positionOnLine = 0) : this.loop && this.flipDirection ? (this.direction = 1, this.extraAngle = 0, this.delayAnimateAlong()) : this.loop && this.delayAnimateAlong()));\n    },\n    delayAnimateAlong: function () {\n      this.animateAlongLine && (this.delayCounter = this.chart.imagesSettings.pauseDuration * d.updateRate);\n    },\n    fixToStage: function () {\n      if (!isNaN(this.longitude)) {\n        var a = this.chart.coordinatesToStageXY(this.longitude, this.latitude);\n        this.left = a.x;\n        this.top = a.y;\n        this.latitude = this.longitude = void 0;\n      }\n\n      this.validate();\n    },\n    fixToMap: function () {\n      if (!isNaN(this.left)) {\n        var a = this.chart.stageXYToCoordinates(this.left, this.top);\n        this.longitude = a.longitude;\n        this.latitude = a.latitude;\n        this.top = this.left = void 0;\n      }\n\n      this.validate();\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n\n  d.degreesToRadians = function (a) {\n    return a / 180 * Math.PI;\n  };\n\n  d.radiansToDegrees = function (a) {\n    return a / Math.PI * 180;\n  };\n\n  d.getColorFade = function (a, b, c) {\n    var e = d.hex2RGB(b);\n    b = e[0];\n    var f = e[1],\n        e = e[2],\n        g = d.hex2RGB(a);\n    a = g[0];\n    var h = g[1],\n        g = g[2];\n    a += Math.round((b - a) * c);\n    h += Math.round((f - h) * c);\n    g += Math.round((e - g) * c);\n    return \"rgb(\" + a + \",\" + h + \",\" + g + \")\";\n  };\n\n  d.hex2RGB = function (a) {\n    return [parseInt(a.substring(1, 3), 16), parseInt(a.substring(3, 5), 16), parseInt(a.substring(5, 7), 16)];\n  };\n\n  d.processDescriptionWindow = function (a, b) {\n    isNaN(b.descriptionWindowX) && (b.descriptionWindowX = a.descriptionWindowX);\n    isNaN(b.descriptionWindowY) && (b.descriptionWindowY = a.descriptionWindowY);\n    isNaN(b.descriptionWindowLeft) && (b.descriptionWindowLeft = a.descriptionWindowLeft);\n    isNaN(b.descriptionWindowRight) && (b.descriptionWindowRight = a.descriptionWindowRight);\n    isNaN(b.descriptionWindowTop) && (b.descriptionWindowTop = a.descriptionWindowTop);\n    isNaN(b.descriptionWindowBottom) && (b.descriptionWindowBottom = a.descriptionWindowBottom);\n    isNaN(b.descriptionWindowWidth) && (b.descriptionWindowWidth = a.descriptionWindowWidth);\n    isNaN(b.descriptionWindowHeight) && (b.descriptionWindowHeight = a.descriptionWindowHeight);\n  };\n\n  d.normalizePath = function (a) {\n    for (var b = \"\", c = d.parsePath(a.getAttribute(\"d\")), e, f, g = Infinity, h = -Infinity, k = Infinity, l = -Infinity, m = 0; m < c.length; m++) {\n      var n = c[m],\n          p = n.letter,\n          t = n.x,\n          n = n.y;\n      \"h\" == p && (p = \"L\", t += e, n = f);\n      \"H\" == p && (p = \"L\", n = f);\n      \"v\" == p && (p = \"L\", t = e, n += f);\n      \"V\" == p && (p = \"L\", t = e);\n      if (\"m\" === p || \"l\" === p) p = p.toUpperCase(), t += e, n += f;\n      t = d.roundTo(t, 3);\n      n = d.roundTo(n, 3);\n      e = t;\n      f = n;\n      t > h && (h = t);\n      t < g && (g = t);\n      n > l && (l = n);\n      n < k && (k = n);\n      b = \"z\" == p.toLowerCase() ? b + \"Z \" : b + (p + \" \" + t + \" \" + n + \" \");\n    }\n\n    a.setAttribute(\"d\", b);\n    return {\n      minX: g,\n      maxX: h,\n      minY: k,\n      maxY: l\n    };\n  };\n\n  d.mercatorLatitudeToRadians = function (a) {\n    return Math.log(Math.tan(Math.PI / 4 + d.degreesToRadians(a) / 2));\n  };\n\n  d.parsePath = function (a) {\n    a = a.match(/([MmLlHhVvZz]{1}[0-9.,\\-\\s]*)/g);\n\n    for (var b = [], c = 0; c < a.length; c++) {\n      var d = a[c].match(/([MmLlHhVvZz]{1})|([0-9.\\-]+)/g),\n          f = {\n        letter: d[0]\n      };\n\n      switch (d[0]) {\n        case \"Z\":\n        case \"Z\":\n        case \"z\":\n          break;\n\n        case \"V\":\n        case \"v\":\n          f.y = Number(d[1]);\n          break;\n\n        case \"H\":\n        case \"h\":\n          f.x = Number(d[1]);\n          break;\n\n        default:\n          f.x = Number(d[1]), f.y = Number(d[2]);\n      }\n\n      b.push(f);\n    }\n\n    return b;\n  };\n\n  d.acos = function (a) {\n    return 1 < a ? 0 : -1 > a ? Math.PI : Math.acos(a);\n  };\n\n  d.asin = function (a) {\n    return 1 < a ? Math.PI / 2 : -1 > a ? -Math.PI / 2 : Math.asin(a);\n  };\n\n  d.sinci = function (a) {\n    return a ? a / Math.sin(a) : 1;\n  };\n\n  d.asqrt = function (a) {\n    return 0 < a ? Math.sqrt(a) : 0;\n  };\n\n  d.winkel3 = function (a, b) {\n    var c = d.aitoff(a, b);\n    return [(c[0] + a / Math.PI * 2) / 2, (c[1] + b) / 2];\n  };\n\n  d.winkel3.invert = function (a, b) {\n    var c = a,\n        e = b,\n        f = 25,\n        g = Math.PI / 2;\n\n    do var h = Math.cos(e),\n        k = Math.sin(e),\n        l = Math.sin(2 * e),\n        m = k * k,\n        n = h * h,\n        p = Math.sin(c),\n        t = Math.cos(c / 2),\n        r = Math.sin(c / 2),\n        q = r * r,\n        y = 1 - n * t * t,\n        B = y ? d.acos(h * t) * Math.sqrt(u = 1 / y) : u = 0,\n        u,\n        y = .5 * (2 * B * h * r + c / g) - a,\n        w = .5 * (B * k + e) - b,\n        v = .5 * u * (n * q + B * h * t * m) + .5 / g,\n        A = u * (p * l / 4 - B * k * r),\n        k = .125 * u * (l * r - B * k * n * p),\n        m = .5 * u * (m * t + B * q * h) + .5,\n        h = A * k - m * v,\n        A = (w * A - y * m) / h,\n        y = (y * k - w * v) / h,\n        c = c - A,\n        e = e - y; while ((1E-6 < Math.abs(A) || 1E-6 < Math.abs(y)) && 0 < --f);\n\n    return [c, e];\n  };\n\n  d.aitoff = function (a, b) {\n    var c = Math.cos(b),\n        e = d.sinci(d.acos(c * Math.cos(a /= 2)));\n    return [2 * c * Math.sin(a) * e, Math.sin(b) * e];\n  };\n\n  d.orthographic = function (a, b) {\n    return [Math.cos(b) * Math.sin(a), Math.sin(b)];\n  };\n\n  d.equirectangular = function (a, b) {\n    return [a, b];\n  };\n\n  d.equirectangular.invert = function (a, b) {\n    return [a, b];\n  };\n\n  d.eckert5 = function (a, b) {\n    var c = Math.PI;\n    return [a * (1 + Math.cos(b)) / Math.sqrt(2 + c), 2 * b / Math.sqrt(2 + c)];\n  };\n\n  d.eckert5.invert = function (a, b) {\n    var c = Math.sqrt(2 + Math.PI),\n        d = b * c / 2;\n    return [c * a / (1 + Math.cos(d)), d];\n  };\n\n  d.eckert6 = function (a, b) {\n    for (var c = Math.PI, d = (1 + c / 2) * Math.sin(b), f = 0, g = Infinity; 10 > f && 1E-5 < Math.abs(g); f++) b -= g = (b + Math.sin(b) - d) / (1 + Math.cos(b));\n\n    d = Math.sqrt(2 + c);\n    return [a * (1 + Math.cos(b)) / d, 2 * b / d];\n  };\n\n  d.eckert6.invert = function (a, b) {\n    var c = 1 + Math.PI / 2,\n        e = Math.sqrt(c / 2);\n    return [2 * a * e / (1 + Math.cos(b *= e)), d.asin((b + Math.sin(b)) / c)];\n  };\n\n  d.mercator = function (a, b) {\n    b >= Math.PI / 2 - .02 && (b = Math.PI / 2 - .02);\n    b <= -Math.PI / 2 + .02 && (b = -Math.PI / 2 + .02);\n    return [a, Math.log(Math.tan(Math.PI / 4 + b / 2))];\n  };\n\n  d.mercator.invert = function (a, b) {\n    return [a, 2 * Math.atan(Math.exp(b)) - Math.PI / 2];\n  };\n\n  d.miller = function (a, b) {\n    return [a, 1.25 * Math.log(Math.tan(Math.PI / 4 + .4 * b))];\n  };\n\n  d.miller.invert = function (a, b) {\n    return [a, 2.5 * Math.atan(Math.exp(.8 * b)) - .625 * Math.PI];\n  };\n\n  d.eckert3 = function (a, b) {\n    var c = Math.PI,\n        d = Math.sqrt(c * (4 + c));\n    return [2 / d * a * (1 + Math.sqrt(1 - 4 * b * b / (c * c))), 4 / d * b];\n  };\n\n  d.eckert3.invert = function (a, b) {\n    var c = Math.PI,\n        e = Math.sqrt(c * (4 + c)) / 2;\n    return [a * e / (1 + d.asqrt(1 - b * b * (4 + c) / (4 * c))), b * e / 2];\n  };\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.MapData = d.Class({\n    inherits: d.MapObject,\n    construct: function () {\n      this.cname = \"MapData\";\n      d.MapData.base.construct.call(this);\n      this.projection = \"mercator\";\n      this.topLatitude = 90;\n      this.bottomLatitude = -90;\n      this.leftLongitude = -180;\n      this.rightLongitude = 180;\n      this.zoomLevel = 1;\n      this.getAreasFromMap = !1;\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.DescriptionWindow = d.Class({\n    construct: function () {},\n    show: function (a, b, c, d) {\n      var f = this;\n      f.chart = a;\n      var g = document.createElement(\"div\");\n      g.style.position = \"absolute\";\n      var h = a.classNamePrefix + \"-description-\";\n      g.className = \"ammapDescriptionWindow \" + h + \"div\";\n      f.div = g;\n      b.appendChild(g);\n      var k = \".gif\";\n      a.svgIcons && (k = \".svg\");\n      var l = document.createElement(\"img\");\n      l.className = \"ammapDescriptionWindowCloseButton \" + h + \"close-img\";\n      l.src = a.pathToImages + \"xIcon\" + k;\n      l.style.cssFloat = \"right\";\n      l.style.cursor = \"pointer\";\n\n      l.onclick = function () {\n        f.close();\n      };\n\n      l.onmouseover = function () {\n        l.src = a.pathToImages + \"xIconH\" + k;\n      };\n\n      l.onmouseout = function () {\n        l.src = a.pathToImages + \"xIcon\" + k;\n      };\n\n      g.appendChild(l);\n      b = document.createElement(\"div\");\n      b.className = \"ammapDescriptionTitle \" + h + \"title-div\";\n\n      b.onmousedown = function () {\n        f.div.style.zIndex = 1E3;\n      };\n\n      g.appendChild(b);\n      b.innerHTML = d;\n      d = b.offsetHeight;\n      b = document.createElement(\"div\");\n      b.className = \"ammapDescriptionText \" + h + \"text-div\";\n      b.style.maxHeight = f.maxHeight - d - 20 + \"px\";\n      g.appendChild(b);\n      b.innerHTML = c;\n    },\n    close: function () {\n      try {\n        this.div.parentNode.removeChild(this.div), this.chart.fireClosed();\n      } catch (a) {}\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ValueLegend = d.Class({\n    construct: function (a) {\n      this.cname = \"ValueLegend\";\n      this.enabled = !0;\n      this.showAsGradient = !1;\n      this.minValue = 0;\n      this.height = 12;\n      this.width = 200;\n      this.bottom = this.left = 10;\n      this.borderColor = \"#FFFFFF\";\n      this.borderAlpha = this.borderThickness = 1;\n      this.color = \"#000000\";\n      this.fontSize = 11;\n      d.applyTheme(this, a, this.cname);\n    },\n    init: function (a, b) {\n      if (this.enabled) {\n        var c = a.areasSettings.color,\n            e = a.areasSettings.colorSolid,\n            f = a.colorSteps;\n        d.remove(this.set);\n        var g = b.set();\n        this.set = g;\n        d.setCN(a, g, \"value-legend\");\n        var h = 0,\n            k = this.minValue,\n            l = this.fontSize,\n            m = a.fontFamily,\n            n = this.color,\n            p = {\n          precision: a.precision,\n          decimalSeparator: a.decimalSeparator,\n          thousandsSeparator: a.thousandsSeparator\n        };\n        void 0 == k && (k = d.formatNumber(a.minValueReal, p));\n        void 0 !== k && (h = d.text(b, k, n, m, l, \"left\"), h.translate(0, l / 2 - 1), d.setCN(a, h, \"value-legend-min-label\"), g.push(h), h = h.getBBox().height);\n        k = this.maxValue;\n        void 0 === k && (k = d.formatNumber(a.maxValueReal, p));\n        void 0 !== k && (h = d.text(b, k, n, m, l, \"right\"), h.translate(this.width, l / 2 - 1), d.setCN(a, h, \"value-legend-max-label\"), g.push(h), h = h.getBBox().height);\n        if (this.showAsGradient) c = d.rect(b, this.width, this.height, [c, e], 1, this.borderThickness, this.borderColor, 1, 0, 0), d.setCN(a, c, \"value-legend-gradient\"), c.translate(0, h), g.push(c);else for (l = this.width / f, m = 0; m < f; m++) n = d.getColorFade(c, e, 1 * m / (f - 1)), n = d.rect(b, l, this.height, n, 1, this.borderThickness, this.borderColor, 1), d.setCN(a, n, \"value-legend-color\"), d.setCN(a, n, \"value-legend-color-\" + m), n.translate(l * m, h), g.push(n);\n        e = c = 0;\n        f = g.getBBox();\n        h = a.getY(this.bottom, !0);\n        l = a.getY(this.top);\n        m = a.getX(this.right, !0);\n        n = a.getX(this.left);\n        isNaN(l) || (c = l);\n        isNaN(h) || (c = h - f.height);\n        isNaN(n) || (e = n);\n        isNaN(m) || (e = m - f.width);\n        g.translate(e, c);\n      } else d.remove(this.set);\n    }\n  });\n})();\n\n(function () {\n  var d = window.AmCharts;\n  d.ObjectList = d.Class({\n    construct: function (a) {\n      this.divId = a;\n    },\n    init: function (a) {\n      this.chart = a;\n      var b = this.divId;\n      this.container && (b = this.container);\n      this.div = \"object\" != typeof b ? document.getElementById(b) : b;\n      b = document.createElement(\"div\");\n      b.className = \"ammapObjectList \" + a.classNamePrefix + \"-object-list-div\";\n      this.div.appendChild(b);\n      this.addObjects(a.dataProvider, b);\n    },\n    addObjects: function (a, b) {\n      var c = this.chart,\n          d = document.createElement(\"ul\");\n      d.className = c.classNamePrefix + \"-object-list-ul\";\n      var f;\n      if (a.areas) for (f = 0; f < a.areas.length; f++) {\n        var g = a.areas[f];\n        void 0 === g.showInList && (g.showInList = c.showAreasInList);\n        this.addObject(g, d);\n      }\n      if (a.images) for (f = 0; f < a.images.length; f++) g = a.images[f], void 0 === g.showInList && (g.showInList = c.showImagesInList), this.addObject(g, d);\n      if (a.lines) for (f = 0; f < a.lines.length; f++) g = a.lines[f], void 0 === g.showInList && (g.showInList = c.showLinesInList), this.addObject(g, d);\n      0 < d.childNodes.length && b.appendChild(d);\n    },\n    addObject: function (a, b) {\n      var c = this;\n\n      if (a.showInList && void 0 !== a.title) {\n        var d = c.chart,\n            f = document.createElement(\"li\");\n        f.className = d.classNamePrefix + \"-object-list-li\";\n        var g = a.titleTr;\n        g || (g = a.title);\n        var g = document.createTextNode(g),\n            h = document.createElement(\"a\");\n        h.className = d.classNamePrefix + \"-object-list-a\";\n        h.appendChild(g);\n        f.appendChild(h);\n        b.appendChild(f);\n        this.addObjects(a, f);\n\n        h.onmouseover = function () {\n          c.chart.rollOverMapObject(a, !1);\n        };\n\n        h.onmouseout = function () {\n          c.chart.rollOutMapObject(a);\n        };\n\n        h.onclick = function () {\n          c.chart.clickMapObject(a);\n        };\n      }\n    }\n  });\n})();","map":null,"metadata":{},"sourceType":"script"}