{"ast":null,"code":"import { __decorate, __metadata } from \"tslib\";\nimport { Component, ElementRef, ViewChild } from '@angular/core';\nimport { animate, AUTO_STYLE, state, style, transition, trigger } from '@angular/animations';\nimport { MenuItems } from '../../shared/menu-items/menu-items';\nlet AdminComponent = class AdminComponent {\n  constructor(menuItems) {\n    this.menuItems = menuItems;\n    this.navType = 'st5';\n    this.themeLayout = 'vertical';\n    this.vNavigationView = 'view1';\n    this.verticalPlacement = 'left';\n    this.verticalLayout = 'wide';\n    this.deviceType = 'desktop';\n    this.verticalNavType = 'expanded';\n    this.verticalEffect = 'shrink';\n    this.pcodedHeaderPosition = 'fixed';\n    this.pcodedSidebarPosition = 'fixed';\n    this.headerTheme = 'theme1';\n    this.logoTheme = 'theme1';\n    this.toggleOn = true;\n    this.headerFixedMargin = '80px';\n    this.navBarTheme = 'themelight1';\n    this.activeItemTheme = 'theme4';\n    this.isCollapsedMobile = 'no-block';\n    this.isCollapsedSideBar = 'no-block';\n    this.chatToggle = 'out';\n    this.chatToggleInverse = 'in';\n    this.chatInnerToggle = 'off';\n    this.chatInnerToggleInverse = 'on';\n    this.menuTitleTheme = 'theme5';\n    this.itemBorder = true;\n    this.itemBorderStyle = 'none';\n    this.subItemBorder = true;\n    this.subItemIcon = 'style6';\n    this.dropDownIcon = 'style1';\n    this.isSidebarChecked = true;\n    this.isHeaderChecked = true;\n    const scrollHeight = window.screen.height - 150;\n    this.innerHeight = scrollHeight + 'px';\n    this.windowWidth = window.innerWidth;\n    this.setMenuAttributes(this.windowWidth); // dark\n\n    /*this.setLayoutType('dark');\r\n    this.headerTheme = 'theme5';\r\n    this.logoTheme = 'theme5';*/\n    // light-dark\n\n    /*this.setLayoutType('dark');\r\n    this.setNavBarTheme('themelight1');\r\n    this.navType = 'st2';*/\n    // dark-light\n    // this.setNavBarTheme('theme1');\n    // this.navType = 'st3';\n  }\n\n  ngOnInit() {\n    this.setBackgroundPattern('pattern2');\n  }\n\n  onResize(event) {\n    this.innerHeight = event.target.innerHeight + 'px';\n    /* menu responsive */\n\n    this.windowWidth = event.target.innerWidth;\n    let reSizeFlag = true;\n\n    if (this.deviceType === 'tablet' && this.windowWidth >= 768 && this.windowWidth <= 1024) {\n      reSizeFlag = false;\n    } else if (this.deviceType === 'mobile' && this.windowWidth < 768) {\n      reSizeFlag = false;\n    }\n    /* for check device */\n\n\n    if (reSizeFlag) {\n      this.setMenuAttributes(this.windowWidth);\n    }\n  }\n\n  setMenuAttributes(windowWidth) {\n    if (windowWidth >= 768 && windowWidth <= 1024) {\n      this.deviceType = 'tablet';\n      this.verticalNavType = 'offcanvas';\n      this.verticalEffect = 'push';\n    } else if (windowWidth < 768) {\n      this.deviceType = 'mobile';\n      this.verticalNavType = 'offcanvas';\n      this.verticalEffect = 'overlay';\n    } else {\n      this.deviceType = 'desktop';\n      this.verticalNavType = 'expanded';\n      this.verticalEffect = 'shrink';\n    }\n  }\n\n  toggleOpened() {\n    if (this.windowWidth < 768) {\n      this.toggleOn = this.verticalNavType === 'offcanvas' ? true : this.toggleOn;\n    }\n\n    this.verticalNavType = this.verticalNavType === 'expanded' ? 'offcanvas' : 'expanded';\n  }\n\n  onClickedOutside(e) {\n    if (this.windowWidth < 768 && this.toggleOn && this.verticalNavType !== 'offcanvas') {\n      this.toggleOn = true;\n      this.verticalNavType = 'offcanvas';\n    }\n  }\n\n  onMobileMenu() {\n    this.isCollapsedMobile = this.isCollapsedMobile === 'yes-block' ? 'no-block' : 'yes-block';\n  }\n\n  toggleChat() {\n    this.chatToggle = this.chatToggle === 'out' ? 'in' : 'out';\n    this.chatToggleInverse = this.chatToggleInverse === 'out' ? 'in' : 'out';\n    this.chatInnerToggle = 'off';\n    this.chatInnerToggleInverse = 'off';\n  }\n\n  toggleChatInner() {\n    this.chatInnerToggle = this.chatInnerToggle === 'off' ? 'on' : 'off';\n    this.chatInnerToggleInverse = this.chatInnerToggleInverse === 'off' ? 'on' : 'off';\n  }\n\n  searchFriendList(e) {\n    const search = this.search_friends.nativeElement.value.toLowerCase();\n    let search_input;\n    let search_parent;\n    const friendList = document.querySelectorAll('.userlist-box .media-body .chat-header');\n    Array.prototype.forEach.call(friendList, function (elements, index) {\n      search_input = elements.innerHTML.toLowerCase();\n      search_parent = elements.parentNode.parentNode;\n\n      if (search_input.indexOf(search) !== -1) {\n        search_parent.classList.add('show');\n        search_parent.classList.remove('hide');\n      } else {\n        search_parent.classList.add('hide');\n        search_parent.classList.remove('show');\n      }\n    });\n  }\n\n  toggleOpenedSidebar() {\n    this.isCollapsedSideBar = this.isCollapsedSideBar === 'yes-block' ? 'no-block' : 'yes-block';\n  }\n\n  toggleRightbar() {\n    this.configOpenRightBar = this.configOpenRightBar === 'open' ? '' : 'open';\n  }\n\n  setSidebarPosition() {\n    this.isSidebarChecked = !this.isSidebarChecked;\n    this.pcodedSidebarPosition = this.isSidebarChecked === true ? 'fixed' : 'absolute';\n  }\n\n  setHeaderPosition() {\n    this.isHeaderChecked = !this.isHeaderChecked;\n    this.pcodedHeaderPosition = this.isHeaderChecked === true ? 'fixed' : 'relative';\n    this.headerFixedMargin = this.isHeaderChecked === true ? '80px' : '';\n  }\n\n  setBackgroundPattern(pattern) {\n    document.querySelector('body').setAttribute('themebg-pattern', pattern);\n  }\n\n  setLayoutType(type) {\n    this.layoutType = type;\n\n    if (type === 'dark') {\n      this.headerTheme = 'theme6';\n      this.navBarTheme = 'theme1';\n      this.logoTheme = 'theme6';\n      document.querySelector('body').classList.add('dark');\n    } else {\n      this.headerTheme = 'theme1';\n      this.navBarTheme = 'themelight1';\n      this.logoTheme = 'theme1';\n      document.querySelector('body').classList.remove('dark');\n    }\n  }\n\n  setNavBarTheme(theme) {\n    if (theme === 'themelight1') {\n      this.navBarTheme = 'themelight1';\n    } else {\n      this.navBarTheme = 'theme1';\n    }\n  }\n\n};\n\n__decorate([ViewChild('searchFriends',\n/* TODO: add static flag */\n{\n  static: false\n}), __metadata(\"design:type\", ElementRef)], AdminComponent.prototype, \"search_friends\", void 0);\n\nAdminComponent = __decorate([Component({\n  selector: 'app-admin',\n  templateUrl: './admin.component.html',\n  styleUrls: ['./admin.component.scss'],\n  animations: [trigger('mobileMenuTop', [state('no-block, void', style({\n    overflow: 'hidden',\n    height: '0px'\n  })), state('yes-block', style({\n    height: AUTO_STYLE\n  })), transition('no-block <=> yes-block', [animate('400ms ease-in-out')])]), trigger('slideInOut', [state('in', style({\n    transform: 'translate3d(0, 0, 0)'\n  })), state('out', style({\n    transform: 'translate3d(100%, 0, 0)'\n  })), transition('in => out', animate('400ms ease-in-out')), transition('out => in', animate('400ms ease-in-out'))]), trigger('slideOnOff', [state('on', style({\n    transform: 'translate3d(0, 0, 0)'\n  })), state('off', style({\n    transform: 'translate3d(100%, 0, 0)'\n  })), transition('on => off', animate('400ms ease-in-out')), transition('off => on', animate('400ms ease-in-out'))]), trigger('fadeInOutTranslate', [transition(':enter', [style({\n    opacity: 0\n  }), animate('400ms ease-in-out', style({\n    opacity: 1\n  }))]), transition(':leave', [style({\n    transform: 'translate(0)'\n  }), animate('400ms ease-in-out', style({\n    opacity: 0\n  }))])])]\n}), __metadata(\"design:paramtypes\", [MenuItems])], AdminComponent);\nexport { AdminComponent };","map":null,"metadata":{},"sourceType":"module"}